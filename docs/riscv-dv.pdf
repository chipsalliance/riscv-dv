%PDF-1.4
%“Œ‹ž ReportLab Generated PDF document http://www.reportlab.com
1 0 obj
<<
/F1 2 0 R /F2 3 0 R /F3 62 0 R /F4 64 0 R /F5 65 0 R /F6 77 0 R 
  /F7 78 0 R
>>
endobj
2 0 obj
<<
/BaseFont /Helvetica /Encoding /WinAnsiEncoding /Name /F1 /Subtype /Type1 /Type /Font
>>
endobj
3 0 obj
<<
/BaseFont /Helvetica-Bold /Encoding /WinAnsiEncoding /Name /F2 /Subtype /Type1 /Type /Font
>>
endobj
4 0 obj
<<
/Contents 125 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 124 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
5 0 obj
<<
/Contents 126 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 124 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
6 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 66 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 40.01575 754.0394 223.3857 766.0394 ] /Subtype /Link /Type /Annot
>>
endobj
7 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 66 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 549.6998 754.7894 555.2598 766.7894 ] /Subtype /Link /Type /Annot
>>
endobj
8 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 66 0 R /XYZ 40.01575 747.0394 0 ] /Rect [ 60.01575 736.0394 101.6857 748.0394 ] /Subtype /Link /Type /Annot
>>
endobj
9 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 66 0 R /XYZ 40.01575 747.0394 0 ] /Rect [ 549.6998 736.7894 555.2598 748.7894 ] /Subtype /Link /Type /Annot
>>
endobj
10 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 66 0 R /XYZ 40.01575 381.8394 0 ] /Rect [ 60.01575 718.0394 127.2757 730.0394 ] /Subtype /Link /Type /Annot
>>
endobj
11 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 66 0 R /XYZ 40.01575 381.8394 0 ] /Rect [ 549.6998 718.7894 555.2598 730.7894 ] /Subtype /Link /Type /Annot
>>
endobj
12 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 66 0 R /XYZ 40.01575 346.6394 0 ] /Rect [ 80.01575 700.0394 138.3657 712.0394 ] /Subtype /Link /Type /Annot
>>
endobj
13 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 66 0 R /XYZ 40.01575 346.6394 0 ] /Rect [ 549.6998 700.7894 555.2598 712.7894 ] /Subtype /Link /Type /Annot
>>
endobj
14 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 66 0 R /XYZ 40.01575 271.8394 0 ] /Rect [ 80.01575 682.0394 156.6957 694.0394 ] /Subtype /Link /Type /Annot
>>
endobj
15 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 66 0 R /XYZ 40.01575 271.8394 0 ] /Rect [ 549.6998 682.7894 555.2598 694.7894 ] /Subtype /Link /Type /Annot
>>
endobj
16 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 74 0 R /XYZ 40.01575 677.4394 0 ] /Rect [ 80.01575 664.0394 248.3957 676.0394 ] /Subtype /Link /Type /Annot
>>
endobj
17 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 74 0 R /XYZ 40.01575 677.4394 0 ] /Rect [ 549.6998 664.7894 555.2598 676.7894 ] /Subtype /Link /Type /Annot
>>
endobj
18 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 74 0 R /XYZ 40.01575 499.8394 0 ] /Rect [ 80.01575 646.0394 239.5157 658.0394 ] /Subtype /Link /Type /Annot
>>
endobj
19 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 74 0 R /XYZ 40.01575 499.8394 0 ] /Rect [ 549.6998 646.7894 555.2598 658.7894 ] /Subtype /Link /Type /Annot
>>
endobj
20 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 74 0 R /XYZ 40.01575 136.2394 0 ] /Rect [ 80.01575 628.0394 179.5157 640.0394 ] /Subtype /Link /Type /Annot
>>
endobj
21 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 74 0 R /XYZ 40.01575 136.2394 0 ] /Rect [ 549.6998 628.7894 555.2598 640.7894 ] /Subtype /Link /Type /Annot
>>
endobj
22 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 76 0 R /XYZ 40.01575 285.0394 0 ] /Rect [ 80.01575 610.0394 165.0457 622.0394 ] /Subtype /Link /Type /Annot
>>
endobj
23 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 76 0 R /XYZ 40.01575 285.0394 0 ] /Rect [ 549.6998 610.7894 555.2598 622.7894 ] /Subtype /Link /Type /Annot
>>
endobj
24 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 79 0 R /XYZ 40.01575 692.2394 0 ] /Rect [ 80.01575 592.0394 205.6157 604.0394 ] /Subtype /Link /Type /Annot
>>
endobj
25 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 79 0 R /XYZ 40.01575 692.2394 0 ] /Rect [ 549.6998 592.7894 555.2598 604.7894 ] /Subtype /Link /Type /Annot
>>
endobj
26 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 79 0 R /XYZ 40.01575 518.6394 0 ] /Rect [ 60.01575 574.0394 119.4857 586.0394 ] /Subtype /Link /Type /Annot
>>
endobj
27 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 79 0 R /XYZ 40.01575 518.6394 0 ] /Rect [ 549.6998 574.7894 555.2598 586.7894 ] /Subtype /Link /Type /Annot
>>
endobj
28 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 79 0 R /XYZ 40.01575 483.4394 0 ] /Rect [ 80.01575 556.0394 334.5757 568.0394 ] /Subtype /Link /Type /Annot
>>
endobj
29 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 79 0 R /XYZ 40.01575 483.4394 0 ] /Rect [ 549.6998 556.7894 555.2598 568.7894 ] /Subtype /Link /Type /Annot
>>
endobj
30 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 82 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 80.01575 538.0394 183.9457 550.0394 ] /Subtype /Link /Type /Annot
>>
endobj
31 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 82 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 549.6998 538.7894 555.2598 550.7894 ] /Subtype /Link /Type /Annot
>>
endobj
32 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 82 0 R /XYZ 40.01575 493.4394 0 ] /Rect [ 80.01575 520.0394 189.5057 532.0394 ] /Subtype /Link /Type /Annot
>>
endobj
33 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 82 0 R /XYZ 40.01575 493.4394 0 ] /Rect [ 549.6998 520.7894 555.2598 532.7894 ] /Subtype /Link /Type /Annot
>>
endobj
34 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 84 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 80.01575 502.0394 225.6457 514.0394 ] /Subtype /Link /Type /Annot
>>
endobj
35 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 84 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 549.6998 502.7894 555.2598 514.7894 ] /Subtype /Link /Type /Annot
>>
endobj
36 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 84 0 R /XYZ 40.01575 294.2394 0 ] /Rect [ 80.01575 484.0394 272.3057 496.0394 ] /Subtype /Link /Type /Annot
>>
endobj
37 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 84 0 R /XYZ 40.01575 294.2394 0 ] /Rect [ 549.6998 484.7894 555.2598 496.7894 ] /Subtype /Link /Type /Annot
>>
endobj
38 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 87 0 R /XYZ 40.01575 492.2394 0 ] /Rect [ 80.01575 466.0394 266.7457 478.0394 ] /Subtype /Link /Type /Annot
>>
endobj
39 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 87 0 R /XYZ 40.01575 492.2394 0 ] /Rect [ 549.6998 466.7894 555.2598 478.7894 ] /Subtype /Link /Type /Annot
>>
endobj
40 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 87 0 R /XYZ 40.01575 362.6394 0 ] /Rect [ 100.0157 448.0394 272.3157 460.0394 ] /Subtype /Link /Type /Annot
>>
endobj
41 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 87 0 R /XYZ 40.01575 362.6394 0 ] /Rect [ 549.6998 448.7894 555.2598 460.7894 ] /Subtype /Link /Type /Annot
>>
endobj
42 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 87 0 R /XYZ 40.01575 223.4394 0 ] /Rect [ 100.0157 430.0394 187.8457 442.0394 ] /Subtype /Link /Type /Annot
>>
endobj
43 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 87 0 R /XYZ 40.01575 223.4394 0 ] /Rect [ 549.6998 430.7894 555.2598 442.7894 ] /Subtype /Link /Type /Annot
>>
endobj
44 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 91 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 60.01575 412.0394 182.8457 424.0394 ] /Subtype /Link /Type /Annot
>>
endobj
45 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 91 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 549.6998 412.7894 555.2598 424.7894 ] /Subtype /Link /Type /Annot
>>
endobj
46 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 91 0 R /XYZ 40.01575 481.8394 0 ] /Rect [ 60.01575 394.0394 128.9257 406.0394 ] /Subtype /Link /Type /Annot
>>
endobj
47 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 91 0 R /XYZ 40.01575 481.8394 0 ] /Rect [ 549.6998 394.7894 555.2598 406.7894 ] /Subtype /Link /Type /Annot
>>
endobj
48 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 91 0 R /XYZ 40.01575 446.6394 0 ] /Rect [ 60.01575 376.0394 133.3757 388.0394 ] /Subtype /Link /Type /Annot
>>
endobj
49 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 91 0 R /XYZ 40.01575 446.6394 0 ] /Rect [ 549.6998 376.7894 555.2598 388.7894 ] /Subtype /Link /Type /Annot
>>
endobj
50 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 91 0 R /XYZ 40.01575 411.4394 0 ] /Rect [ 80.01575 358.0394 252.8457 370.0394 ] /Subtype /Link /Type /Annot
>>
endobj
51 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 91 0 R /XYZ 40.01575 411.4394 0 ] /Rect [ 549.6998 358.7894 555.2598 370.7894 ] /Subtype /Link /Type /Annot
>>
endobj
52 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 93 0 R /XYZ 40.01575 557.4394 0 ] /Rect [ 60.01575 340.0394 208.4157 352.0394 ] /Subtype /Link /Type /Annot
>>
endobj
53 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 93 0 R /XYZ 40.01575 557.4394 0 ] /Rect [ 549.6998 340.7894 555.2598 352.7894 ] /Subtype /Link /Type /Annot
>>
endobj
54 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 93 0 R /XYZ 40.01575 522.2394 0 ] /Rect [ 60.01575 322.0394 133.9257 334.0394 ] /Subtype /Link /Type /Annot
>>
endobj
55 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 93 0 R /XYZ 40.01575 522.2394 0 ] /Rect [ 549.6998 322.7894 555.2598 334.7894 ] /Subtype /Link /Type /Annot
>>
endobj
56 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 93 0 R /XYZ 40.01575 487.0394 0 ] /Rect [ 60.01575 304.0394 176.7257 316.0394 ] /Subtype /Link /Type /Annot
>>
endobj
57 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 93 0 R /XYZ 40.01575 487.0394 0 ] /Rect [ 549.6998 304.7894 555.2598 316.7894 ] /Subtype /Link /Type /Annot
>>
endobj
58 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 93 0 R /XYZ 40.01575 451.8394 0 ] /Rect [ 40.01575 286.0394 126.7157 298.0394 ] /Subtype /Link /Type /Annot
>>
endobj
59 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 93 0 R /XYZ 40.01575 451.8394 0 ] /Rect [ 549.6998 286.7894 555.2598 298.7894 ] /Subtype /Link /Type /Annot
>>
endobj
60 0 obj
<<
/Annots [ 6 0 R 7 0 R 8 0 R 9 0 R 10 0 R 11 0 R 12 0 R 13 0 R 14 0 R 15 0 R 
  16 0 R 17 0 R 18 0 R 19 0 R 20 0 R 21 0 R 22 0 R 23 0 R 24 0 R 25 0 R 
  26 0 R 27 0 R 28 0 R 29 0 R 30 0 R 31 0 R 32 0 R 33 0 R 34 0 R 35 0 R 
  36 0 R 37 0 R 38 0 R 39 0 R 40 0 R 41 0 R 42 0 R 43 0 R 44 0 R 45 0 R 
  46 0 R 47 0 R 48 0 R 49 0 R 50 0 R 51 0 R 52 0 R 53 0 R 54 0 R 55 0 R 
  56 0 R 57 0 R 58 0 R 59 0 R ] /Contents 127 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 124 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
61 0 obj
<<
/Contents 128 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 124 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
62 0 obj
<<
/BaseFont /Helvetica-BoldOblique /Encoding /WinAnsiEncoding /Name /F3 /Subtype /Type1 /Type /Font
>>
endobj
63 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://git-scm.com/)
>> /Border [ 0 0 0 ] /Rect [ 91.91575 216.0394 102.4757 228.0394 ] /Subtype /Link /Type /Annot
>>
endobj
64 0 obj
<<
/BaseFont /Courier /Encoding /WinAnsiEncoding /Name /F4 /Subtype /Type1 /Type /Font
>>
endobj
65 0 obj
<<
/BaseFont /Helvetica-Oblique /Encoding /WinAnsiEncoding /Name /F5 /Subtype /Type1 /Type /Font
>>
endobj
66 0 obj
<<
/Annots [ 63 0 R ] /Contents 129 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 124 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
67 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://github.com/riscv/riscv-gcc)
>> /Border [ 0 0 0 ] /Rect [ 91.91575 633.6394 131.3557 645.6394 ] /Subtype /Link /Type /Annot
>>
endobj
68 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://github.com/riscv/riscv-isa-sim#)
>> /Border [ 0 0 0 ] /Rect [ 86.01575 435.0394 109.3557 447.0394 ] /Subtype /Link /Type /Annot
>>
endobj
69 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://github.com/riscv/riscv-isa-sim#build-steps)
>> /Border [ 0 0 0 ] /Rect [ 134.3657 417.0394 184.3857 429.0394 ] /Subtype /Link /Type /Annot
>>
endobj
70 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://github.com/riscv/riscv-ovpsim)
>> /Border [ 0 0 0 ] /Rect [ 86.01575 357.0394 141.5657 369.0394 ] /Subtype /Link /Type /Annot
>>
endobj
71 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://github.com/westerndigitalcorporation/swerv-ISS)
>> /Border [ 0 0 0 ] /Rect [ 86.01575 297.0394 120.4657 309.0394 ] /Subtype /Link /Type /Annot
>>
endobj
72 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://github.com/rems-project/sail-riscv)
>> /Border [ 0 0 0 ] /Rect [ 86.01575 255.0394 124.8957 267.0394 ] /Subtype /Link /Type /Annot
>>
endobj
73 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://github.com/rems-project/sail-riscv/blob/master/README.md)
>> /Border [ 0 0 0 ] /Rect [ 134.3657 237.0394 199.9257 249.0394 ] /Subtype /Link /Type /Annot
>>
endobj
74 0 obj
<<
/Annots [ 67 0 R 68 0 R 69 0 R 70 0 R 71 0 R 72 0 R 73 0 R ] /Contents 130 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 124 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
75 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://github.com/google/riscv-dv/blob/master/yaml/base_testlist.yaml)
>> /Border [ 0 0 0 ] /Rect [ 208.4357 649.4394 285.1257 661.4394 ] /Subtype /Link /Type /Annot
>>
endobj
76 0 obj
<<
/Annots [ 75 0 R ] /Contents 131 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 124 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
77 0 obj
<<
/BaseFont /Courier-Oblique /Encoding /WinAnsiEncoding /Name /F6 /Subtype /Type1 /Type /Font
>>
endobj
78 0 obj
<<
/BaseFont /Courier-Bold /Encoding /WinAnsiEncoding /Name /F7 /Subtype /Type1 /Type /Font
>>
endobj
79 0 obj
<<
/Contents 132 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 124 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
80 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://github.com/google/riscv-dv/blob/master/src/riscv_instr_gen_config.sv)
>> /Border [ 0 0 0 ] /Rect [ 211.7557 656.2394 324.0157 668.2394 ] /Subtype /Link /Type /Annot
>>
endobj
81 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://github.com/google/riscv-dv/blob/master/yaml/testlist.yaml)
>> /Border [ 0 0 0 ] /Rect [ 87.80575 458.6394 146.1557 470.6394 ] /Subtype /Link /Type /Annot
>>
endobj
82 0 obj
<<
/Annots [ 80 0 R 81 0 R ] /Contents 133 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 124 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
83 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://github.com/google/riscv-dv/blob/master/yaml/csr_template.yaml)
>> /Border [ 0 0 0 ] /Rect [ 40.01575 230.1894 188.9457 242.1894 ] /Subtype /Link /Type /Annot
>>
endobj
84 0 obj
<<
/Annots [ 83 0 R ] /Contents 134 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 124 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
85 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://github.com/google/riscv-dv/blob/master/scripts/gen_csr_test.py)
>> /Border [ 0 0 0 ] /Rect [ 216.7557 457.4394 326.8138 469.4394 ] /Subtype /Link /Type /Annot
>>
endobj
86 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://github.com/google/riscv-dv/blob/master/yaml/iss.yaml)
>> /Border [ 0 0 0 ] /Rect [ 163.9757 191.0394 200.0857 203.0394 ] /Subtype /Link /Type /Annot
>>
endobj
87 0 obj
<<
/Annots [ 85 0 R 86 0 R ] /Contents 135 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 124 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
88 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://github.com/lowRISC/ibex/blob/master/doc/verification.rst)
>> /Border [ 0 0 0 ] /Rect [ 296.2257 749.8394 453.2296 761.8394 ] /Subtype /Link /Type /Annot
>>
endobj
89 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://github.com/lowRISC/ibex/blob/master/dv/uvm/Makefile#L68)
>> /Border [ 0 0 0 ] /Rect [ 113.9457 515.8394 229.5357 527.8394 ] /Subtype /Link /Type /Annot
>>
endobj
90 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://github.com/google/riscv-dv/blob/master/src/riscv_instr_cover_group.sv)
>> /Border [ 0 0 0 ] /Rect [ 214.5457 310.6394 333.4657 322.6394 ] /Subtype /Link /Type /Annot
>>
endobj
91 0 obj
<<
/Annots [ 88 0 R 89 0 R 90 0 R ] /Contents 136 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 124 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
92 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://github.com/google/riscv-dv/blob/master/setting/riscv_core_setting.sv)
>> /Border [ 0 0 0 ] /Rect [ 259.0157 775.0394 362.5552 787.0394 ] /Subtype /Link /Type /Annot
>>
endobj
93 0 obj
<<
/Annots [ 92 0 R ] /Contents 137 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 124 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
94 0 obj
<<
/Outlines 96 0 R /PageLabels 138 0 R /PageMode /UseNone /Pages 124 0 R /Type /Catalog
>>
endobj
95 0 obj
<<
/Author () /CreationDate (D:20200106180336+08'00') /Creator (\(unspecified\)) /Keywords () /ModDate (D:20200106180336+08'00') /Producer (ReportLab PDF Library - www.reportlab.com) 
  /Subject (\(unspecified\)) /Title () /Trapped /False
>>
endobj
96 0 obj
<<
/Count 32 /First 97 0 R /Last 123 0 R /Type /Outlines
>>
endobj
97 0 obj
<<
/Count 25 /Dest [ 66 0 R /XYZ 40.01575 787.0394 0 ] /First 98 0 R /Last 122 0 R /Next 123 0 R /Parent 96 0 R 
  /Title (Welcome to riscv-dv\220s documentation!)
>>
endobj
98 0 obj
<<
/Dest [ 66 0 R /XYZ 40.01575 747.0394 0 ] /Next 99 0 R /Parent 97 0 R /Title (Overview)
>>
endobj
99 0 obj
<<
/Count 7 /Dest [ 66 0 R /XYZ 40.01575 381.8394 0 ] /First 100 0 R /Last 106 0 R /Next 107 0 R /Parent 97 0 R 
  /Prev 98 0 R /Title (Getting Started)
>>
endobj
100 0 obj
<<
/Dest [ 66 0 R /XYZ 40.01575 346.6394 0 ] /Next 101 0 R /Parent 99 0 R /Title (Prerequisites)
>>
endobj
101 0 obj
<<
/Dest [ 66 0 R /XYZ 40.01575 271.8394 0 ] /Next 102 0 R /Parent 99 0 R /Prev 100 0 R /Title (Install RISCV-DV)
>>
endobj
102 0 obj
<<
/Dest [ 74 0 R /XYZ 40.01575 677.4394 0 ] /Next 103 0 R /Parent 99 0 R /Prev 101 0 R /Title (Setup RISCV-GCC compiler toolchain)
>>
endobj
103 0 obj
<<
/Dest [ 74 0 R /XYZ 40.01575 499.8394 0 ] /Next 104 0 R /Parent 99 0 R /Prev 102 0 R /Title (Setup ISS \(instruction set simulator\))
>>
endobj
104 0 obj
<<
/Dest [ 74 0 R /XYZ 40.01575 136.2394 0 ] /Next 105 0 R /Parent 99 0 R /Prev 103 0 R /Title (Running the generator)
>>
endobj
105 0 obj
<<
/Dest [ 76 0 R /XYZ 40.01575 285.0394 0 ] /Next 106 0 R /Parent 99 0 R /Prev 104 0 R /Title (Run ISS simulation)
>>
endobj
106 0 obj
<<
/Dest [ 79 0 R /XYZ 40.01575 692.2394 0 ] /Parent 99 0 R /Prev 105 0 R /Title (Run directed assembly tests)
>>
endobj
107 0 obj
<<
/Count 8 /Dest [ 79 0 R /XYZ 40.01575 518.6394 0 ] /First 108 0 R /Last 113 0 R /Next 116 0 R /Parent 97 0 R 
  /Prev 99 0 R /Title (Configuration)
>>
endobj
108 0 obj
<<
/Dest [ 79 0 R /XYZ 40.01575 483.4394 0 ] /Next 109 0 R /Parent 107 0 R /Title (Configure the generator to match your processor features)
>>
endobj
109 0 obj
<<
/Dest [ 82 0 R /XYZ 40.01575 787.0394 0 ] /Next 110 0 R /Parent 107 0 R /Prev 108 0 R /Title (Setup the memory map)
>>
endobj
110 0 obj
<<
/Dest [ 82 0 R /XYZ 40.01575 493.4394 0 ] /Next 111 0 R /Parent 107 0 R /Prev 109 0 R /Title (Setup regression test list)
>>
endobj
111 0 obj
<<
/Dest [ 84 0 R /XYZ 40.01575 787.0394 0 ] /Next 112 0 R /Parent 107 0 R /Prev 110 0 R /Title (Runtime options of the generator)
>>
endobj
112 0 obj
<<
/Dest [ 84 0 R /XYZ 40.01575 294.2394 0 ] /Next 113 0 R /Parent 107 0 R /Prev 111 0 R /Title (Setup Privileged CSR description \(optional\))
>>
endobj
113 0 obj
<<
/Count 2 /Dest [ 87 0 R /XYZ 40.01575 492.2394 0 ] /First 114 0 R /Last 115 0 R /Parent 107 0 R /Prev 112 0 R 
  /Title (Privileged CSR Test Generation \(optional\))
>>
endobj
114 0 obj
<<
/Dest [ 87 0 R /XYZ 40.01575 362.6394 0 ] /Next 115 0 R /Parent 113 0 R /Title (Adding new instruction stream and test)
>>
endobj
115 0 obj
<<
/Dest [ 87 0 R /XYZ 40.01575 223.4394 0 ] /Parent 113 0 R /Prev 114 0 R /Title (Integrate a new ISS)
>>
endobj
116 0 obj
<<
/Dest [ 91 0 R /XYZ 40.01575 787.0394 0 ] /Next 117 0 R /Parent 97 0 R /Prev 107 0 R /Title (End to End Simulation Flow)
>>
endobj
117 0 obj
<<
/Dest [ 91 0 R /XYZ 40.01575 481.8394 0 ] /Next 118 0 R /Parent 97 0 R /Prev 116 0 R /Title (Generator Flow)
>>
endobj
118 0 obj
<<
/Count 1 /Dest [ 91 0 R /XYZ 40.01575 446.6394 0 ] /First 119 0 R /Last 119 0 R /Next 120 0 R /Parent 97 0 R 
  /Prev 117 0 R /Title (Coverage Model)
>>
endobj
119 0 obj
<<
/Dest [ 91 0 R /XYZ 40.01575 411.4394 0 ] /Parent 118 0 R /Title (Functional coverage \(work in progress\))
>>
endobj
120 0 obj
<<
/Dest [ 93 0 R /XYZ 40.01575 557.4394 0 ] /Next 121 0 R /Parent 97 0 R /Prev 118 0 R /Title (Customize and Extend Generator)
>>
endobj
121 0 obj
<<
/Dest [ 93 0 R /XYZ 40.01575 522.2394 0 ] /Next 122 0 R /Parent 97 0 R /Prev 120 0 R /Title (Class Reference)
>>
endobj
122 0 obj
<<
/Dest [ 93 0 R /XYZ 40.01575 487.0394 0 ] /Parent 97 0 R /Prev 121 0 R /Title (Command Line Reference)
>>
endobj
123 0 obj
<<
/Dest [ 93 0 R /XYZ 40.01575 451.8394 0 ] /Parent 96 0 R /Prev 97 0 R /Title (Indices and tables)
>>
endobj
124 0 obj
<<
/Count 13 /Kids [ 4 0 R 5 0 R 60 0 R 61 0 R 66 0 R 74 0 R 76 0 R 79 0 R 82 0 R 84 0 R 
  87 0 R 91 0 R 93 0 R ] /Type /Pages
>>
endobj
125 0 obj
<<
/Length 868
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 775.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 30 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 4 Tm /F2 20 Tf 24 TL 209.842 0 Td (RISCV-DV) Tj T* -209.842 0 Td ET
Q
Q
q
1 0 0 1 40.01575 745.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 24 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 3 Tm /F2 15 Tf 18 TL 230.9445 0 Td (version) Tj T* -230.9445 0 Td ET
Q
Q
q
1 0 0 1 40.01575 650 cm
Q
q
1 0 0 1 40.01575 629.6 cm
q
0 0 0 rg
BT 1 0 0 1 0 2.4 Tm /F2 12 Tf 14.4 TL 224.946 0 Td (Google, Inc) Tj T* -224.946 0 Td ET
Q
Q
q
1 0 0 1 40.01575 544.5606 cm
Q
q
1 0 0 1 40.01575 524.1606 cm
q
0 0 0 rg
BT 1 0 0 1 0 2.4 Tm /F1 12 Tf 14.4 TL 211.26 0 Td (January 06, 2020) Tj T* -211.26 0 Td ET
Q
Q
q
1 0 0 1 40.01575 524.1606 cm
Q
q
1 0 0 1 40.01575 524.1606 cm
Q
 
endstream
endobj
126 0 obj
<<
/Length 75
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 799.0394 cm
Q
 
endstream
endobj
127 0 obj
<<
/Length 6557
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 775.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 30 re B*
Q
q
BT 1 0 0 1 0 4 Tm 24 TL /F2 20 Tf .12549 .262745 .360784 rg (Contents) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 283.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 0 471 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 .501961 rg (Welcome to riscv-dv\222s documentation!) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 471 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 66.44 0 Td (1) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 453 cm
q
BT 1 0 0 1 20 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Overview) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 453 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (1) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 435 cm
q
BT 1 0 0 1 20 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Getting Started) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 435 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (1) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 417 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Prerequisites) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 417 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (1) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 399 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Install RISCV-DV) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 399 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (1) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 381 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Setup RISCV-GCC compiler toolchain) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 381 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (2) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 363 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Setup ISS \(instruction set simulator\)) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 363 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (2) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 345 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Running the generator) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 345 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (2) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 327 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Run ISS simulation) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 327 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (3) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 309 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Run directed assembly tests) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 309 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (4) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 291 cm
q
BT 1 0 0 1 20 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Configuration) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 291 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (4) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 273 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Configure the generator to match your processor features) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 273 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (4) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 255 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Setup the memory map) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 255 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (5) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 237 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Setup regression test list) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 237 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (5) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 219 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Runtime options of the generator) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 219 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (6) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 201 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Setup Privileged CSR description \(optional\)) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 201 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (6) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 183 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Privileged CSR Test Generation \(optional\)) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 183 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (7) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 165 cm
q
BT 1 0 0 1 60 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Adding new instruction stream and test) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 165 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (7) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 147 cm
q
BT 1 0 0 1 60 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Integrate a new ISS) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 147 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (7) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 129 cm
q
BT 1 0 0 1 20 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (End to End Simulation Flow) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 129 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (8) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 111 cm
q
BT 1 0 0 1 20 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Generator Flow) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 111 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (8) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 93 cm
q
BT 1 0 0 1 20 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Coverage Model) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 93 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (8) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 75 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Functional coverage \(work in progress\)) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 75 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (8) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 57 cm
q
BT 1 0 0 1 20 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Customize and Extend Generator) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 57 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (9) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 39 cm
q
BT 1 0 0 1 20 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Class Reference) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 39 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (9) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 21 cm
q
BT 1 0 0 1 20 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Command Line Reference) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 21 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (9) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 .501961 rg (Indices and tables) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 3 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 66.44 0 Td (9) Tj T* -66.44 0 Td ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 283.0394 cm
Q
q
1 0 0 1 40.01575 283.0394 cm
Q
 
endstream
endobj
128 0 obj
<<
/Length 75
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 799.0394 cm
Q
 
endstream
endobj
129 0 obj
<<
/Length 9422
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 763.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 30 re B*
Q
q
BT 1 0 0 1 0 4 Tm 24 TL /F2 20 Tf .12549 .262745 .360784 rg (Welcome to riscv-dv\222s documentation!) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 727.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 25.2 re B*
Q
q
BT 1 0 0 1 0 3.2 Tm 19.2 TL /F2 16 Tf .12549 .262745 .360784 rg (Overview) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 697.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.929546 Tw (RISCV-DV is a SV/UVM based open-source instruction generator for RISC-V processor verification. It currently) Tj T* 0 Tw (supports the following features:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 691.8394 cm
Q
q
1 0 0 1 40.01575 691.8394 cm
Q
q
1 0 0 1 40.01575 679.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Supported instruction set: RV32IMAFDC, RV64IMAFDC) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 673.8394 cm
Q
q
1 0 0 1 40.01575 661.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Supported privileged mode: machine mode, supervisor mode, user mode) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 655.8394 cm
Q
q
1 0 0 1 40.01575 643.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Page table randomization and exception) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 637.8394 cm
Q
q
1 0 0 1 40.01575 625.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Privileged CSR setup randomization) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 619.8394 cm
Q
q
1 0 0 1 40.01575 607.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Privileged CSR test suite) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 601.8394 cm
Q
q
1 0 0 1 40.01575 589.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Trap/interrupt handling) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 583.8394 cm
Q
q
1 0 0 1 40.01575 571.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Test suite to stress test MMU) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 565.8394 cm
Q
q
1 0 0 1 40.01575 553.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Sub-program generation and random program calls) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 547.8394 cm
Q
q
1 0 0 1 40.01575 535.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Illegal instruction and HINT instruction generation) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 529.8394 cm
Q
q
1 0 0 1 40.01575 517.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Random forward/backward branch instructions) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 511.8394 cm
Q
q
1 0 0 1 40.01575 499.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Supports mixing directed instructions with random instruction stream) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 493.8394 cm
Q
q
1 0 0 1 40.01575 481.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Debug mode support, with fully randomized debug ROM) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 475.8394 cm
Q
q
1 0 0 1 40.01575 463.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Instruction generation coverage model) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 457.8394 cm
Q
q
1 0 0 1 40.01575 445.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Communication of information to any integrated SV testbench) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 439.8394 cm
Q
q
1 0 0 1 40.01575 427.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Co-simulation with multiple ISS : spike, riscv-ovpsim) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 427.8394 cm
Q
q
1 0 0 1 40.01575 397.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL -0.082295 Tw (A CSR test generation script written in Python is also provided, to generate a directed test suite that stresses all CSR) Tj T* 0 Tw (instructions on all of the CSRs that the core implements.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 362.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 25.2 re B*
Q
q
BT 1 0 0 1 0 3.2 Tm 19.2 TL /F2 16 Tf .12549 .262745 .360784 rg (Getting Started) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 329.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Prerequisites) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 287.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .648561 Tw (To be able to run the instruction generator, you need to have an RTL simulator which supports SystemVerilog and) Tj T* 0 Tw 1.86815 Tw (UVM 1.2. This generator has been verified with Synopsys VCS, Cadence Incisive/Xcelium, and Mentor Questa) Tj T* 0 Tw (simulators. Please make sure the EDA tool environment is properly setup before running the generator.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 255.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Install RISCV-DV) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 237.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Getting the source) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 231.0394 cm
Q
q
1 0 0 1 40.01575 231.0394 cm
Q
q
1 0 0 1 40.01575 219.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (1.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Install ) Tj 0 0 .501961 rg (git) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 213.0394 cm
Q
q
1 0 0 1 40.01575 201.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (2.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F4 10 Tf 0 0 0 rg (git) Tj ( ) Tj (clone) Tj ( ) Tj (https://github.com/google/riscv-dv.git) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 195.0394 cm
Q
q
1 0 0 1 40.01575 183.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (3.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F4 10 Tf 0 0 0 rg (cd) Tj ( ) Tj (riscv-dv) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 183.0394 cm
Q
q
1 0 0 1 40.01575 165.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (There are two ways that you can run scripts from riscv-dv.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 135.0394 cm
q
BT 1 0 0 1 0 14 Tm 2.815535 Tw 12 TL /F1 10 Tf 0 0 0 rg (For developers which may work on multiple clones in parallel, using directly run by ) Tj /F5 10 Tf (python3) Tj /F1 10 Tf ( script is highly) Tj T* 0 Tw (recommended. Example:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 104.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 30 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F4 10 Tf 12 TL (pip3 install -r requirements.txt     # install dependencies \(only once\)) Tj T* (python3 run.py --help) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 72.23937 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .249672 Tw (For normal users, using the python package is recommended. First, cd to the directory where riscv-dv is cloned and) Tj T* 0 Tw (run:) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Welcome to riscv-dv\222s documentation!) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (1) Tj T* ET
Q
Q
 
endstream
endobj
130 0 obj
<<
/Length 9853
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 756.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 30 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F4 10 Tf 12 TL (export PATH=$HOME/.local/bin/:$PATH  # add ~/.local/bin to the $PATH \(only once\)) Tj T* (pip3 install --user -e .) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 724.2394 cm
q
BT 1 0 0 1 0 14 Tm 1.507888 Tw 12 TL /F1 10 Tf 0 0 0 rg (This installs riscv-dv in a mode where any changes within the repo are immediately available simply by running) Tj T* 0 Tw /F5 10 Tf (run) Tj /F1 10 Tf (/) Tj /F5 10 Tf (cov) Tj /F1 10 Tf (. There is no need to repeatedly run ) Tj /F5 10 Tf (pip install .) Tj /F1 10 Tf ( after each change. Example for running:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 693.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 30 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F4 10 Tf 12 TL (run --help) Tj T* (cov --help) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 660.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Setup RISCV-GCC compiler toolchain) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 648.6394 cm
Q
q
1 0 0 1 40.01575 648.6394 cm
Q
q
1 0 0 1 40.01575 636.6394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (1.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Install ) Tj 0 0 .501961 rg (riscv-gcc) Tj 0 0 0 rg ( toolchain) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 630.6394 cm
Q
q
1 0 0 1 40.01575 606.6394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (2.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm 8.597409 Tw 12 TL /F1 10 Tf 0 0 0 rg (Set environment variable RISCV_GCC to the RISC-V gcc executable executable. \(example:) Tj T* 0 Tw (<) Tj (install_dir) Tj (>) Tj (/bin/riscv32-unknown-elf-gcc\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 600.6394 cm
Q
q
1 0 0 1 40.01575 576.6394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (3.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm 6.650455 Tw 12 TL /F1 10 Tf 0 0 0 rg (Set environment variable RISCV_OBJCOPY to RISC-v objcopy executable executable. \(example:) Tj T* 0 Tw (<) Tj (install_dir) Tj (>) Tj (/bin/riscv32-unknown-elf-objcopy\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 576.6394 cm
Q
q
1 0 0 1 40.01575 558.6394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Sample .bashrc setup:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 515.8394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 42 re B*
Q
q
BT 1 0 0 1 0 26 Tm 12 TL /F4 10 Tf 0 0 0 rg (export RISCV_TOOLCHAIN=) Tj (<) Tj (riscv_gcc_install_path) Tj (>) Tj  T* (export RISCV_GCC="$RISCV_TOOLCHAIN/bin/riscv32-unknown-elf-gcc") Tj T* (export RISCV_OBJCOPY="$RISCV_TOOLCHAIN/bin/riscv32-unknown-elf-objcopy") Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 483.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Setup ISS \(instruction set simulator\)) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 465.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Currently three ISS are supported, the default ISS is spike. You can install any one of below to run ISS simulation.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 459.0394 cm
Q
q
1 0 0 1 40.01575 459.0394 cm
Q
q
1 0 0 1 40.01575 387.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (1.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 63 cm
Q
q
1 0 0 1 23 63 cm
Q
q
1 0 0 1 23 51 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (spike) Tj 0 0 0 rg ( setup) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 45 cm
Q
q
1 0 0 1 23 33 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Follow the ) Tj 0 0 .501961 rg (spike steps) Tj 0 0 0 rg ( to build spike) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 27 cm
Q
q
1 0 0 1 23 15 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Build spike with \223\226enable-commitlog\224) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 9 cm
Q
q
1 0 0 1 23 -3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Set environment variable SPIKE_PATH to the directory of the spike binary) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 -3 cm
Q
q
Q
Q
q
1 0 0 1 40.01575 381.0394 cm
Q
q
1 0 0 1 40.01575 327.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (2.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 45 cm
Q
q
1 0 0 1 23 45 cm
Q
q
1 0 0 1 23 33 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (riscv-ovpsim) Tj 0 0 0 rg ( setup) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 27 cm
Q
q
1 0 0 1 23 15 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Download the riscv-ovpsim binary) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 9 cm
Q
q
1 0 0 1 23 -3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Set environment variable OVPSIM_PATH to the directory of the ovpsim binary) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 -3 cm
Q
q
Q
Q
q
1 0 0 1 40.01575 321.0394 cm
Q
q
1 0 0 1 40.01575 285.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (3.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 27 cm
Q
q
1 0 0 1 23 27 cm
Q
q
1 0 0 1 23 15 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (whisper) Tj 0 0 0 rg ( \(swerv-ISS\) setup) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 9 cm
Q
q
1 0 0 1 23 -3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Follow the instruction to install the ISS, and set WHISPER_ISS to the whisper binary) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 -3 cm
Q
q
Q
Q
q
1 0 0 1 40.01575 279.0394 cm
Q
q
1 0 0 1 40.01575 225.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (4.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 45 cm
Q
q
1 0 0 1 23 45 cm
Q
q
1 0 0 1 23 33 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (sail-riscv) Tj 0 0 0 rg ( setup) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 27 cm
Q
q
1 0 0 1 23 15 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Follow the ) Tj 0 0 .501961 rg (sail-riscv steps) Tj 0 0 0 rg ( to install sail-riscv) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 9 cm
Q
q
1 0 0 1 23 -3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Set environment variable SAIL_RISCV to the path of sail-riscv binary) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 -3 cm
Q
q
Q
Q
q
1 0 0 1 40.01575 225.0394 cm
Q
q
1 0 0 1 40.01575 207.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Sample .bashrc setup:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 152.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 54 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F4 10 Tf 12 TL (export SPIKE_PATH=$RISCV_TOOLCHAIN/bin) Tj T* (export SAIL_RISCV="xx/xxx/ocaml_emulator") Tj T* (export OVPSIM_PATH=/xx/xxx/riscv-ovpsim/bin/Linux64) Tj T* (export WHISPER_ISS="xx/xxx/swerv-ISS/build-Linux/whisper") Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 119.4394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Running the generator) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 101.4394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (A simple script ) Tj /F5 10 Tf (run.py) Tj /F1 10 Tf ( is provided for you to run a single test or a regression.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 83.43937 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (You can use \226help to get the complete command reference:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 64.63937 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 18 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F4 10 Tf 12 TL (run --help) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Welcome to riscv-dv\222s documentation!) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (2) Tj T* ET
Q
Q
 
endstream
endobj
131 0 obj
<<
/Length 4577
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 775.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Here is the command to run a single test:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 756.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 18 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F4 10 Tf 12 TL (run --test=riscv_arithmetic_basic_test) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 736.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (You can specify the simulator by \223-simulator\224 option:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 669.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 66 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 50 Tm /F4 10 Tf 12 TL (run --test riscv_arithmetic_basic_test --simulator ius) Tj T* (run --test riscv_arithmetic_basic_test --simulator vcs) Tj T* (run --test riscv_arithmetic_basic_test --simulator questa) Tj T* (run --test riscv_arithmetic_basic_test --simulator dsim) Tj T* (run --test riscv_arithmetic_basic_test --simulator qrun) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 649.4394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The complete test list can be found in ) Tj 0 0 .501961 rg (base testlist yaml) Tj 0 0 0 rg (. To run a full regression, simply use below command:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 630.6394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 18 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F4 10 Tf 12 TL (run) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 610.6394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (You can also run multiple generator jobs in parallel through LSF:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 591.8394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 18 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F4 10 Tf 12 TL (run --lsf_cmd="bsub -Is") Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 571.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Here\222s a few more examples of the run command:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 301.0394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 270 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 254 Tm /F4 10 Tf 12 TL (# Run a single test 10 times) Tj T* (run --test riscv_arithmetic_basic_test --iterations 10) Tj T*  T* (# Run multiple tests) Tj T* (run --test riscv_arithmetic_basic_test,riscv_rand_instr_test) Tj T*  T* (# Run a test with verbose logging) Tj T* (run --test riscv_arithmetic_basic_test --verbose) Tj T*  T* (# Run a test with a specified seed) Tj T* (run --test riscv_arithmetic_basic_test --seed 123) Tj T*  T* (# Skip the generation, run ISS simulation with previously generated program) Tj T* (run --test riscv_arithmetic_basic_test --steps iss_sim) Tj T*  T* (# Run the generator only, do not compile and simluation with ISS) Tj T* (run --test riscv_arithmetic_basic_test --steps gen) Tj T*  T* (# Compile the generator only, do not simulate) Tj T* (run --test riscv_arithmetic_basic_test --co) Tj T*  T* (....) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 268.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Run ISS simulation) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 250.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (You can use -iss to run with different ISS:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 111.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 138 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 122 Tm /F4 10 Tf 12 TL (# Run ISS with spike) Tj T* (run --test riscv_arithmetic_basic_test --iss spike) Tj T*  T* (# Run ISS with riscv-ovpsim) Tj T* (run --test riscv_rand_instr_test --iss ovpsim) Tj T*  T* (# Run ISS with whisper \(swerv-ISS\)) Tj T* (run --test riscv_rand_instr_test --iss whisper) Tj T*  T* (# Run ISS with sail-riscv) Tj T* (run --test riscv_rand_instr_test --iss sail) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 91.43937 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (To run with ISS simulation for RV32IMC, you can specify ISA and ABI from command line like this:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 60.63937 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 30 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F4 10 Tf 12 TL (# Run a full regression with RV32IMC) Tj T* (run --isa rv32imc --mabi ilp32) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Welcome to riscv-dv\222s documentation!) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (3) Tj T* ET
Q
Q
 
endstream
endobj
132 0 obj
<<
/Length 7912
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 751.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .499163 Tw (We have added a flow to run ISS simulation with both spike and riscv-ovpsim, the instruction trace from these runs) Tj T* 0 Tw 1.390227 Tw (will be cross compared. This could greatly speed up your development of new test without the need to simulate) Tj T* 0 Tw (against a real RISC-V processor:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 708.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 42 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F4 10 Tf 12 TL (run --test=riscv_rand_instr_test --iss=spike,ovpsim) Tj T* (run --test=riscv_rand_instr_test --iss=ovpsim,whisper) Tj T* (run --test=riscv_rand_instr_test --iss=spike,sail) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 675.4394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Run directed assembly tests) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 657.4394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Sometimes it might be useful to run some hand-coded assembly tests to hit some corner cases:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 554.6394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 102 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 86 Tm /F4 10 Tf 12 TL (# Run a single/multiple assembly test) Tj T* (run --asm_tests asm_test_path1/asm_test1.S,asm_test_path2/asm_test2.S) Tj T*  T* (# Run regression with all assembly tests\(*.S\) under a given directory) Tj T* (run --asm_tests asm_test_path1,asm_test_path2) Tj T*  T* (# Run mix between the assembly test and assembly tests under a directory) Tj T* (run --asm_tests asm_test_path1/asm_test1.S,asm_test_path2) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 534.6394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (You could also use this approach to integrate the assembly tests from other sources to riscv-dv flow.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 499.4394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 25.2 re B*
Q
q
BT 1 0 0 1 0 3.2 Tm 19.2 TL /F2 16 Tf .12549 .262745 .360784 rg (Configuration) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 466.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Configure the generator to match your processor features) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 424.6394 cm
q
BT 1 0 0 1 0 26 Tm 3.376007 Tw 12 TL /F1 10 Tf 0 0 0 rg (The default configuration of the instruction generator is ) Tj /F2 10 Tf (RV32IMC) Tj /F1 10 Tf ( \(machine mode only\). A few pre-defined) Tj T* 0 Tw 1.406711 Tw (configurations can be found under \223target\224 directory, you can run with these targets if it matches your processor) Tj T* 0 Tw (specificationi:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 357.8394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 66 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 50 Tm /F4 10 Tf 12 TL (run                   # Default target rv32imc) Tj T* (run --target rv32i    # rv32i, machine mode only) Tj T* (run --target rv32imc  # rv32imc, machine mode only) Tj T* (run --target rv64imc  # rv64imc, machine mode only) Tj T* (run --target rv64gc   # rv64gc, SV39, M/S/U mode) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 325.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.191147 Tw (If you want to have a custom setting for your processor, you can make a copy of existing target directory as the) Tj T* 0 Tw (template, and modify riscv_core_setting.sv to match your processor capability.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 127.0394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 198 re B*
Q
q
.933333 1 .8 rg
n 0 180 156 12 re f*
.933333 1 .8 rg
n 0 168 54 12 re f*
.933333 1 .8 rg
n 60 168 18 12 re f*
.933333 1 .8 rg
n 84 168 24 12 re f*
.933333 1 .8 rg
n 114 168 6 12 re f*
.933333 1 .8 rg
n 126 168 12 12 re f*
.933333 1 .8 rg
n 138 168 6 12 re f*
.933333 1 .8 rg
n 0 144 474 12 re f*
.933333 1 .8 rg
n 0 132 54 12 re f*
.933333 1 .8 rg
n 60 132 66 12 re f*
.933333 1 .8 rg
n 132 132 54 12 re f*
.933333 1 .8 rg
n 192 132 6 12 re f*
.933333 1 .8 rg
n 204 132 24 12 re f*
.933333 1 .8 rg
n 228 132 6 12 re f*
.933333 1 .8 rg
n 0 108 168 12 re f*
.933333 1 .8 rg
n 0 96 102 12 re f*
.933333 1 .8 rg
n 108 96 150 12 re f*
.933333 1 .8 rg
n 258 96 12 12 re f*
.933333 1 .8 rg
n 276 96 6 12 re f*
.933333 1 .8 rg
n 288 96 6 12 re f*
.933333 1 .8 rg
n 294 96 54 12 re f*
.933333 1 .8 rg
n 348 96 6 12 re f*
.933333 1 .8 rg
n 294 84 90 12 re f*
.933333 1 .8 rg
n 384 84 6 12 re f*
.933333 1 .8 rg
n 294 72 72 12 re f*
.933333 1 .8 rg
n 366 72 12 12 re f*
.933333 1 .8 rg
n 0 48 162 12 re f*
.933333 1 .8 rg
n 0 36 108 12 re f*
.933333 1 .8 rg
n 114 36 102 12 re f*
.933333 1 .8 rg
n 216 36 12 12 re f*
.933333 1 .8 rg
n 234 36 6 12 re f*
.933333 1 .8 rg
n 246 36 18 12 re f*
.933333 1 .8 rg
n 0 12 198 12 re f*
.933333 1 .8 rg
n 0 0 114 12 re f*
.933333 1 .8 rg
n 120 0 78 12 re f*
.933333 1 .8 rg
n 198 0 12 12 re f*
.933333 1 .8 rg
n 216 0 6 12 re f*
.933333 1 .8 rg
n 228 0 6 12 re f*
.933333 1 .8 rg
n 234 0 30 12 re f*
.933333 1 .8 rg
n 264 0 6 12 re f*
.933333 1 .8 rg
n 276 0 30 12 re f*
.933333 1 .8 rg
n 306 0 6 12 re f*
.933333 1 .8 rg
n 318 0 30 12 re f*
.933333 1 .8 rg
n 348 0 6 12 re f*
.933333 1 .8 rg
n 360 0 30 12 re f*
.933333 1 .8 rg
n 390 0 12 12 re f*
BT 1 0 0 1 0 182 Tm 12 TL /F6 10 Tf .501961 .501961 .501961 rg (// Bit width of RISC-V GPR) Tj T* /F7 10 Tf 0 .501961 0 rg (parameter) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F7 10 Tf .188235 .188235 .564706 rg (int) Tj /F4 10 Tf 0 0 0 rg ( ) Tj (XLEN) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj /F7 10 Tf 0 .313725 .501961 rg (64) Tj /F4 10 Tf 0 0 0 rg (;) Tj  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (// Parameter for SATP mode, set to BARE if address translation is not supported) Tj T* /F7 10 Tf 0 .501961 0 rg (parameter) Tj /F4 10 Tf 0 0 0 rg ( ) Tj (satp_mode_t) Tj ( ) Tj (SATP_MODE) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (SV39) Tj (;) Tj  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (// Supported Privileged mode) Tj T* /F4 10 Tf 0 0 0 rg (privileged_mode_t) Tj ( ) Tj (supported_privileged_mode) Tj ([]) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj ({) Tj (USER_MODE) Tj (,) Tj  T* (                                                 ) Tj (SUPERVISOR_MODE) Tj (,) Tj  T* (                                                 ) Tj (MACHINE_MODE) Tj (};) Tj  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (// Unsupported instructions) Tj T* /F4 10 Tf 0 0 0 rg (riscv_instr_name_t) Tj ( ) Tj (unsupported_instr) Tj ([]) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj ({};) Tj  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (// ISA supported by the processor) Tj T* /F4 10 Tf 0 0 0 rg (riscv_instr_group_t) Tj ( ) Tj (supported_isa) Tj ([]) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj ({) Tj (RV32I) Tj (,) Tj ( ) Tj (RV32M) Tj (,) Tj ( ) Tj (RV64I) Tj (,) Tj ( ) Tj (RV64M) Tj (};) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 107.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (You can then run the generator with ) Tj /F4 10 Tf (--custom_target) Tj ( ) Tj (<) Tj (target_dir) Tj (>) Tj /F1 10 Tf (:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 64.23937 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 42 re B*
Q
q
BT 1 0 0 1 0 26 Tm 12 TL /F4 10 Tf 0 0 0 rg (# You need to manually specify isa and mabi for your custom target) Tj T* (run --custom_target ) Tj (<) Tj (target_dir) Tj (>) Tj ( --isa ) Tj (<) Tj (isa) Tj (>) Tj ( --mabi ) Tj (<) Tj (mabi) Tj (>) Tj  T* (...) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Configuration) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (4) Tj T* ET
Q
Q
 
endstream
endobj
133 0 obj
<<
/Length 8634
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 770.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Setup the memory map) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 752.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Here\222s a few cases that you might want to allocate the instruction and data sections to match the actual memory map) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 746.2394 cm
Q
q
1 0 0 1 40.01575 746.2394 cm
Q
q
1 0 0 1 40.01575 722.2394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (1.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.060292 Tw (The processor has internal memories, and you want to test load/store from various internal/externel memory) Tj T* 0 Tw (regions) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 716.2394 cm
Q
q
1 0 0 1 40.01575 704.2394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (2.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The processor implments the PMP feature, and you want to configure the memory map to match PMP setting.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 698.2394 cm
Q
q
1 0 0 1 40.01575 674.2394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (3.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL -0.079744 Tw (Virtual address translation is implmented and you want to test load/store from sparse memory locations to verify) Tj T* 0 Tw (data TLB replacement logic.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 674.2394 cm
Q
q
1 0 0 1 40.01575 656.2394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (You can configure the memory map in ) Tj 0 0 .501961 rg (riscv_instr_gen_config.sv) Tj 0 0 0 rg (:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 565.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 90 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 74 Tm /F4 10 Tf 12 TL (mem_region_t mem_region[$] = '{) Tj T* (    '{name:"region_0", size_in_bytes: 4096,      xwr: 3'b111},) Tj T* (    '{name:"region_1", size_in_bytes: 4096 * 4,  xwr: 3'b111},) Tj T* (    '{name:"region_2", size_in_bytes: 4096 * 2,  xwr: 3'b111},) Tj T* (    '{name:"region_3", size_in_bytes: 512,       xwr: 3'b111},) Tj T* (    '{name:"region_4", size_in_bytes: 4096,      xwr: 3'b111}) Tj T* (};) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 509.4394 cm
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F1 10 Tf 12 TL 1.210241 Tw (Each memory region belongs to a separate section in the generated assembly program. You can modify the link) Tj T* 0 Tw .056705 Tw (script to link each section to the target memory location. Please avoid setting a large memory range as it could takes) Tj T* 0 Tw .3239 Tw (a long time to randomly initializing the memory. You can break down a large memory region to a few representative) Tj T* 0 Tw (small regions which covers all the boundary conditions for the load/store testing.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 476.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Setup regression test list) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 458.6394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Test list in ) Tj 0 0 .501961 rg (YAML format) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 151.8394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 306 re B*
Q
q
.933333 1 .8 rg
n 0 288 228 12 re f*
.933333 1 .8 rg
n 0 276 264 12 re f*
.933333 1 .8 rg
n 0 264 294 12 re f*
.933333 1 .8 rg
n 0 252 318 12 re f*
.933333 1 .8 rg
n 0 240 360 12 re f*
.933333 1 .8 rg
n 0 228 378 12 re f*
.933333 1 .8 rg
n 0 216 264 12 re f*
.933333 1 .8 rg
n 0 204 426 12 re f*
.933333 1 .8 rg
n 0 192 444 12 re f*
.933333 1 .8 rg
n 0 180 360 12 re f*
.933333 1 .8 rg
n 0 168 240 12 re f*
.933333 1 .8 rg
n 240 168 6 12 re f*
.933333 1 .8 rg
n 246 168 126 12 re f*
.933333 1 .8 rg
n 0 144 6 12 re f*
.933333 1 .8 rg
n 12 144 24 12 re f*
.933333 1 .8 rg
n 36 144 6 12 re f*
.933333 1 .8 rg
n 48 144 162 12 re f*
.933333 1 .8 rg
n 12 132 66 12 re f*
.933333 1 .8 rg
n 78 132 6 12 re f*
.933333 1 .8 rg
n 90 132 6 12 re f*
.933333 1 .8 rg
n 24 120 372 12 re f*
.933333 1 .8 rg
n 12 108 48 12 re f*
.933333 1 .8 rg
n 60 108 6 12 re f*
.933333 1 .8 rg
n 72 108 6 12 re f*
.933333 1 .8 rg
n 24 96 96 12 re f*
.933333 1 .8 rg
n 24 84 126 12 re f*
.933333 1 .8 rg
n 24 72 66 12 re f*
.933333 1 .8 rg
n 24 60 108 12 re f*
.933333 1 .8 rg
n 24 48 120 12 re f*
.933333 1 .8 rg
n 24 36 72 12 re f*
.933333 1 .8 rg
n 12 24 60 12 re f*
.933333 1 .8 rg
n 72 24 6 12 re f*
.933333 1 .8 rg
n 84 24 6 12 re f*
.933333 1 .8 rg
n 12 12 48 12 re f*
.933333 1 .8 rg
n 60 12 6 12 re f*
.933333 1 .8 rg
n 72 12 126 12 re f*
.933333 1 .8 rg
n 12 0 48 12 re f*
.933333 1 .8 rg
n 60 0 6 12 re f*
.933333 1 .8 rg
n 72 0 84 12 re f*
BT 1 0 0 1 0 290 Tm 12 TL /F6 10 Tf .501961 .501961 .501961 rg (# test            : Assembly test name) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# description     : Description of this test) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# gen_opts        : Instruction generator options) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# iterations      : Number of iterations of this test) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# no_iss          : Enable/disable ISS simulation \(Optional\)) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# gen_test        : Test name used by the instruction generator) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# rtl_test        : RTL simulation test name) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# cmp_opts        : Compile options passed to the instruction generator) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# sim_opts        : Simulation options passed to the instruction generator) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# no_post_compare : Enable/disable log comparison \(Optional\)) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# compare_opts    : Options for the RTL ) Tj (&) Tj ( ISS trace comparison) Tj /F4 10 Tf 0 0 0 rg  T*  T* (-) Tj ( ) Tj /F7 10 Tf 0 .439216 0 rg (test) Tj /F4 10 Tf 0 0 0 rg (:) Tj ( ) Tj (riscv_arithmetic_basic_test) Tj  T* (  ) Tj /F7 10 Tf 0 .439216 0 rg (description) Tj /F4 10 Tf 0 0 0 rg (:) Tj ( ) Tj (>) Tj  T* (    ) Tj /F7 10 Tf 0 .188235 .376471 rg (Arithmetic instruction test, no load/store/branch instructions) Tj /F4 10 Tf 0 0 0 rg  T* (  ) Tj /F7 10 Tf 0 .439216 0 rg (gen_opts) Tj /F4 10 Tf 0 0 0 rg (:) Tj ( ) Tj (>) Tj  T* (    ) Tj /F7 10 Tf 0 .188235 .376471 rg (+instr_cnt=10000) Tj /F4 10 Tf 0 0 0 rg  T* (    ) Tj /F7 10 Tf 0 .188235 .376471 rg (+num_of_sub_program=0) Tj /F4 10 Tf 0 0 0 rg  T* (    ) Tj /F7 10 Tf 0 .188235 .376471 rg (+no_fence=1) Tj /F4 10 Tf 0 0 0 rg  T* (    ) Tj /F7 10 Tf 0 .188235 .376471 rg (+no_data_page=1'b1) Tj /F4 10 Tf 0 0 0 rg  T* (    ) Tj /F7 10 Tf 0 .188235 .376471 rg (+no_branch_jump=1'b1) Tj /F4 10 Tf 0 0 0 rg  T* (    ) Tj /F7 10 Tf 0 .188235 .376471 rg (+boot_mode=m) Tj /F4 10 Tf 0 0 0 rg  T* (  ) Tj /F7 10 Tf 0 .439216 0 rg (iterations) Tj /F4 10 Tf 0 0 0 rg (:) Tj ( ) Tj (2) Tj  T* (  ) Tj /F7 10 Tf 0 .439216 0 rg (gen_test) Tj /F4 10 Tf 0 0 0 rg (:) Tj ( ) Tj (riscv_instr_base_test) Tj  T* (  ) Tj /F7 10 Tf 0 .439216 0 rg (rtl_test) Tj /F4 10 Tf 0 0 0 rg (:) Tj ( ) Tj (core_base_test) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 131.8394 cm
Q
q
1 0 0 1 40.01575 63.03937 cm
.933333 .933333 .933333 rg
n 0 68.8 515.2441 -68.8 re f*
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 6 50.8 Tm  T* ET
q
1 0 0 1 8 44 cm
q
0 0 0 rg
BT 1 0 0 1 0 2.8 Tm /F3 14 Tf 16.8 TL (Note) Tj T* ET
Q
Q
q
1 0 0 1 8 8 cm
q
BT 1 0 0 1 0 14 Tm -0.128494 Tw 12 TL /F1 10 Tf 0 0 0 rg (To automatically generate CSR tests without having to explicitly run the script, include ) Tj /F5 10 Tf (riscv_csr_test) Tj /F1 10 Tf ( in the testlist) Tj T* 0 Tw (as shown in the example YAML file above.) Tj T* ET
Q
Q
q
1 J
1 j
.8 .8 .8 RG
.5 w
n 0 68.8 m 515.2441 68.8 l S
n 0 0 m 515.2441 0 l S
n 0 0 m 0 68.8 l S
n 515.2441 0 m 515.2441 68.8 l S
Q
Q
q
1 0 0 1 40.01575 57.03937 cm
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Configuration) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (5) Tj T* ET
Q
Q
 
endstream
endobj
134 0 obj
<<
/Length 14085
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 770.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Runtime options of the generator) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 758.2394 cm
Q
q
1 0 0 1 40.01575 310.2394 cm
1 1 1 rg
n 0 448 515.2441 -16 re f*
.878431 .878431 .878431 rg
n 0 432 515.2441 -18 re f*
1 1 1 rg
n 0 414 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 396 515.2441 -18 re f*
1 1 1 rg
n 0 378 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 360 515.2441 -18 re f*
1 1 1 rg
n 0 342 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 324 515.2441 -18 re f*
1 1 1 rg
n 0 306 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 288 515.2441 -18 re f*
1 1 1 rg
n 0 270 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 252 515.2441 -18 re f*
1 1 1 rg
n 0 234 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 216 515.2441 -18 re f*
1 1 1 rg
n 0 198 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 180 515.2441 -18 re f*
1 1 1 rg
n 0 162 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 144 515.2441 -18 re f*
1 1 1 rg
n 0 126 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 108 515.2441 -18 re f*
1 1 1 rg
n 0 90 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 72 515.2441 -18 re f*
1 1 1 rg
n 0 54 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 36 515.2441 -18 re f*
1 1 1 rg
n 0 18 515.2441 -18 re f*
.960784 .960784 .862745 rg
n 0 448 515.2441 -16 re f*
.12549 .262745 .360784 rg
BT /F2 10 Tf 10 TL ET
q
1 0 0 1 6 435 cm
q
.960784 .960784 .862745 rg
n 0 0 155.8885 10 re f*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 0 Tm /F2 10 Tf 10 TL 61.83426 0 Td (Option) Tj T* -61.83426 0 Td ET
Q
Q
q
1 0 0 1 173.8885 435 cm
q
.960784 .960784 .862745 rg
n 0 0 283.2522 10 re f*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 0 Tm /F2 10 Tf 10 TL 114.1211 0 Td (Description) Tj T* -114.1211 0 Td ET
Q
Q
q
1 0 0 1 469.1408 435 cm
q
.960784 .960784 .862745 rg
n 0 0 40.10334 10 re f*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 0 Tm /F2 10 Tf 10 TL 3.106668 0 Td (Default) Tj T* -3.106668 0 Td ET
Q
Q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 417 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (num_of_tests) Tj T* ET
Q
Q
q
1 0 0 1 173.8885 417 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Number of assembly tests to be generated) Tj T* ET
Q
Q
q
1 0 0 1 469.1408 417 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (1) Tj T* ET
Q
Q
q
1 0 0 1 6 399 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (num_of_sub_program) Tj T* ET
Q
Q
q
1 0 0 1 173.8885 399 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Number of sub-program in one test) Tj T* ET
Q
Q
q
1 0 0 1 469.1408 399 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (5) Tj T* ET
Q
Q
q
1 0 0 1 6 381 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (instr_cnt) Tj T* ET
Q
Q
q
1 0 0 1 173.8885 381 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Instruction count per test) Tj T* ET
Q
Q
q
1 0 0 1 469.1408 381 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (200) Tj T* ET
Q
Q
q
1 0 0 1 6 363 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (enable_page_table_exception) Tj T* ET
Q
Q
q
1 0 0 1 173.8885 363 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Enable page table exception) Tj T* ET
Q
Q
q
1 0 0 1 469.1408 363 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 6 345 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (enable_unaligned_load_store) Tj T* ET
Q
Q
q
1 0 0 1 173.8885 345 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Enable unaligned memory operations) Tj T* ET
Q
Q
q
1 0 0 1 469.1408 345 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 6 327 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (no_ebreak) Tj T* ET
Q
Q
q
1 0 0 1 173.8885 327 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Disable ebreak instruction) Tj T* ET
Q
Q
q
1 0 0 1 469.1408 327 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (1) Tj T* ET
Q
Q
q
1 0 0 1 6 309 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (no_wfi) Tj T* ET
Q
Q
q
1 0 0 1 173.8885 309 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Disable WFI instruction) Tj T* ET
Q
Q
q
1 0 0 1 469.1408 309 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (1) Tj T* ET
Q
Q
q
1 0 0 1 6 291 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (no_dret) Tj T* ET
Q
Q
q
1 0 0 1 173.8885 291 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Disable dret instruction) Tj T* ET
Q
Q
q
1 0 0 1 469.1408 291 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (1) Tj T* ET
Q
Q
q
1 0 0 1 6 273 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (no_branch_jump) Tj T* ET
Q
Q
q
1 0 0 1 173.8885 273 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Disable branch/jump instruction) Tj T* ET
Q
Q
q
1 0 0 1 469.1408 273 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 6 255 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (no_load_store) Tj T* ET
Q
Q
q
1 0 0 1 173.8885 255 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Disable load/store instruction) Tj T* ET
Q
Q
q
1 0 0 1 469.1408 255 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 6 237 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (no_csr_instr) Tj T* ET
Q
Q
q
1 0 0 1 173.8885 237 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Disable CSR instruction) Tj T* ET
Q
Q
q
1 0 0 1 469.1408 237 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 6 219 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (no_fence) Tj T* ET
Q
Q
q
1 0 0 1 173.8885 219 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Disable fence instruction) Tj T* ET
Q
Q
q
1 0 0 1 469.1408 219 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 6 201 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (illegal_instr_ratio) Tj T* ET
Q
Q
q
1 0 0 1 173.8885 201 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Number of illegal instructions every 1000 instr) Tj T* ET
Q
Q
q
1 0 0 1 469.1408 201 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 6 183 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (hint_instr_ratio) Tj T* ET
Q
Q
q
1 0 0 1 173.8885 183 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Number of HINT instructions every 1000 instr) Tj T* ET
Q
Q
q
1 0 0 1 469.1408 183 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 6 165 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (boot_mode) Tj T* ET
Q
Q
q
1 0 0 1 173.8885 165 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (m:Machine mode, s:Supervisor mode, u:User mode) Tj T* ET
Q
Q
q
1 0 0 1 469.1408 165 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (m) Tj T* ET
Q
Q
q
1 0 0 1 6 147 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (no_directed_instr) Tj T* ET
Q
Q
q
1 0 0 1 173.8885 147 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Disable directed instruction stream) Tj T* ET
Q
Q
q
1 0 0 1 469.1408 147 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 6 129 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (require_signature_addr) Tj T* ET
Q
Q
q
1 0 0 1 173.8885 129 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Set to 1 if test needs to talk to testbench) Tj T* ET
Q
Q
q
1 0 0 1 469.1408 129 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 6 111 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (signature_addr) Tj T* ET
Q
Q
q
1 0 0 1 173.8885 111 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Write to this addr to send data to testbench) Tj T* ET
Q
Q
q
1 0 0 1 469.1408 111 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 6 93 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (enable_interrupt) Tj T* ET
Q
Q
q
1 0 0 1 173.8885 93 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Enable MStatus.MIE, used in interrupt test) Tj T* ET
Q
Q
q
1 0 0 1 469.1408 93 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 6 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (gen_debug_section) Tj T* ET
Q
Q
q
1 0 0 1 173.8885 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Disables randomized debug_rom section) Tj T* ET
Q
Q
q
1 0 0 1 469.1408 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 6 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (num_debug_sub_program) Tj T* ET
Q
Q
q
1 0 0 1 173.8885 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Number of debug sub-programs in test) Tj T* ET
Q
Q
q
1 0 0 1 469.1408 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 6 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (enable_ebreak_in_debug_rom) Tj T* ET
Q
Q
q
1 0 0 1 173.8885 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Generate ebreak instructions inside debug ROM) Tj T* ET
Q
Q
q
1 0 0 1 469.1408 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (set_dcsr_ebreak) Tj T* ET
Q
Q
q
1 0 0 1 173.8885 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Randomly enable dcsr.ebreak\(m/s/u\)) Tj T* ET
Q
Q
q
1 0 0 1 469.1408 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (randomize_csr) Tj T* ET
Q
Q
q
1 0 0 1 173.8885 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Fully randomize main CSRs \(xSTATUS, xIE\)) Tj T* ET
Q
Q
q
1 0 0 1 469.1408 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 432 m 515.2441 432 l S
n 0 414 m 515.2441 414 l S
n 0 396 m 515.2441 396 l S
n 0 378 m 515.2441 378 l S
n 0 360 m 515.2441 360 l S
n 0 342 m 515.2441 342 l S
n 0 324 m 515.2441 324 l S
n 0 306 m 515.2441 306 l S
n 0 288 m 515.2441 288 l S
n 0 270 m 515.2441 270 l S
n 0 252 m 515.2441 252 l S
n 0 234 m 515.2441 234 l S
n 0 216 m 515.2441 216 l S
n 0 198 m 515.2441 198 l S
n 0 180 m 515.2441 180 l S
n 0 162 m 515.2441 162 l S
n 0 144 m 515.2441 144 l S
n 0 126 m 515.2441 126 l S
n 0 108 m 515.2441 108 l S
n 0 90 m 515.2441 90 l S
n 0 72 m 515.2441 72 l S
n 0 54 m 515.2441 54 l S
n 0 36 m 515.2441 36 l S
n 0 18 m 515.2441 18 l S
n 167.8885 0 m 167.8885 448 l S
n 463.1408 0 m 463.1408 448 l S
n 0 448 m 515.2441 448 l S
n 0 0 m 515.2441 0 l S
n 0 0 m 0 448 l S
n 515.2441 0 m 515.2441 448 l S
Q
Q
q
1 0 0 1 40.01575 310.2394 cm
Q
q
1 0 0 1 40.01575 277.4394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Setup Privileged CSR description \(optional\)) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 247.4394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL -0.024567 Tw (This YAML description file of all CSRs is only required for the privileged CSR test. All other standard tests do not use) Tj T* 0 Tw (this description.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 229.4394 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (CSR descriptions in YAML format) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 66.63937 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 162 re B*
Q
q
.933333 1 .8 rg
n 0 144 6 12 re f*
.933333 1 .8 rg
n 12 144 18 12 re f*
.933333 1 .8 rg
n 30 144 6 12 re f*
.933333 1 .8 rg
n 42 144 48 12 re f*
.933333 1 .8 rg
n 12 132 66 12 re f*
.933333 1 .8 rg
n 78 132 6 12 re f*
.933333 1 .8 rg
n 90 132 6 12 re f*
.933333 1 .8 rg
n 24 120 102 12 re f*
.933333 1 .8 rg
n 12 108 42 12 re f*
.933333 1 .8 rg
n 54 108 6 12 re f*
.933333 1 .8 rg
n 66 108 30 12 re f*
.933333 1 .8 rg
n 12 96 84 12 re f*
.933333 1 .8 rg
n 96 96 6 12 re f*
.933333 1 .8 rg
n 108 96 96 12 re f*
.933333 1 .8 rg
n 12 84 24 12 re f*
.933333 1 .8 rg
n 36 84 6 12 re f*
.933333 1 .8 rg
n 24 72 6 12 re f*
.933333 1 .8 rg
n 36 72 84 12 re f*
.933333 1 .8 rg
n 120 72 6 12 re f*
.933333 1 .8 rg
n 36 60 6 12 re f*
.933333 1 .8 rg
n 48 60 66 12 re f*
.933333 1 .8 rg
n 114 60 6 12 re f*
.933333 1 .8 rg
n 126 60 6 12 re f*
.933333 1 .8 rg
n 60 48 102 12 re f*
.933333 1 .8 rg
n 36 36 6 12 re f*
.933333 1 .8 rg
n 48 36 24 12 re f*
.933333 1 .8 rg
n 72 36 6 12 re f*
.933333 1 .8 rg
n 84 36 138 12 re f*
.933333 1 .8 rg
n 36 24 6 12 re f*
.933333 1 .8 rg
n 48 24 54 12 re f*
.933333 1 .8 rg
n 102 24 6 12 re f*
.933333 1 .8 rg
n 114 24 54 12 re f*
.933333 1 .8 rg
n 36 12 6 12 re f*
.933333 1 .8 rg
n 48 12 18 12 re f*
.933333 1 .8 rg
n 66 12 6 12 re f*
.933333 1 .8 rg
n 78 12 42 12 re f*
.933333 1 .8 rg
n 36 0 6 12 re f*
.933333 1 .8 rg
n 48 0 18 12 re f*
.933333 1 .8 rg
n 66 0 6 12 re f*
.933333 1 .8 rg
n 78 0 42 12 re f*
BT 1 0 0 1 0 146 Tm 12 TL /F4 10 Tf 0 0 0 rg (-) Tj ( ) Tj /F7 10 Tf 0 .439216 0 rg (csr) Tj /F4 10 Tf 0 0 0 rg (:) Tj ( ) Tj (CSR_NAME) Tj  T* (  ) Tj /F7 10 Tf 0 .439216 0 rg (description) Tj /F4 10 Tf 0 0 0 rg (:) Tj ( ) Tj (>) Tj  T* (    ) Tj /F7 10 Tf 0 .188235 .376471 rg (BRIEF_DESCRIPTION) Tj /F4 10 Tf 0 0 0 rg  T* (  ) Tj /F7 10 Tf 0 .439216 0 rg (address) Tj /F4 10 Tf 0 0 0 rg (:) Tj ( ) Tj (0x###) Tj  T* (  ) Tj /F7 10 Tf 0 .439216 0 rg (privilege_mode) Tj /F4 10 Tf 0 0 0 rg (:) Tj ( ) Tj (MODE \(D/M/S/H/U\)) Tj  T* (  ) Tj /F7 10 Tf 0 .439216 0 rg (rv32) Tj /F4 10 Tf 0 0 0 rg (:) Tj  T* (    ) Tj (-) Tj ( ) Tj /F7 10 Tf 0 .439216 0 rg (MSB_FIELD_NAME) Tj /F4 10 Tf 0 0 0 rg (:) Tj  T* (      ) Tj (-) Tj ( ) Tj /F7 10 Tf 0 .439216 0 rg (description) Tj /F4 10 Tf 0 0 0 rg (:) Tj ( ) Tj (>) Tj  T* (          ) Tj /F7 10 Tf 0 .188235 .376471 rg (BRIEF_DESCRIPTION) Tj /F4 10 Tf 0 0 0 rg  T* (      ) Tj (-) Tj ( ) Tj /F7 10 Tf 0 .439216 0 rg (type) Tj /F4 10 Tf 0 0 0 rg (:) Tj ( ) Tj (TYPE \(WPRI/WLRL/WARL/R\)) Tj  T* (      ) Tj (-) Tj ( ) Tj /F7 10 Tf 0 .439216 0 rg (reset_val) Tj /F4 10 Tf 0 0 0 rg (:) Tj ( ) Tj (RESET_VAL) Tj  T* (      ) Tj (-) Tj ( ) Tj /F7 10 Tf 0 .439216 0 rg (msb) Tj /F4 10 Tf 0 0 0 rg (:) Tj ( ) Tj (MSB_POS) Tj  T* (      ) Tj (-) Tj ( ) Tj /F7 10 Tf 0 .439216 0 rg (lsb) Tj /F4 10 Tf 0 0 0 rg (:) Tj ( ) Tj (LSB_POS) Tj  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Configuration) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (6) Tj T* ET
Q
Q
 
endstream
endobj
135 0 obj
<<
/Length 8130
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 540.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 246 re B*
Q
q
.933333 1 .8 rg
n 24 228 6 12 re f*
.933333 1 .8 rg
n 36 228 18 12 re f*
.933333 1 .8 rg
n 24 216 6 12 re f*
.933333 1 .8 rg
n 36 216 18 12 re f*
.933333 1 .8 rg
n 24 204 6 12 re f*
.933333 1 .8 rg
n 36 204 84 12 re f*
.933333 1 .8 rg
n 120 204 6 12 re f*
.933333 1 .8 rg
n 36 192 6 12 re f*
.933333 1 .8 rg
n 48 192 66 12 re f*
.933333 1 .8 rg
n 114 192 6 12 re f*
.933333 1 .8 rg
n 126 192 18 12 re f*
.933333 1 .8 rg
n 36 180 6 12 re f*
.933333 1 .8 rg
n 48 180 24 12 re f*
.933333 1 .8 rg
n 72 180 6 12 re f*
.933333 1 .8 rg
n 84 180 18 12 re f*
.933333 1 .8 rg
n 36 168 6 12 re f*
.933333 1 .8 rg
n 48 168 18 12 re f*
.933333 1 .8 rg
n 12 156 24 12 re f*
.933333 1 .8 rg
n 36 156 6 12 re f*
.933333 1 .8 rg
n 24 144 6 12 re f*
.933333 1 .8 rg
n 36 144 84 12 re f*
.933333 1 .8 rg
n 120 144 6 12 re f*
.933333 1 .8 rg
n 36 132 6 12 re f*
.933333 1 .8 rg
n 48 132 66 12 re f*
.933333 1 .8 rg
n 114 132 6 12 re f*
.933333 1 .8 rg
n 126 132 6 12 re f*
.933333 1 .8 rg
n 60 120 102 12 re f*
.933333 1 .8 rg
n 36 108 6 12 re f*
.933333 1 .8 rg
n 48 108 24 12 re f*
.933333 1 .8 rg
n 72 108 6 12 re f*
.933333 1 .8 rg
n 84 108 138 12 re f*
.933333 1 .8 rg
n 36 96 6 12 re f*
.933333 1 .8 rg
n 48 96 54 12 re f*
.933333 1 .8 rg
n 102 96 6 12 re f*
.933333 1 .8 rg
n 114 96 54 12 re f*
.933333 1 .8 rg
n 36 84 6 12 re f*
.933333 1 .8 rg
n 48 84 18 12 re f*
.933333 1 .8 rg
n 66 84 6 12 re f*
.933333 1 .8 rg
n 78 84 42 12 re f*
.933333 1 .8 rg
n 36 72 6 12 re f*
.933333 1 .8 rg
n 48 72 18 12 re f*
.933333 1 .8 rg
n 66 72 6 12 re f*
.933333 1 .8 rg
n 78 72 42 12 re f*
.933333 1 .8 rg
n 24 60 6 12 re f*
.933333 1 .8 rg
n 36 60 18 12 re f*
.933333 1 .8 rg
n 24 48 6 12 re f*
.933333 1 .8 rg
n 36 48 18 12 re f*
.933333 1 .8 rg
n 24 36 6 12 re f*
.933333 1 .8 rg
n 36 36 84 12 re f*
.933333 1 .8 rg
n 120 36 6 12 re f*
.933333 1 .8 rg
n 36 24 6 12 re f*
.933333 1 .8 rg
n 48 24 66 12 re f*
.933333 1 .8 rg
n 114 24 6 12 re f*
.933333 1 .8 rg
n 126 24 18 12 re f*
.933333 1 .8 rg
n 36 12 6 12 re f*
.933333 1 .8 rg
n 48 12 24 12 re f*
.933333 1 .8 rg
n 72 12 6 12 re f*
.933333 1 .8 rg
n 84 12 18 12 re f*
.933333 1 .8 rg
n 36 0 6 12 re f*
.933333 1 .8 rg
n 48 0 18 12 re f*
BT 1 0 0 1 0 230 Tm 12 TL /F4 10 Tf 0 0 0 rg (    ) Tj (-) Tj ( ) Tj (...) Tj  T* (    ) Tj (-) Tj ( ) Tj (...) Tj  T* (    ) Tj (-) Tj ( ) Tj /F7 10 Tf 0 .439216 0 rg (LSB_FIELD_NAME) Tj /F4 10 Tf 0 0 0 rg (:) Tj  T* (      ) Tj (-) Tj ( ) Tj /F7 10 Tf 0 .439216 0 rg (description) Tj /F4 10 Tf 0 0 0 rg (:) Tj ( ) Tj (...) Tj  T* (      ) Tj (-) Tj ( ) Tj /F7 10 Tf 0 .439216 0 rg (type) Tj /F4 10 Tf 0 0 0 rg (:) Tj ( ) Tj (...) Tj  T* (      ) Tj (-) Tj ( ) Tj (...) Tj  T* (  ) Tj /F7 10 Tf 0 .439216 0 rg (rv64) Tj /F4 10 Tf 0 0 0 rg (:) Tj  T* (    ) Tj (-) Tj ( ) Tj /F7 10 Tf 0 .439216 0 rg (MSB_FIELD_NAME) Tj /F4 10 Tf 0 0 0 rg (:) Tj  T* (      ) Tj (-) Tj ( ) Tj /F7 10 Tf 0 .439216 0 rg (description) Tj /F4 10 Tf 0 0 0 rg (:) Tj ( ) Tj (>) Tj  T* (          ) Tj /F7 10 Tf 0 .188235 .376471 rg (BRIEF_DESCRIPTION) Tj /F4 10 Tf 0 0 0 rg  T* (      ) Tj (-) Tj ( ) Tj /F7 10 Tf 0 .439216 0 rg (type) Tj /F4 10 Tf 0 0 0 rg (:) Tj ( ) Tj (TYPE \(WPRI/WLRL/WARL/R\)) Tj  T* (      ) Tj (-) Tj ( ) Tj /F7 10 Tf 0 .439216 0 rg (reset_val) Tj /F4 10 Tf 0 0 0 rg (:) Tj ( ) Tj (RESET_VAL) Tj  T* (      ) Tj (-) Tj ( ) Tj /F7 10 Tf 0 .439216 0 rg (msb) Tj /F4 10 Tf 0 0 0 rg (:) Tj ( ) Tj (MSB_POS) Tj  T* (      ) Tj (-) Tj ( ) Tj /F7 10 Tf 0 .439216 0 rg (lsb) Tj /F4 10 Tf 0 0 0 rg (:) Tj ( ) Tj (LSB_POS) Tj  T* (    ) Tj (-) Tj ( ) Tj (...) Tj  T* (    ) Tj (-) Tj ( ) Tj (...) Tj  T* (    ) Tj (-) Tj ( ) Tj /F7 10 Tf 0 .439216 0 rg (LSB_FIELD_NAME) Tj /F4 10 Tf 0 0 0 rg (:) Tj  T* (      ) Tj (-) Tj ( ) Tj /F7 10 Tf 0 .439216 0 rg (description) Tj /F4 10 Tf 0 0 0 rg (:) Tj ( ) Tj (...) Tj  T* (      ) Tj (-) Tj ( ) Tj /F7 10 Tf 0 .439216 0 rg (type) Tj /F4 10 Tf 0 0 0 rg (:) Tj ( ) Tj (...) Tj  T* (      ) Tj (-) Tj ( ) Tj (...) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 508.2394 cm
q
BT 1 0 0 1 0 14 Tm .185783 Tw 12 TL /F1 10 Tf 0 0 0 rg (To specify what ISA width should be generated in the test, simply include the matching rv32/rv64/rv128 entry and fill) Tj T* 0 Tw (in the appropriate CSR field entries.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 475.4394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Privileged CSR Test Generation \(optional\)) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 397.4394 cm
q
BT 1 0 0 1 0 62 Tm 1.114006 Tw 12 TL /F1 10 Tf 0 0 0 rg (The CSR generation script is located at ) Tj 0 0 .501961 rg (scripts/gen_csr_test.py) Tj 0 0 0 rg (. The CSR test code that this script generates will) Tj T* 0 Tw .852594 Tw (execute every CSR instruction on every processor implemented CSR, writing values to the CSR and then using a) Tj T* 0 Tw .278561 Tw (prediction function to calculate a reference value that will be written into another GPR. The reference value will then) Tj T* 0 Tw -0.055795 Tw (be compared to the value actually stored in the CSR to determine whether to jump to the failure condition or continue) Tj T* 0 Tw .167205 Tw (executing, allowing it to be completely self checking. This script has been integrated with run.py. If you want to run it) Tj T* 0 Tw (separately, you can get the command reference with \226help:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 378.6394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 18 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F4 10 Tf 12 TL (python3 scripts/gen_csr_test.py --help) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 348.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F3 12 Tf .12549 .262745 .360784 rg (Adding new instruction stream and test) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 318.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .037131 Tw (Please refer to src/src/riscv_load_store_instr_lib.sv for an example on how to add a new instruction stream. After the) Tj T* 0 Tw (new instruction stream is created, you can use a runtime option to mix it with random instructions:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 239.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 562 78 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 62 Tm /F4 10 Tf 12 TL (//+directed_instr_n=instr_sequence_name,frequency\(number of insertions per 1000 instructions\)) Tj T* (+directed_instr_5=riscv_multi_page_load_store_instr_stream,4) Tj T*  T* (// An alternative command line options for directed instruction stream) Tj T* (+stream_name_0=riscv_multi_page_load_store_instr_stream) Tj T* (+stream_freq_0=4) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 209.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F3 12 Tf .12549 .262745 .360784 rg (Integrate a new ISS) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 191.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (You can add a new entry in ) Tj 0 0 .501961 rg (iss.yaml) Tj 0 0 0 rg (:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 136.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 54 re B*
Q
q
BT 1 0 0 1 0 38 Tm 12 TL /F4 10 Tf 0 0 0 rg (- iss: new_iss_name) Tj T* (  path_var: ISS_PATH) Tj T* (  cmd: ) Tj (>) Tj  T* (    ) Tj (<) Tj (path_var) Tj (>) Tj (/iss_executable --isa=) Tj (<) Tj (variant) Tj (>) Tj ( -l ) Tj (<) Tj (elf) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 116.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Simulate with the new ISS:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 97.43937 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 18 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F4 10 Tf 12 TL (run --test riscv_arithmetic_basic_test --iss new_iss_name) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Configuration) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (7) Tj T* ET
Q
Q
 
endstream
endobj
136 0 obj
<<
/Length 9754
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 767.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 25.2 re B*
Q
q
BT 1 0 0 1 0 3.2 Tm 19.2 TL /F2 16 Tf .12549 .262745 .360784 rg (End to End Simulation Flow) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 713.8394 cm
q
BT 1 0 0 1 0 38 Tm 1.903373 Tw 12 TL /F1 10 Tf 0 0 0 rg (We have collaborated with LowRISC to apply this flow for ) Tj 0 0 .501961 rg (IBEX RISC-V core verification) Tj 0 0 0 rg (. You can use it as a) Tj T* 0 Tw 4.11494 Tw (reference to setup end-to-end co-simulation flow. This repo is still under active development, this is the) Tj T* 0 Tw 2.8657 Tw (recommended approach to customize the instruction generator while keeping the effort of merging upstream) Tj T* 0 Tw (changes to a minimum.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 707.8394 cm
Q
q
1 0 0 1 40.01575 707.8394 cm
Q
q
1 0 0 1 40.01575 683.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (1.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL -0.08506 Tw (Do not modify the upstream classes directly. When possible, extend from the upstream classses and implement) Tj T* 0 Tw (your own functionalities.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 677.8394 cm
Q
q
1 0 0 1 40.01575 641.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (2.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 26 Tm .073675 Tw 12 TL /F1 10 Tf 0 0 0 rg (Add your extensions under user_extension directory, and add the files to user_extension/user_extension.svh. If) Tj T* 0 Tw .299006 Tw (you prefer to put your extensions in a different directory, you can use \223-ext <) Tj (user_extension_path) Tj (>) Tj (\224 to override) Tj T* 0 Tw (the user extension path.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 635.8394 cm
Q
q
1 0 0 1 40.01575 623.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (3.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Create a new target directory and customize the setting and testlist) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 617.8394 cm
Q
q
1 0 0 1 40.01575 605.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (4.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Run the generator with ) Tj /F4 10 Tf (--custom_target) Tj ( ) Tj (<) Tj (target_dir) Tj (>) Tj ( ) Tj (--isa) Tj ( ) Tj (<) Tj (isa) Tj (>) Tj ( ) Tj (--mabi) Tj ( ) Tj (<) Tj (mabi) Tj (>) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 599.8394 cm
Q
q
1 0 0 1 40.01575 575.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (5.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm 23.7549 Tw 12 TL /F1 10 Tf 0 0 0 rg (Use command line type override to use your extended classes.) Tj T* 0 Tw /F4 10 Tf (--sim_opts="+uvm_set_type_override=) Tj (<) Tj (upstream_class) Tj (>) Tj (,) Tj (<) Tj (extended_class) Tj (>) Tj (") Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 569.8394 cm
Q
q
1 0 0 1 40.01575 533.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (6.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 26 Tm 6.314918 Tw 12 TL /F1 10 Tf 0 0 0 rg (If extending ) Tj /F4 10 Tf (riscv_asm_program_gen) Tj /F1 10 Tf ( class is desired, must use this command line override:) Tj T* 0 Tw /F4 10 Tf (--sim_opts="+uvm_set_inst_override=riscv_asm_program_gen,) Tj (<) Tj (extended) Tj T* (class) Tj (>) Tj (,'uvm_test_top.asm_gen'") Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 533.8394 cm
Q
q
1 0 0 1 40.01575 515.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (You can refer to ) Tj 0 0 .501961 rg (riscv-dv extension for ibex) Tj 0 0 0 rg ( for a working example.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 497.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (We have plan to open-source the end-to-end environments of other advanced RISC-V processors. Stay tuned!) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 462.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 25.2 re B*
Q
q
BT 1 0 0 1 0 3.2 Tm 19.2 TL /F2 16 Tf .12549 .262745 .360784 rg (Generator Flow) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 427.4394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 25.2 re B*
Q
q
BT 1 0 0 1 0 3.2 Tm 19.2 TL /F2 16 Tf .12549 .262745 .360784 rg (Coverage Model) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 394.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Functional coverage \(work in progress\)) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 328.6394 cm
q
0 0 0 rg
BT 1 0 0 1 0 50 Tm /F1 10 Tf 12 TL -0.034744 Tw (This flow extracts functional coverage information from the instruction trace generated by ISS. It\222s independent of the) Tj T* 0 Tw .000205 Tw (instruction generation flow and does not require a tracer implementation in the RTL. You can use this flow as long as) Tj T* 0 Tw .265433 Tw (your program can be run with an ISS supported in this flow. The flow parses the instruction trace log and converts it) Tj T* 0 Tw -0.075268 Tw (to a CSV trace format. After that, a SV test is run to process the CSV trace files and sample functional coverage from) Tj T* 0 Tw (there.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 310.6394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The functional covergroup is defined in ) Tj 0 0 .501961 rg (riscv_instr_cover_group.sv) Tj 0 0 0 rg (. It includes below major categories:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 304.6394 cm
Q
q
1 0 0 1 40.01575 304.6394 cm
Q
q
1 0 0 1 40.01575 292.6394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Cover all operands for each instruction) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 286.6394 cm
Q
q
1 0 0 1 40.01575 274.6394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Hazard conditions) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 268.6394 cm
Q
q
1 0 0 1 40.01575 256.6394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Corner cases like overflow, underflow, divide by zero) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 250.6394 cm
Q
q
1 0 0 1 40.01575 238.6394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Aligned/unaligned load/store) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 232.6394 cm
Q
q
1 0 0 1 40.01575 220.6394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Positive/negative immediate value) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 214.6394 cm
Q
q
1 0 0 1 40.01575 202.6394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Forward/backward branches, branch hit history) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 196.6394 cm
Q
q
1 0 0 1 40.01575 184.6394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Hint instruction) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 178.6394 cm
Q
q
1 0 0 1 40.01575 166.6394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Illegal instruction) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 160.6394 cm
Q
q
1 0 0 1 40.01575 148.6394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (All compressed and non-compressed opcode) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 142.6394 cm
Q
q
1 0 0 1 40.01575 130.6394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Access to all implemened privileged CSR) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 124.6394 cm
Q
q
1 0 0 1 40.01575 112.6394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Exception and interrupt) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 112.6394 cm
Q
q
1 0 0 1 40.01575 82.63937 cm
q
BT 1 0 0 1 0 14 Tm -0.061995 Tw 12 TL /F1 10 Tf 0 0 0 rg (The functional covergroup is still under active development. Please feel free to add anything you are interested or file) Tj T* 0 Tw (a bug for any feature request.) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (End to End Simulation Flow) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (8) Tj T* ET
Q
Q
 
endstream
endobj
137 0 obj
<<
/Length 3767
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 739.0394 cm
q
BT 1 0 0 1 0 38 Tm 1.272435 Tw 12 TL /F1 10 Tf 0 0 0 rg (Before start, please check the you have modified ) Tj 0 0 .501961 rg (riscv_core_setting.sv) Tj 0 0 0 rg ( to reflect your processor capabilities. The) Tj T* 0 Tw .816123 Tw (covergroup is selectively instantiated based on this setting so that you don\222t need to deal with excluding unrelated) Tj T* 0 Tw .754358 Tw (coverpoints later. You also need to get the Spike ISS or riscvOVPsim ISS \(riscv-ovpsim\) setup before running this) Tj T* 0 Tw (flow:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 636.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 102 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 86 Tm /F4 10 Tf 12 TL (# Process spike simulation log and collect functional coverage) Tj T* (cov --dir out/spike_sim) Tj T*  T* (# Get the command reference) Tj T* (cov --help) Tj T*  T* (# Run the coverage flow with predefined targets) Tj T* (cov --dir out/spike_sim --target rv32imc) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 604.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .723205 Tw (The coverage sampling from the CSV could be time consuming if you have a large number of log to process. You) Tj T* 0 Tw (can split them to small batches and run with LSF in parallel:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 573.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 30 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F4 10 Tf 12 TL (# Split the run to process 5 CSV at a time, and run with LSF) Tj T* (cov --dir out/spike_sim --lsf_cmd "bsub ....." -bz 5) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 538.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 25.2 re B*
Q
q
BT 1 0 0 1 0 3.2 Tm 19.2 TL /F2 16 Tf .12549 .262745 .360784 rg (Customize and Extend Generator) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 503.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 25.2 re B*
Q
q
BT 1 0 0 1 0 3.2 Tm 19.2 TL /F2 16 Tf .12549 .262745 .360784 rg (Class Reference) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 467.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 25.2 re B*
Q
q
BT 1 0 0 1 0 3.2 Tm 19.2 TL /F2 16 Tf .12549 .262745 .360784 rg (Command Line Reference) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 427.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 30 re B*
Q
q
BT 1 0 0 1 0 4 Tm 24 TL /F2 20 Tf .12549 .262745 .360784 rg (Indices and tables) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 415.8394 cm
Q
q
1 0 0 1 40.01575 415.8394 cm
Q
q
1 0 0 1 40.01575 403.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
.933333 1 .8 rg
n 0 0 48 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F7 10 Tf 0 0 0 rg (genindex) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 397.8394 cm
Q
q
1 0 0 1 40.01575 385.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
.933333 1 .8 rg
n 0 0 48 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F7 10 Tf 0 0 0 rg (modindex) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 379.8394 cm
Q
q
1 0 0 1 40.01575 367.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
.933333 1 .8 rg
n 0 0 36 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F7 10 Tf 0 0 0 rg (search) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 367.8394 cm
Q
q
1 0 0 1 40.01575 367.8394 cm
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Customize and Extend Generator) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (9) Tj T* ET
Q
Q
 
endstream
endobj
138 0 obj
<<
/Nums [ 0 139 0 R 1 140 0 R 2 141 0 R 3 142 0 R 4 143 0 R 
  5 144 0 R 6 145 0 R 7 146 0 R 8 147 0 R 9 148 0 R 
  10 149 0 R 11 150 0 R 12 151 0 R ]
>>
endobj
139 0 obj
<<
/S /D /St 1
>>
endobj
140 0 obj
<<
/S /D /St 2
>>
endobj
141 0 obj
<<
/S /r /St 1
>>
endobj
142 0 obj
<<
/S /r /St 2
>>
endobj
143 0 obj
<<
/S /D /St 1
>>
endobj
144 0 obj
<<
/S /D /St 2
>>
endobj
145 0 obj
<<
/S /D /St 3
>>
endobj
146 0 obj
<<
/S /D /St 4
>>
endobj
147 0 obj
<<
/S /D /St 5
>>
endobj
148 0 obj
<<
/S /D /St 6
>>
endobj
149 0 obj
<<
/S /D /St 7
>>
endobj
150 0 obj
<<
/S /D /St 8
>>
endobj
151 0 obj
<<
/S /D /St 9
>>
endobj
xref
0 152
0000000000 65535 f 
0000000073 00000 n 
0000000172 00000 n 
0000000279 00000 n 
0000000391 00000 n 
0000000598 00000 n 
0000000805 00000 n 
0000000973 00000 n 
0000001141 00000 n 
0000001309 00000 n 
0000001477 00000 n 
0000001646 00000 n 
0000001815 00000 n 
0000001984 00000 n 
0000002153 00000 n 
0000002322 00000 n 
0000002491 00000 n 
0000002660 00000 n 
0000002829 00000 n 
0000002998 00000 n 
0000003167 00000 n 
0000003336 00000 n 
0000003505 00000 n 
0000003674 00000 n 
0000003843 00000 n 
0000004012 00000 n 
0000004181 00000 n 
0000004350 00000 n 
0000004519 00000 n 
0000004688 00000 n 
0000004857 00000 n 
0000005026 00000 n 
0000005195 00000 n 
0000005364 00000 n 
0000005533 00000 n 
0000005702 00000 n 
0000005871 00000 n 
0000006040 00000 n 
0000006209 00000 n 
0000006378 00000 n 
0000006547 00000 n 
0000006716 00000 n 
0000006885 00000 n 
0000007054 00000 n 
0000007223 00000 n 
0000007392 00000 n 
0000007561 00000 n 
0000007730 00000 n 
0000007899 00000 n 
0000008068 00000 n 
0000008237 00000 n 
0000008406 00000 n 
0000008575 00000 n 
0000008744 00000 n 
0000008913 00000 n 
0000009082 00000 n 
0000009251 00000 n 
0000009420 00000 n 
0000009589 00000 n 
0000009758 00000 n 
0000009927 00000 n 
0000010536 00000 n 
0000010744 00000 n 
0000010864 00000 n 
0000011037 00000 n 
0000011143 00000 n 
0000011259 00000 n 
0000011486 00000 n 
0000011673 00000 n 
0000011865 00000 n 
0000012068 00000 n 
0000012258 00000 n 
0000012465 00000 n 
0000012660 00000 n 
0000012877 00000 n 
0000013146 00000 n 
0000013369 00000 n 
0000013596 00000 n 
0000013710 00000 n 
0000013821 00000 n 
0000014029 00000 n 
0000014258 00000 n 
0000014476 00000 n 
0000014710 00000 n 
0000014932 00000 n 
0000015159 00000 n 
0000015382 00000 n 
0000015595 00000 n 
0000015829 00000 n 
0000016046 00000 n 
0000016262 00000 n 
0000016492 00000 n 
0000016733 00000 n 
0000016962 00000 n 
0000017189 00000 n 
0000017297 00000 n 
0000017555 00000 n 
0000017631 00000 n 
0000017814 00000 n 
0000017924 00000 n 
0000018096 00000 n 
0000018213 00000 n 
0000018347 00000 n 
0000018499 00000 n 
0000018656 00000 n 
0000018795 00000 n 
0000018931 00000 n 
0000019062 00000 n 
0000019233 00000 n 
0000019394 00000 n 
0000019533 00000 n 
0000019678 00000 n 
0000019829 00000 n 
0000019993 00000 n 
0000020182 00000 n 
0000020325 00000 n 
0000020449 00000 n 
0000020593 00000 n 
0000020725 00000 n 
0000020898 00000 n 
0000021029 00000 n 
0000021177 00000 n 
0000021310 00000 n 
0000021436 00000 n 
0000021557 00000 n 
0000021705 00000 n 
0000022625 00000 n 
0000022751 00000 n 
0000029361 00000 n 
0000029487 00000 n 
0000038962 00000 n 
0000048868 00000 n 
0000053498 00000 n 
0000061463 00000 n 
0000070150 00000 n 
0000084289 00000 n 
0000092472 00000 n 
0000102279 00000 n 
0000106099 00000 n 
0000106271 00000 n 
0000106306 00000 n 
0000106341 00000 n 
0000106376 00000 n 
0000106411 00000 n 
0000106446 00000 n 
0000106481 00000 n 
0000106516 00000 n 
0000106551 00000 n 
0000106586 00000 n 
0000106621 00000 n 
0000106656 00000 n 
0000106691 00000 n 
trailer
<<
/ID 
[<c8378a51ee790f0c2a058536da5f9d99><c8378a51ee790f0c2a058536da5f9d99>]
% ReportLab generated PDF document -- digest (http://www.reportlab.com)

/Info 95 0 R
/Root 94 0 R
/Size 152
>>
startxref
106726
%%EOF
%PDF-1.4
%“Œ‹ž ReportLab Generated PDF document http://www.reportlab.com
1 0 obj
<<
/F1 2 0 R /F2 3 0 R /F3 62 0 R /F4 64 0 R /F5 65 0 R /F6 77 0 R 
  /F7 78 0 R
>>
endobj
2 0 obj
<<
/BaseFont /Helvetica /Encoding /WinAnsiEncoding /Name /F1 /Subtype /Type1 /Type /Font
>>
endobj
3 0 obj
<<
/BaseFont /Helvetica-Bold /Encoding /WinAnsiEncoding /Name /F2 /Subtype /Type1 /Type /Font
>>
endobj
4 0 obj
<<
/Contents 125 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 124 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
5 0 obj
<<
/Contents 126 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 124 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
6 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 66 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 40.01575 754.0394 223.3857 766.0394 ] /Subtype /Link /Type /Annot
>>
endobj
7 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 66 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 549.6998 754.7894 555.2598 766.7894 ] /Subtype /Link /Type /Annot
>>
endobj
8 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 66 0 R /XYZ 40.01575 747.0394 0 ] /Rect [ 60.01575 736.0394 101.6857 748.0394 ] /Subtype /Link /Type /Annot
>>
endobj
9 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 66 0 R /XYZ 40.01575 747.0394 0 ] /Rect [ 549.6998 736.7894 555.2598 748.7894 ] /Subtype /Link /Type /Annot
>>
endobj
10 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 66 0 R /XYZ 40.01575 381.8394 0 ] /Rect [ 60.01575 718.0394 127.2757 730.0394 ] /Subtype /Link /Type /Annot
>>
endobj
11 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 66 0 R /XYZ 40.01575 381.8394 0 ] /Rect [ 549.6998 718.7894 555.2598 730.7894 ] /Subtype /Link /Type /Annot
>>
endobj
12 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 66 0 R /XYZ 40.01575 346.6394 0 ] /Rect [ 80.01575 700.0394 138.3657 712.0394 ] /Subtype /Link /Type /Annot
>>
endobj
13 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 66 0 R /XYZ 40.01575 346.6394 0 ] /Rect [ 549.6998 700.7894 555.2598 712.7894 ] /Subtype /Link /Type /Annot
>>
endobj
14 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 66 0 R /XYZ 40.01575 271.8394 0 ] /Rect [ 80.01575 682.0394 156.6957 694.0394 ] /Subtype /Link /Type /Annot
>>
endobj
15 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 66 0 R /XYZ 40.01575 271.8394 0 ] /Rect [ 549.6998 682.7894 555.2598 694.7894 ] /Subtype /Link /Type /Annot
>>
endobj
16 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 74 0 R /XYZ 40.01575 677.4394 0 ] /Rect [ 80.01575 664.0394 248.3957 676.0394 ] /Subtype /Link /Type /Annot
>>
endobj
17 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 74 0 R /XYZ 40.01575 677.4394 0 ] /Rect [ 549.6998 664.7894 555.2598 676.7894 ] /Subtype /Link /Type /Annot
>>
endobj
18 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 74 0 R /XYZ 40.01575 499.8394 0 ] /Rect [ 80.01575 646.0394 239.5157 658.0394 ] /Subtype /Link /Type /Annot
>>
endobj
19 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 74 0 R /XYZ 40.01575 499.8394 0 ] /Rect [ 549.6998 646.7894 555.2598 658.7894 ] /Subtype /Link /Type /Annot
>>
endobj
20 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 74 0 R /XYZ 40.01575 136.2394 0 ] /Rect [ 80.01575 628.0394 179.5157 640.0394 ] /Subtype /Link /Type /Annot
>>
endobj
21 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 74 0 R /XYZ 40.01575 136.2394 0 ] /Rect [ 549.6998 628.7894 555.2598 640.7894 ] /Subtype /Link /Type /Annot
>>
endobj
22 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 76 0 R /XYZ 40.01575 285.0394 0 ] /Rect [ 80.01575 610.0394 165.0457 622.0394 ] /Subtype /Link /Type /Annot
>>
endobj
23 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 76 0 R /XYZ 40.01575 285.0394 0 ] /Rect [ 549.6998 610.7894 555.2598 622.7894 ] /Subtype /Link /Type /Annot
>>
endobj
24 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 79 0 R /XYZ 40.01575 692.2394 0 ] /Rect [ 80.01575 592.0394 205.6157 604.0394 ] /Subtype /Link /Type /Annot
>>
endobj
25 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 79 0 R /XYZ 40.01575 692.2394 0 ] /Rect [ 549.6998 592.7894 555.2598 604.7894 ] /Subtype /Link /Type /Annot
>>
endobj
26 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 79 0 R /XYZ 40.01575 518.6394 0 ] /Rect [ 60.01575 574.0394 119.4857 586.0394 ] /Subtype /Link /Type /Annot
>>
endobj
27 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 79 0 R /XYZ 40.01575 518.6394 0 ] /Rect [ 549.6998 574.7894 555.2598 586.7894 ] /Subtype /Link /Type /Annot
>>
endobj
28 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 79 0 R /XYZ 40.01575 483.4394 0 ] /Rect [ 80.01575 556.0394 334.5757 568.0394 ] /Subtype /Link /Type /Annot
>>
endobj
29 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 79 0 R /XYZ 40.01575 483.4394 0 ] /Rect [ 549.6998 556.7894 555.2598 568.7894 ] /Subtype /Link /Type /Annot
>>
endobj
30 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 82 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 80.01575 538.0394 183.9457 550.0394 ] /Subtype /Link /Type /Annot
>>
endobj
31 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 82 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 549.6998 538.7894 555.2598 550.7894 ] /Subtype /Link /Type /Annot
>>
endobj
32 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 82 0 R /XYZ 40.01575 493.4394 0 ] /Rect [ 80.01575 520.0394 189.5057 532.0394 ] /Subtype /Link /Type /Annot
>>
endobj
33 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 82 0 R /XYZ 40.01575 493.4394 0 ] /Rect [ 549.6998 520.7894 555.2598 532.7894 ] /Subtype /Link /Type /Annot
>>
endobj
34 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 84 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 80.01575 502.0394 225.6457 514.0394 ] /Subtype /Link /Type /Annot
>>
endobj
35 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 84 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 549.6998 502.7894 555.2598 514.7894 ] /Subtype /Link /Type /Annot
>>
endobj
36 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 84 0 R /XYZ 40.01575 294.2394 0 ] /Rect [ 80.01575 484.0394 272.3057 496.0394 ] /Subtype /Link /Type /Annot
>>
endobj
37 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 84 0 R /XYZ 40.01575 294.2394 0 ] /Rect [ 549.6998 484.7894 555.2598 496.7894 ] /Subtype /Link /Type /Annot
>>
endobj
38 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 87 0 R /XYZ 40.01575 492.2394 0 ] /Rect [ 80.01575 466.0394 266.7457 478.0394 ] /Subtype /Link /Type /Annot
>>
endobj
39 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 87 0 R /XYZ 40.01575 492.2394 0 ] /Rect [ 549.6998 466.7894 555.2598 478.7894 ] /Subtype /Link /Type /Annot
>>
endobj
40 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 87 0 R /XYZ 40.01575 362.6394 0 ] /Rect [ 100.0157 448.0394 272.3157 460.0394 ] /Subtype /Link /Type /Annot
>>
endobj
41 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 87 0 R /XYZ 40.01575 362.6394 0 ] /Rect [ 549.6998 448.7894 555.2598 460.7894 ] /Subtype /Link /Type /Annot
>>
endobj
42 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 87 0 R /XYZ 40.01575 223.4394 0 ] /Rect [ 100.0157 430.0394 187.8457 442.0394 ] /Subtype /Link /Type /Annot
>>
endobj
43 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 87 0 R /XYZ 40.01575 223.4394 0 ] /Rect [ 549.6998 430.7894 555.2598 442.7894 ] /Subtype /Link /Type /Annot
>>
endobj
44 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 87 0 R /XYZ 40.01575 81.43937 0 ] /Rect [ 60.01575 412.0394 182.8457 424.0394 ] /Subtype /Link /Type /Annot
>>
endobj
45 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 87 0 R /XYZ 40.01575 81.43937 0 ] /Rect [ 549.6998 412.7894 555.2598 424.7894 ] /Subtype /Link /Type /Annot
>>
endobj
46 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 92 0 R /XYZ 40.01575 507.0394 0 ] /Rect [ 60.01575 394.0394 128.9257 406.0394 ] /Subtype /Link /Type /Annot
>>
endobj
47 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 92 0 R /XYZ 40.01575 507.0394 0 ] /Rect [ 549.6998 394.7894 555.2598 406.7894 ] /Subtype /Link /Type /Annot
>>
endobj
48 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 92 0 R /XYZ 40.01575 471.8394 0 ] /Rect [ 60.01575 376.0394 133.3757 388.0394 ] /Subtype /Link /Type /Annot
>>
endobj
49 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 92 0 R /XYZ 40.01575 471.8394 0 ] /Rect [ 549.6998 376.7894 555.2598 388.7894 ] /Subtype /Link /Type /Annot
>>
endobj
50 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 92 0 R /XYZ 40.01575 436.6394 0 ] /Rect [ 80.01575 358.0394 252.8457 370.0394 ] /Subtype /Link /Type /Annot
>>
endobj
51 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 92 0 R /XYZ 40.01575 436.6394 0 ] /Rect [ 549.6998 358.7894 555.2598 370.7894 ] /Subtype /Link /Type /Annot
>>
endobj
52 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 93 0 R /XYZ 40.01575 581.4394 0 ] /Rect [ 60.01575 340.0394 208.4157 352.0394 ] /Subtype /Link /Type /Annot
>>
endobj
53 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 93 0 R /XYZ 40.01575 581.4394 0 ] /Rect [ 549.6998 340.7894 555.2598 352.7894 ] /Subtype /Link /Type /Annot
>>
endobj
54 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 93 0 R /XYZ 40.01575 546.2394 0 ] /Rect [ 60.01575 322.0394 133.9257 334.0394 ] /Subtype /Link /Type /Annot
>>
endobj
55 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 93 0 R /XYZ 40.01575 546.2394 0 ] /Rect [ 549.6998 322.7894 555.2598 334.7894 ] /Subtype /Link /Type /Annot
>>
endobj
56 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 93 0 R /XYZ 40.01575 511.0394 0 ] /Rect [ 60.01575 304.0394 176.7257 316.0394 ] /Subtype /Link /Type /Annot
>>
endobj
57 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 93 0 R /XYZ 40.01575 511.0394 0 ] /Rect [ 549.6998 304.7894 555.2598 316.7894 ] /Subtype /Link /Type /Annot
>>
endobj
58 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 93 0 R /XYZ 40.01575 475.8394 0 ] /Rect [ 40.01575 286.0394 126.7157 298.0394 ] /Subtype /Link /Type /Annot
>>
endobj
59 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 93 0 R /XYZ 40.01575 475.8394 0 ] /Rect [ 549.6998 286.7894 555.2598 298.7894 ] /Subtype /Link /Type /Annot
>>
endobj
60 0 obj
<<
/Annots [ 6 0 R 7 0 R 8 0 R 9 0 R 10 0 R 11 0 R 12 0 R 13 0 R 14 0 R 15 0 R 
  16 0 R 17 0 R 18 0 R 19 0 R 20 0 R 21 0 R 22 0 R 23 0 R 24 0 R 25 0 R 
  26 0 R 27 0 R 28 0 R 29 0 R 30 0 R 31 0 R 32 0 R 33 0 R 34 0 R 35 0 R 
  36 0 R 37 0 R 38 0 R 39 0 R 40 0 R 41 0 R 42 0 R 43 0 R 44 0 R 45 0 R 
  46 0 R 47 0 R 48 0 R 49 0 R 50 0 R 51 0 R 52 0 R 53 0 R 54 0 R 55 0 R 
  56 0 R 57 0 R 58 0 R 59 0 R ] /Contents 127 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 124 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
61 0 obj
<<
/Contents 128 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 124 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
62 0 obj
<<
/BaseFont /Helvetica-BoldOblique /Encoding /WinAnsiEncoding /Name /F3 /Subtype /Type1 /Type /Font
>>
endobj
63 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://git-scm.com/)
>> /Border [ 0 0 0 ] /Rect [ 91.91575 216.0394 102.4757 228.0394 ] /Subtype /Link /Type /Annot
>>
endobj
64 0 obj
<<
/BaseFont /Courier /Encoding /WinAnsiEncoding /Name /F4 /Subtype /Type1 /Type /Font
>>
endobj
65 0 obj
<<
/BaseFont /Helvetica-Oblique /Encoding /WinAnsiEncoding /Name /F5 /Subtype /Type1 /Type /Font
>>
endobj
66 0 obj
<<
/Annots [ 63 0 R ] /Contents 129 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 124 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
67 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://github.com/riscv/riscv-gcc)
>> /Border [ 0 0 0 ] /Rect [ 91.91575 633.6394 131.3557 645.6394 ] /Subtype /Link /Type /Annot
>>
endobj
68 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://github.com/riscv/riscv-isa-sim#)
>> /Border [ 0 0 0 ] /Rect [ 86.01575 435.0394 109.3557 447.0394 ] /Subtype /Link /Type /Annot
>>
endobj
69 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://github.com/riscv/riscv-isa-sim#build-steps)
>> /Border [ 0 0 0 ] /Rect [ 134.3657 417.0394 184.3857 429.0394 ] /Subtype /Link /Type /Annot
>>
endobj
70 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://github.com/riscv/riscv-ovpsim)
>> /Border [ 0 0 0 ] /Rect [ 86.01575 357.0394 141.5657 369.0394 ] /Subtype /Link /Type /Annot
>>
endobj
71 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://github.com/westerndigitalcorporation/swerv-ISS)
>> /Border [ 0 0 0 ] /Rect [ 86.01575 297.0394 120.4657 309.0394 ] /Subtype /Link /Type /Annot
>>
endobj
72 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://github.com/rems-project/sail-riscv)
>> /Border [ 0 0 0 ] /Rect [ 86.01575 255.0394 124.8957 267.0394 ] /Subtype /Link /Type /Annot
>>
endobj
73 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://github.com/rems-project/sail-riscv/blob/master/README.md)
>> /Border [ 0 0 0 ] /Rect [ 134.3657 237.0394 199.9257 249.0394 ] /Subtype /Link /Type /Annot
>>
endobj
74 0 obj
<<
/Annots [ 67 0 R 68 0 R 69 0 R 70 0 R 71 0 R 72 0 R 73 0 R ] /Contents 130 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 124 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
75 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://github.com/google/riscv-dv/blob/master/yaml/base_testlist.yaml)
>> /Border [ 0 0 0 ] /Rect [ 208.4357 649.4394 285.1257 661.4394 ] /Subtype /Link /Type /Annot
>>
endobj
76 0 obj
<<
/Annots [ 75 0 R ] /Contents 131 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 124 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
77 0 obj
<<
/BaseFont /Courier-Oblique /Encoding /WinAnsiEncoding /Name /F6 /Subtype /Type1 /Type /Font
>>
endobj
78 0 obj
<<
/BaseFont /Courier-Bold /Encoding /WinAnsiEncoding /Name /F7 /Subtype /Type1 /Type /Font
>>
endobj
79 0 obj
<<
/Contents 132 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 124 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
80 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://github.com/google/riscv-dv/blob/master/src/riscv_instr_gen_config.sv)
>> /Border [ 0 0 0 ] /Rect [ 211.7557 656.2394 324.0157 668.2394 ] /Subtype /Link /Type /Annot
>>
endobj
81 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://github.com/google/riscv-dv/blob/master/yaml/testlist.yaml)
>> /Border [ 0 0 0 ] /Rect [ 87.80575 458.6394 146.1557 470.6394 ] /Subtype /Link /Type /Annot
>>
endobj
82 0 obj
<<
/Annots [ 80 0 R 81 0 R ] /Contents 133 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 124 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
83 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://github.com/google/riscv-dv/blob/master/yaml/csr_template.yaml)
>> /Border [ 0 0 0 ] /Rect [ 40.01575 230.1894 188.9457 242.1894 ] /Subtype /Link /Type /Annot
>>
endobj
84 0 obj
<<
/Annots [ 83 0 R ] /Contents 134 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 124 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
85 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://github.com/google/riscv-dv/blob/master/scripts/gen_csr_test.py)
>> /Border [ 0 0 0 ] /Rect [ 216.7557 457.4394 326.8138 469.4394 ] /Subtype /Link /Type /Annot
>>
endobj
86 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://github.com/google/riscv-dv/blob/master/yaml/iss.yaml)
>> /Border [ 0 0 0 ] /Rect [ 163.9757 191.0394 200.0857 203.0394 ] /Subtype /Link /Type /Annot
>>
endobj
87 0 obj
<<
/Annots [ 85 0 R 86 0 R ] /Contents 135 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 124 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
88 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://github.com/lowRISC/ibex/blob/master/doc/verification.rst)
>> /Border [ 0 0 0 ] /Rect [ 296.2257 775.0394 453.2296 787.0394 ] /Subtype /Link /Type /Annot
>>
endobj
89 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://github.com/lowRISC/ibex/blob/master/dv/uvm/Makefile#L68)
>> /Border [ 0 0 0 ] /Rect [ 113.9457 541.0394 229.5357 553.0394 ] /Subtype /Link /Type /Annot
>>
endobj
90 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://github.com/google/riscv-dv/blob/master/src/riscv_instr_cover_group.sv)
>> /Border [ 0 0 0 ] /Rect [ 214.5457 335.8394 333.4657 347.8394 ] /Subtype /Link /Type /Annot
>>
endobj
91 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://github.com/google/riscv-dv/blob/master/setting/riscv_core_setting.sv)
>> /Border [ 0 0 0 ] /Rect [ 259.0157 89.83937 362.5552 101.8394 ] /Subtype /Link /Type /Annot
>>
endobj
92 0 obj
<<
/Annots [ 88 0 R 89 0 R 90 0 R 91 0 R ] /Contents 136 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 124 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
93 0 obj
<<
/Contents 137 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 124 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
94 0 obj
<<
/Outlines 96 0 R /PageLabels 138 0 R /PageMode /UseNone /Pages 124 0 R /Type /Catalog
>>
endobj
95 0 obj
<<
/Author () /CreationDate (D:20200106180336+08'00') /Creator (\(unspecified\)) /Keywords () /ModDate (D:20200106180336+08'00') /Producer (ReportLab PDF Library - www.reportlab.com) 
  /Subject (\(unspecified\)) /Title () /Trapped /False
>>
endobj
96 0 obj
<<
/Count 32 /First 97 0 R /Last 123 0 R /Type /Outlines
>>
endobj
97 0 obj
<<
/Count 25 /Dest [ 66 0 R /XYZ 40.01575 787.0394 0 ] /First 98 0 R /Last 122 0 R /Next 123 0 R /Parent 96 0 R 
  /Title (Welcome to riscv-dv\220s documentation!)
>>
endobj
98 0 obj
<<
/Dest [ 66 0 R /XYZ 40.01575 747.0394 0 ] /Next 99 0 R /Parent 97 0 R /Title (Overview)
>>
endobj
99 0 obj
<<
/Count 7 /Dest [ 66 0 R /XYZ 40.01575 381.8394 0 ] /First 100 0 R /Last 106 0 R /Next 107 0 R /Parent 97 0 R 
  /Prev 98 0 R /Title (Getting Started)
>>
endobj
100 0 obj
<<
/Dest [ 66 0 R /XYZ 40.01575 346.6394 0 ] /Next 101 0 R /Parent 99 0 R /Title (Prerequisites)
>>
endobj
101 0 obj
<<
/Dest [ 66 0 R /XYZ 40.01575 271.8394 0 ] /Next 102 0 R /Parent 99 0 R /Prev 100 0 R /Title (Install RISCV-DV)
>>
endobj
102 0 obj
<<
/Dest [ 74 0 R /XYZ 40.01575 677.4394 0 ] /Next 103 0 R /Parent 99 0 R /Prev 101 0 R /Title (Setup RISCV-GCC compiler toolchain)
>>
endobj
103 0 obj
<<
/Dest [ 74 0 R /XYZ 40.01575 499.8394 0 ] /Next 104 0 R /Parent 99 0 R /Prev 102 0 R /Title (Setup ISS \(instruction set simulator\))
>>
endobj
104 0 obj
<<
/Dest [ 74 0 R /XYZ 40.01575 136.2394 0 ] /Next 105 0 R /Parent 99 0 R /Prev 103 0 R /Title (Running the generator)
>>
endobj
105 0 obj
<<
/Dest [ 76 0 R /XYZ 40.01575 285.0394 0 ] /Next 106 0 R /Parent 99 0 R /Prev 104 0 R /Title (Run ISS simulation)
>>
endobj
106 0 obj
<<
/Dest [ 79 0 R /XYZ 40.01575 692.2394 0 ] /Parent 99 0 R /Prev 105 0 R /Title (Run directed assembly tests)
>>
endobj
107 0 obj
<<
/Count 8 /Dest [ 79 0 R /XYZ 40.01575 518.6394 0 ] /First 108 0 R /Last 113 0 R /Next 116 0 R /Parent 97 0 R 
  /Prev 99 0 R /Title (Configuration)
>>
endobj
108 0 obj
<<
/Dest [ 79 0 R /XYZ 40.01575 483.4394 0 ] /Next 109 0 R /Parent 107 0 R /Title (Configure the generator to match your processor features)
>>
endobj
109 0 obj
<<
/Dest [ 82 0 R /XYZ 40.01575 787.0394 0 ] /Next 110 0 R /Parent 107 0 R /Prev 108 0 R /Title (Setup the memory map)
>>
endobj
110 0 obj
<<
/Dest [ 82 0 R /XYZ 40.01575 493.4394 0 ] /Next 111 0 R /Parent 107 0 R /Prev 109 0 R /Title (Setup regression test list)
>>
endobj
111 0 obj
<<
/Dest [ 84 0 R /XYZ 40.01575 787.0394 0 ] /Next 112 0 R /Parent 107 0 R /Prev 110 0 R /Title (Runtime options of the generator)
>>
endobj
112 0 obj
<<
/Dest [ 84 0 R /XYZ 40.01575 294.2394 0 ] /Next 113 0 R /Parent 107 0 R /Prev 111 0 R /Title (Setup Privileged CSR description \(optional\))
>>
endobj
113 0 obj
<<
/Count 2 /Dest [ 87 0 R /XYZ 40.01575 492.2394 0 ] /First 114 0 R /Last 115 0 R /Parent 107 0 R /Prev 112 0 R 
  /Title (Privileged CSR Test Generation \(optional\))
>>
endobj
114 0 obj
<<
/Dest [ 87 0 R /XYZ 40.01575 362.6394 0 ] /Next 115 0 R /Parent 113 0 R /Title (Adding new instruction stream and test)
>>
endobj
115 0 obj
<<
/Dest [ 87 0 R /XYZ 40.01575 223.4394 0 ] /Parent 113 0 R /Prev 114 0 R /Title (Integrate a new ISS)
>>
endobj
116 0 obj
<<
/Dest [ 87 0 R /XYZ 40.01575 81.43937 0 ] /Next 117 0 R /Parent 97 0 R /Prev 107 0 R /Title (End to End Simulation Flow)
>>
endobj
117 0 obj
<<
/Dest [ 92 0 R /XYZ 40.01575 507.0394 0 ] /Next 118 0 R /Parent 97 0 R /Prev 116 0 R /Title (Generator Flow)
>>
endobj
118 0 obj
<<
/Count 1 /Dest [ 92 0 R /XYZ 40.01575 471.8394 0 ] /First 119 0 R /Last 119 0 R /Next 120 0 R /Parent 97 0 R 
  /Prev 117 0 R /Title (Coverage Model)
>>
endobj
119 0 obj
<<
/Dest [ 92 0 R /XYZ 40.01575 436.6394 0 ] /Parent 118 0 R /Title (Functional coverage \(work in progress\))
>>
endobj
120 0 obj
<<
/Dest [ 93 0 R /XYZ 40.01575 581.4394 0 ] /Next 121 0 R /Parent 97 0 R /Prev 118 0 R /Title (Customize and Extend Generator)
>>
endobj
121 0 obj
<<
/Dest [ 93 0 R /XYZ 40.01575 546.2394 0 ] /Next 122 0 R /Parent 97 0 R /Prev 120 0 R /Title (Class Reference)
>>
endobj
122 0 obj
<<
/Dest [ 93 0 R /XYZ 40.01575 511.0394 0 ] /Parent 97 0 R /Prev 121 0 R /Title (Command Line Reference)
>>
endobj
123 0 obj
<<
/Dest [ 93 0 R /XYZ 40.01575 475.8394 0 ] /Parent 96 0 R /Prev 97 0 R /Title (Indices and tables)
>>
endobj
124 0 obj
<<
/Count 13 /Kids [ 4 0 R 5 0 R 60 0 R 61 0 R 66 0 R 74 0 R 76 0 R 79 0 R 82 0 R 84 0 R 
  87 0 R 92 0 R 93 0 R ] /Type /Pages
>>
endobj
125 0 obj
<<
/Length 868
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 775.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 30 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 4 Tm /F2 20 Tf 24 TL 209.842 0 Td (RISCV-DV) Tj T* -209.842 0 Td ET
Q
Q
q
1 0 0 1 40.01575 745.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 24 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 3 Tm /F2 15 Tf 18 TL 230.9445 0 Td (version) Tj T* -230.9445 0 Td ET
Q
Q
q
1 0 0 1 40.01575 650 cm
Q
q
1 0 0 1 40.01575 629.6 cm
q
0 0 0 rg
BT 1 0 0 1 0 2.4 Tm /F2 12 Tf 14.4 TL 224.946 0 Td (Google, Inc) Tj T* -224.946 0 Td ET
Q
Q
q
1 0 0 1 40.01575 544.5606 cm
Q
q
1 0 0 1 40.01575 524.1606 cm
q
0 0 0 rg
BT 1 0 0 1 0 2.4 Tm /F1 12 Tf 14.4 TL 211.26 0 Td (January 06, 2020) Tj T* -211.26 0 Td ET
Q
Q
q
1 0 0 1 40.01575 524.1606 cm
Q
q
1 0 0 1 40.01575 524.1606 cm
Q
 
endstream
endobj
126 0 obj
<<
/Length 75
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 799.0394 cm
Q
 
endstream
endobj
127 0 obj
<<
/Length 6557
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 775.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 30 re B*
Q
q
BT 1 0 0 1 0 4 Tm 24 TL /F2 20 Tf .12549 .262745 .360784 rg (Contents) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 283.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 0 471 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 .501961 rg (Welcome to riscv-dv\222s documentation!) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 471 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 66.44 0 Td (1) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 453 cm
q
BT 1 0 0 1 20 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Overview) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 453 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (1) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 435 cm
q
BT 1 0 0 1 20 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Getting Started) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 435 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (1) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 417 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Prerequisites) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 417 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (1) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 399 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Install RISCV-DV) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 399 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (1) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 381 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Setup RISCV-GCC compiler toolchain) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 381 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (2) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 363 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Setup ISS \(instruction set simulator\)) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 363 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (2) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 345 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Running the generator) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 345 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (2) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 327 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Run ISS simulation) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 327 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (3) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 309 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Run directed assembly tests) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 309 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (4) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 291 cm
q
BT 1 0 0 1 20 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Configuration) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 291 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (4) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 273 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Configure the generator to match your processor features) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 273 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (4) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 255 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Setup the memory map) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 255 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (5) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 237 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Setup regression test list) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 237 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (5) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 219 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Runtime options of the generator) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 219 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (6) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 201 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Setup Privileged CSR description \(optional\)) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 201 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (6) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 183 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Privileged CSR Test Generation \(optional\)) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 183 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (7) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 165 cm
q
BT 1 0 0 1 60 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Adding new instruction stream and test) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 165 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (7) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 147 cm
q
BT 1 0 0 1 60 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Integrate a new ISS) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 147 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (7) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 129 cm
q
BT 1 0 0 1 20 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (End to End Simulation Flow) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 129 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (7) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 111 cm
q
BT 1 0 0 1 20 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Generator Flow) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 111 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (8) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 93 cm
q
BT 1 0 0 1 20 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Coverage Model) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 93 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (8) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 75 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Functional coverage \(work in progress\)) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 75 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (8) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 57 cm
q
BT 1 0 0 1 20 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Customize and Extend Generator) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 57 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (9) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 39 cm
q
BT 1 0 0 1 20 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Class Reference) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 39 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (9) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 21 cm
q
BT 1 0 0 1 20 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Command Line Reference) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 21 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (9) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 .501961 rg (Indices and tables) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 3 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 66.44 0 Td (9) Tj T* -66.44 0 Td ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 283.0394 cm
Q
q
1 0 0 1 40.01575 283.0394 cm
Q
 
endstream
endobj
128 0 obj
<<
/Length 75
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 799.0394 cm
Q
 
endstream
endobj
129 0 obj
<<
/Length 9422
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 763.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 30 re B*
Q
q
BT 1 0 0 1 0 4 Tm 24 TL /F2 20 Tf .12549 .262745 .360784 rg (Welcome to riscv-dv\222s documentation!) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 727.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 25.2 re B*
Q
q
BT 1 0 0 1 0 3.2 Tm 19.2 TL /F2 16 Tf .12549 .262745 .360784 rg (Overview) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 697.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.929546 Tw (RISCV-DV is a SV/UVM based open-source instruction generator for RISC-V processor verification. It currently) Tj T* 0 Tw (supports the following features:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 691.8394 cm
Q
q
1 0 0 1 40.01575 691.8394 cm
Q
q
1 0 0 1 40.01575 679.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Supported instruction set: RV32IMAFDC, RV64IMAFDC) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 673.8394 cm
Q
q
1 0 0 1 40.01575 661.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Supported privileged mode: machine mode, supervisor mode, user mode) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 655.8394 cm
Q
q
1 0 0 1 40.01575 643.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Page table randomization and exception) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 637.8394 cm
Q
q
1 0 0 1 40.01575 625.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Privileged CSR setup randomization) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 619.8394 cm
Q
q
1 0 0 1 40.01575 607.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Privileged CSR test suite) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 601.8394 cm
Q
q
1 0 0 1 40.01575 589.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Trap/interrupt handling) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 583.8394 cm
Q
q
1 0 0 1 40.01575 571.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Test suite to stress test MMU) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 565.8394 cm
Q
q
1 0 0 1 40.01575 553.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Sub-program generation and random program calls) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 547.8394 cm
Q
q
1 0 0 1 40.01575 535.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Illegal instruction and HINT instruction generation) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 529.8394 cm
Q
q
1 0 0 1 40.01575 517.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Random forward/backward branch instructions) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 511.8394 cm
Q
q
1 0 0 1 40.01575 499.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Supports mixing directed instructions with random instruction stream) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 493.8394 cm
Q
q
1 0 0 1 40.01575 481.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Debug mode support, with fully randomized debug ROM) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 475.8394 cm
Q
q
1 0 0 1 40.01575 463.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Instruction generation coverage model) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 457.8394 cm
Q
q
1 0 0 1 40.01575 445.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Communication of information to any integrated SV testbench) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 439.8394 cm
Q
q
1 0 0 1 40.01575 427.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Co-simulation with multiple ISS : spike, riscv-ovpsim) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 427.8394 cm
Q
q
1 0 0 1 40.01575 397.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL -0.082295 Tw (A CSR test generation script written in Python is also provided, to generate a directed test suite that stresses all CSR) Tj T* 0 Tw (instructions on all of the CSRs that the core implements.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 362.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 25.2 re B*
Q
q
BT 1 0 0 1 0 3.2 Tm 19.2 TL /F2 16 Tf .12549 .262745 .360784 rg (Getting Started) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 329.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Prerequisites) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 287.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .648561 Tw (To be able to run the instruction generator, you need to have an RTL simulator which supports SystemVerilog and) Tj T* 0 Tw 1.86815 Tw (UVM 1.2. This generator has been verified with Synopsys VCS, Cadence Incisive/Xcelium, and Mentor Questa) Tj T* 0 Tw (simulators. Please make sure the EDA tool environment is properly setup before running the generator.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 255.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Install RISCV-DV) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 237.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Getting the source) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 231.0394 cm
Q
q
1 0 0 1 40.01575 231.0394 cm
Q
q
1 0 0 1 40.01575 219.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (1.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Install ) Tj 0 0 .501961 rg (git) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 213.0394 cm
Q
q
1 0 0 1 40.01575 201.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (2.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F4 10 Tf 0 0 0 rg (git) Tj ( ) Tj (clone) Tj ( ) Tj (https://github.com/google/riscv-dv.git) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 195.0394 cm
Q
q
1 0 0 1 40.01575 183.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (3.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F4 10 Tf 0 0 0 rg (cd) Tj ( ) Tj (riscv-dv) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 183.0394 cm
Q
q
1 0 0 1 40.01575 165.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (There are two ways that you can run scripts from riscv-dv.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 135.0394 cm
q
BT 1 0 0 1 0 14 Tm 2.815535 Tw 12 TL /F1 10 Tf 0 0 0 rg (For developers which may work on multiple clones in parallel, using directly run by ) Tj /F5 10 Tf (python3) Tj /F1 10 Tf ( script is highly) Tj T* 0 Tw (recommended. Example:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 104.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 30 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F4 10 Tf 12 TL (pip3 install -r requirements.txt     # install dependencies \(only once\)) Tj T* (python3 run.py --help) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 72.23937 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .249672 Tw (For normal users, using the python package is recommended. First, cd to the directory where riscv-dv is cloned and) Tj T* 0 Tw (run:) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Welcome to riscv-dv\222s documentation!) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (1) Tj T* ET
Q
Q
 
endstream
endobj
130 0 obj
<<
/Length 9853
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 756.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 30 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F4 10 Tf 12 TL (export PATH=$HOME/.local/bin/:$PATH  # add ~/.local/bin to the $PATH \(only once\)) Tj T* (pip3 install --user -e .) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 724.2394 cm
q
BT 1 0 0 1 0 14 Tm 1.507888 Tw 12 TL /F1 10 Tf 0 0 0 rg (This installs riscv-dv in a mode where any changes within the repo are immediately available simply by running) Tj T* 0 Tw /F5 10 Tf (run) Tj /F1 10 Tf (/) Tj /F5 10 Tf (cov) Tj /F1 10 Tf (. There is no need to repeatedly run ) Tj /F5 10 Tf (pip install .) Tj /F1 10 Tf ( after each change. Example for running:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 693.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 30 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F4 10 Tf 12 TL (run --help) Tj T* (cov --help) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 660.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Setup RISCV-GCC compiler toolchain) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 648.6394 cm
Q
q
1 0 0 1 40.01575 648.6394 cm
Q
q
1 0 0 1 40.01575 636.6394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (1.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Install ) Tj 0 0 .501961 rg (riscv-gcc) Tj 0 0 0 rg ( toolchain) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 630.6394 cm
Q
q
1 0 0 1 40.01575 606.6394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (2.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm 8.597409 Tw 12 TL /F1 10 Tf 0 0 0 rg (Set environment variable RISCV_GCC to the RISC-V gcc executable executable. \(example:) Tj T* 0 Tw (<) Tj (install_dir) Tj (>) Tj (/bin/riscv32-unknown-elf-gcc\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 600.6394 cm
Q
q
1 0 0 1 40.01575 576.6394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (3.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm 6.650455 Tw 12 TL /F1 10 Tf 0 0 0 rg (Set environment variable RISCV_OBJCOPY to RISC-v objcopy executable executable. \(example:) Tj T* 0 Tw (<) Tj (install_dir) Tj (>) Tj (/bin/riscv32-unknown-elf-objcopy\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 576.6394 cm
Q
q
1 0 0 1 40.01575 558.6394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Sample .bashrc setup:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 515.8394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 42 re B*
Q
q
BT 1 0 0 1 0 26 Tm 12 TL /F4 10 Tf 0 0 0 rg (export RISCV_TOOLCHAIN=) Tj (<) Tj (riscv_gcc_install_path) Tj (>) Tj  T* (export RISCV_GCC="$RISCV_TOOLCHAIN/bin/riscv32-unknown-elf-gcc") Tj T* (export RISCV_OBJCOPY="$RISCV_TOOLCHAIN/bin/riscv32-unknown-elf-objcopy") Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 483.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Setup ISS \(instruction set simulator\)) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 465.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Currently three ISS are supported, the default ISS is spike. You can install any one of below to run ISS simulation.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 459.0394 cm
Q
q
1 0 0 1 40.01575 459.0394 cm
Q
q
1 0 0 1 40.01575 387.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (1.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 63 cm
Q
q
1 0 0 1 23 63 cm
Q
q
1 0 0 1 23 51 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (spike) Tj 0 0 0 rg ( setup) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 45 cm
Q
q
1 0 0 1 23 33 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Follow the ) Tj 0 0 .501961 rg (spike steps) Tj 0 0 0 rg ( to build spike) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 27 cm
Q
q
1 0 0 1 23 15 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Build spike with \223\226enable-commitlog\224) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 9 cm
Q
q
1 0 0 1 23 -3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Set environment variable SPIKE_PATH to the directory of the spike binary) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 -3 cm
Q
q
Q
Q
q
1 0 0 1 40.01575 381.0394 cm
Q
q
1 0 0 1 40.01575 327.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (2.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 45 cm
Q
q
1 0 0 1 23 45 cm
Q
q
1 0 0 1 23 33 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (riscv-ovpsim) Tj 0 0 0 rg ( setup) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 27 cm
Q
q
1 0 0 1 23 15 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Download the riscv-ovpsim binary) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 9 cm
Q
q
1 0 0 1 23 -3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Set environment variable OVPSIM_PATH to the directory of the ovpsim binary) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 -3 cm
Q
q
Q
Q
q
1 0 0 1 40.01575 321.0394 cm
Q
q
1 0 0 1 40.01575 285.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (3.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 27 cm
Q
q
1 0 0 1 23 27 cm
Q
q
1 0 0 1 23 15 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (whisper) Tj 0 0 0 rg ( \(swerv-ISS\) setup) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 9 cm
Q
q
1 0 0 1 23 -3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Follow the instruction to install the ISS, and set WHISPER_ISS to the whisper binary) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 -3 cm
Q
q
Q
Q
q
1 0 0 1 40.01575 279.0394 cm
Q
q
1 0 0 1 40.01575 225.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (4.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 45 cm
Q
q
1 0 0 1 23 45 cm
Q
q
1 0 0 1 23 33 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (sail-riscv) Tj 0 0 0 rg ( setup) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 27 cm
Q
q
1 0 0 1 23 15 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Follow the ) Tj 0 0 .501961 rg (sail-riscv steps) Tj 0 0 0 rg ( to install sail-riscv) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 9 cm
Q
q
1 0 0 1 23 -3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Set environment variable SAIL_RISCV to the path of sail-riscv binary) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 -3 cm
Q
q
Q
Q
q
1 0 0 1 40.01575 225.0394 cm
Q
q
1 0 0 1 40.01575 207.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Sample .bashrc setup:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 152.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 54 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F4 10 Tf 12 TL (export SPIKE_PATH=$RISCV_TOOLCHAIN/bin) Tj T* (export SAIL_RISCV="xx/xxx/ocaml_emulator") Tj T* (export OVPSIM_PATH=/xx/xxx/riscv-ovpsim/bin/Linux64) Tj T* (export WHISPER_ISS="xx/xxx/swerv-ISS/build-Linux/whisper") Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 119.4394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Running the generator) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 101.4394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (A simple script ) Tj /F5 10 Tf (run.py) Tj /F1 10 Tf ( is provided for you to run a single test or a regression.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 83.43937 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (You can use \226help to get the complete command reference:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 64.63937 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 18 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F4 10 Tf 12 TL (run --help) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Welcome to riscv-dv\222s documentation!) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (2) Tj T* ET
Q
Q
 
endstream
endobj
131 0 obj
<<
/Length 4577
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 775.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Here is the command to run a single test:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 756.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 18 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F4 10 Tf 12 TL (run --test=riscv_arithmetic_basic_test) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 736.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (You can specify the simulator by \223-simulator\224 option:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 669.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 66 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 50 Tm /F4 10 Tf 12 TL (run --test riscv_arithmetic_basic_test --simulator ius) Tj T* (run --test riscv_arithmetic_basic_test --simulator vcs) Tj T* (run --test riscv_arithmetic_basic_test --simulator questa) Tj T* (run --test riscv_arithmetic_basic_test --simulator dsim) Tj T* (run --test riscv_arithmetic_basic_test --simulator qrun) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 649.4394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The complete test list can be found in ) Tj 0 0 .501961 rg (base testlist yaml) Tj 0 0 0 rg (. To run a full regression, simply use below command:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 630.6394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 18 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F4 10 Tf 12 TL (run) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 610.6394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (You can also run multiple generator jobs in parallel through LSF:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 591.8394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 18 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F4 10 Tf 12 TL (run --lsf_cmd="bsub -Is") Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 571.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Here\222s a few more examples of the run command:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 301.0394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 270 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 254 Tm /F4 10 Tf 12 TL (# Run a single test 10 times) Tj T* (run --test riscv_arithmetic_basic_test --iterations 10) Tj T*  T* (# Run multiple tests) Tj T* (run --test riscv_arithmetic_basic_test,riscv_rand_instr_test) Tj T*  T* (# Run a test with verbose logging) Tj T* (run --test riscv_arithmetic_basic_test --verbose) Tj T*  T* (# Run a test with a specified seed) Tj T* (run --test riscv_arithmetic_basic_test --seed 123) Tj T*  T* (# Skip the generation, run ISS simulation with previously generated program) Tj T* (run --test riscv_arithmetic_basic_test --steps iss_sim) Tj T*  T* (# Run the generator only, do not compile and simluation with ISS) Tj T* (run --test riscv_arithmetic_basic_test --steps gen) Tj T*  T* (# Compile the generator only, do not simulate) Tj T* (run --test riscv_arithmetic_basic_test --co) Tj T*  T* (....) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 268.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Run ISS simulation) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 250.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (You can use -iss to run with different ISS:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 111.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 138 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 122 Tm /F4 10 Tf 12 TL (# Run ISS with spike) Tj T* (run --test riscv_arithmetic_basic_test --iss spike) Tj T*  T* (# Run ISS with riscv-ovpsim) Tj T* (run --test riscv_rand_instr_test --iss ovpsim) Tj T*  T* (# Run ISS with whisper \(swerv-ISS\)) Tj T* (run --test riscv_rand_instr_test --iss whisper) Tj T*  T* (# Run ISS with sail-riscv) Tj T* (run --test riscv_rand_instr_test --iss sail) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 91.43937 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (To run with ISS simulation for RV32IMC, you can specify ISA and ABI from command line like this:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 60.63937 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 30 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F4 10 Tf 12 TL (# Run a full regression with RV32IMC) Tj T* (run --isa rv32imc --mabi ilp32) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Welcome to riscv-dv\222s documentation!) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (3) Tj T* ET
Q
Q
 
endstream
endobj
132 0 obj
<<
/Length 7912
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 751.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .499163 Tw (We have added a flow to run ISS simulation with both spike and riscv-ovpsim, the instruction trace from these runs) Tj T* 0 Tw 1.390227 Tw (will be cross compared. This could greatly speed up your development of new test without the need to simulate) Tj T* 0 Tw (against a real RISC-V processor:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 708.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 42 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F4 10 Tf 12 TL (run --test=riscv_rand_instr_test --iss=spike,ovpsim) Tj T* (run --test=riscv_rand_instr_test --iss=ovpsim,whisper) Tj T* (run --test=riscv_rand_instr_test --iss=spike,sail) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 675.4394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Run directed assembly tests) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 657.4394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Sometimes it might be useful to run some hand-coded assembly tests to hit some corner cases:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 554.6394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 102 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 86 Tm /F4 10 Tf 12 TL (# Run a single/multiple assembly test) Tj T* (run --asm_tests asm_test_path1/asm_test1.S,asm_test_path2/asm_test2.S) Tj T*  T* (# Run regression with all assembly tests\(*.S\) under a given directory) Tj T* (run --asm_tests asm_test_path1,asm_test_path2) Tj T*  T* (# Run mix between the assembly test and assembly tests under a directory) Tj T* (run --asm_tests asm_test_path1/asm_test1.S,asm_test_path2) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 534.6394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (You could also use this approach to integrate the assembly tests from other sources to riscv-dv flow.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 499.4394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 25.2 re B*
Q
q
BT 1 0 0 1 0 3.2 Tm 19.2 TL /F2 16 Tf .12549 .262745 .360784 rg (Configuration) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 466.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Configure the generator to match your processor features) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 424.6394 cm
q
BT 1 0 0 1 0 26 Tm 3.376007 Tw 12 TL /F1 10 Tf 0 0 0 rg (The default configuration of the instruction generator is ) Tj /F2 10 Tf (RV32IMC) Tj /F1 10 Tf ( \(machine mode only\). A few pre-defined) Tj T* 0 Tw 1.406711 Tw (configurations can be found under \223target\224 directory, you can run with these targets if it matches your processor) Tj T* 0 Tw (specificationi:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 357.8394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 66 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 50 Tm /F4 10 Tf 12 TL (run                   # Default target rv32imc) Tj T* (run --target rv32i    # rv32i, machine mode only) Tj T* (run --target rv32imc  # rv32imc, machine mode only) Tj T* (run --target rv64imc  # rv64imc, machine mode only) Tj T* (run --target rv64gc   # rv64gc, SV39, M/S/U mode) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 325.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.191147 Tw (If you want to have a custom setting for your processor, you can make a copy of existing target directory as the) Tj T* 0 Tw (template, and modify riscv_core_setting.sv to match your processor capability.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 127.0394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 198 re B*
Q
q
.933333 1 .8 rg
n 0 180 156 12 re f*
.933333 1 .8 rg
n 0 168 54 12 re f*
.933333 1 .8 rg
n 60 168 18 12 re f*
.933333 1 .8 rg
n 84 168 24 12 re f*
.933333 1 .8 rg
n 114 168 6 12 re f*
.933333 1 .8 rg
n 126 168 12 12 re f*
.933333 1 .8 rg
n 138 168 6 12 re f*
.933333 1 .8 rg
n 0 144 474 12 re f*
.933333 1 .8 rg
n 0 132 54 12 re f*
.933333 1 .8 rg
n 60 132 66 12 re f*
.933333 1 .8 rg
n 132 132 54 12 re f*
.933333 1 .8 rg
n 192 132 6 12 re f*
.933333 1 .8 rg
n 204 132 24 12 re f*
.933333 1 .8 rg
n 228 132 6 12 re f*
.933333 1 .8 rg
n 0 108 168 12 re f*
.933333 1 .8 rg
n 0 96 102 12 re f*
.933333 1 .8 rg
n 108 96 150 12 re f*
.933333 1 .8 rg
n 258 96 12 12 re f*
.933333 1 .8 rg
n 276 96 6 12 re f*
.933333 1 .8 rg
n 288 96 6 12 re f*
.933333 1 .8 rg
n 294 96 54 12 re f*
.933333 1 .8 rg
n 348 96 6 12 re f*
.933333 1 .8 rg
n 294 84 90 12 re f*
.933333 1 .8 rg
n 384 84 6 12 re f*
.933333 1 .8 rg
n 294 72 72 12 re f*
.933333 1 .8 rg
n 366 72 12 12 re f*
.933333 1 .8 rg
n 0 48 162 12 re f*
.933333 1 .8 rg
n 0 36 108 12 re f*
.933333 1 .8 rg
n 114 36 102 12 re f*
.933333 1 .8 rg
n 216 36 12 12 re f*
.933333 1 .8 rg
n 234 36 6 12 re f*
.933333 1 .8 rg
n 246 36 18 12 re f*
.933333 1 .8 rg
n 0 12 198 12 re f*
.933333 1 .8 rg
n 0 0 114 12 re f*
.933333 1 .8 rg
n 120 0 78 12 re f*
.933333 1 .8 rg
n 198 0 12 12 re f*
.933333 1 .8 rg
n 216 0 6 12 re f*
.933333 1 .8 rg
n 228 0 6 12 re f*
.933333 1 .8 rg
n 234 0 30 12 re f*
.933333 1 .8 rg
n 264 0 6 12 re f*
.933333 1 .8 rg
n 276 0 30 12 re f*
.933333 1 .8 rg
n 306 0 6 12 re f*
.933333 1 .8 rg
n 318 0 30 12 re f*
.933333 1 .8 rg
n 348 0 6 12 re f*
.933333 1 .8 rg
n 360 0 30 12 re f*
.933333 1 .8 rg
n 390 0 12 12 re f*
BT 1 0 0 1 0 182 Tm 12 TL /F6 10 Tf .501961 .501961 .501961 rg (// Bit width of RISC-V GPR) Tj T* /F7 10 Tf 0 .501961 0 rg (parameter) Tj /F4 10 Tf 0 0 0 rg ( ) Tj /F7 10 Tf .188235 .188235 .564706 rg (int) Tj /F4 10 Tf 0 0 0 rg ( ) Tj (XLEN) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj /F7 10 Tf 0 .313725 .501961 rg (64) Tj /F4 10 Tf 0 0 0 rg (;) Tj  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (// Parameter for SATP mode, set to BARE if address translation is not supported) Tj T* /F7 10 Tf 0 .501961 0 rg (parameter) Tj /F4 10 Tf 0 0 0 rg ( ) Tj (satp_mode_t) Tj ( ) Tj (SATP_MODE) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj (SV39) Tj (;) Tj  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (// Supported Privileged mode) Tj T* /F4 10 Tf 0 0 0 rg (privileged_mode_t) Tj ( ) Tj (supported_privileged_mode) Tj ([]) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj ({) Tj (USER_MODE) Tj (,) Tj  T* (                                                 ) Tj (SUPERVISOR_MODE) Tj (,) Tj  T* (                                                 ) Tj (MACHINE_MODE) Tj (};) Tj  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (// Unsupported instructions) Tj T* /F4 10 Tf 0 0 0 rg (riscv_instr_name_t) Tj ( ) Tj (unsupported_instr) Tj ([]) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj ({};) Tj  T*  T* /F6 10 Tf .501961 .501961 .501961 rg (// ISA supported by the processor) Tj T* /F4 10 Tf 0 0 0 rg (riscv_instr_group_t) Tj ( ) Tj (supported_isa) Tj ([]) Tj ( ) Tj .188235 .188235 .188235 rg (=) Tj 0 0 0 rg ( ) Tj ({) Tj (RV32I) Tj (,) Tj ( ) Tj (RV32M) Tj (,) Tj ( ) Tj (RV64I) Tj (,) Tj ( ) Tj (RV64M) Tj (};) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 107.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (You can then run the generator with ) Tj /F4 10 Tf (--custom_target) Tj ( ) Tj (<) Tj (target_dir) Tj (>) Tj /F1 10 Tf (:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 64.23937 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 42 re B*
Q
q
BT 1 0 0 1 0 26 Tm 12 TL /F4 10 Tf 0 0 0 rg (# You need to manually specify isa and mabi for your custom target) Tj T* (run --custom_target ) Tj (<) Tj (target_dir) Tj (>) Tj ( --isa ) Tj (<) Tj (isa) Tj (>) Tj ( --mabi ) Tj (<) Tj (mabi) Tj (>) Tj  T* (...) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Configuration) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (4) Tj T* ET
Q
Q
 
endstream
endobj
133 0 obj
<<
/Length 8634
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 770.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Setup the memory map) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 752.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Here\222s a few cases that you might want to allocate the instruction and data sections to match the actual memory map) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 746.2394 cm
Q
q
1 0 0 1 40.01575 746.2394 cm
Q
q
1 0 0 1 40.01575 722.2394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (1.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.060292 Tw (The processor has internal memories, and you want to test load/store from various internal/externel memory) Tj T* 0 Tw (regions) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 716.2394 cm
Q
q
1 0 0 1 40.01575 704.2394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (2.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The processor implments the PMP feature, and you want to configure the memory map to match PMP setting.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 698.2394 cm
Q
q
1 0 0 1 40.01575 674.2394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (3.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL -0.079744 Tw (Virtual address translation is implmented and you want to test load/store from sparse memory locations to verify) Tj T* 0 Tw (data TLB replacement logic.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 674.2394 cm
Q
q
1 0 0 1 40.01575 656.2394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (You can configure the memory map in ) Tj 0 0 .501961 rg (riscv_instr_gen_config.sv) Tj 0 0 0 rg (:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 565.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 90 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 74 Tm /F4 10 Tf 12 TL (mem_region_t mem_region[$] = '{) Tj T* (    '{name:"region_0", size_in_bytes: 4096,      xwr: 3'b111},) Tj T* (    '{name:"region_1", size_in_bytes: 4096 * 4,  xwr: 3'b111},) Tj T* (    '{name:"region_2", size_in_bytes: 4096 * 2,  xwr: 3'b111},) Tj T* (    '{name:"region_3", size_in_bytes: 512,       xwr: 3'b111},) Tj T* (    '{name:"region_4", size_in_bytes: 4096,      xwr: 3'b111}) Tj T* (};) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 509.4394 cm
q
0 0 0 rg
BT 1 0 0 1 0 38 Tm /F1 10 Tf 12 TL 1.210241 Tw (Each memory region belongs to a separate section in the generated assembly program. You can modify the link) Tj T* 0 Tw .056705 Tw (script to link each section to the target memory location. Please avoid setting a large memory range as it could takes) Tj T* 0 Tw .3239 Tw (a long time to randomly initializing the memory. You can break down a large memory region to a few representative) Tj T* 0 Tw (small regions which covers all the boundary conditions for the load/store testing.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 476.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Setup regression test list) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 458.6394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Test list in ) Tj 0 0 .501961 rg (YAML format) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 151.8394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 306 re B*
Q
q
.933333 1 .8 rg
n 0 288 228 12 re f*
.933333 1 .8 rg
n 0 276 264 12 re f*
.933333 1 .8 rg
n 0 264 294 12 re f*
.933333 1 .8 rg
n 0 252 318 12 re f*
.933333 1 .8 rg
n 0 240 360 12 re f*
.933333 1 .8 rg
n 0 228 378 12 re f*
.933333 1 .8 rg
n 0 216 264 12 re f*
.933333 1 .8 rg
n 0 204 426 12 re f*
.933333 1 .8 rg
n 0 192 444 12 re f*
.933333 1 .8 rg
n 0 180 360 12 re f*
.933333 1 .8 rg
n 0 168 240 12 re f*
.933333 1 .8 rg
n 240 168 6 12 re f*
.933333 1 .8 rg
n 246 168 126 12 re f*
.933333 1 .8 rg
n 0 144 6 12 re f*
.933333 1 .8 rg
n 12 144 24 12 re f*
.933333 1 .8 rg
n 36 144 6 12 re f*
.933333 1 .8 rg
n 48 144 162 12 re f*
.933333 1 .8 rg
n 12 132 66 12 re f*
.933333 1 .8 rg
n 78 132 6 12 re f*
.933333 1 .8 rg
n 90 132 6 12 re f*
.933333 1 .8 rg
n 24 120 372 12 re f*
.933333 1 .8 rg
n 12 108 48 12 re f*
.933333 1 .8 rg
n 60 108 6 12 re f*
.933333 1 .8 rg
n 72 108 6 12 re f*
.933333 1 .8 rg
n 24 96 96 12 re f*
.933333 1 .8 rg
n 24 84 126 12 re f*
.933333 1 .8 rg
n 24 72 66 12 re f*
.933333 1 .8 rg
n 24 60 108 12 re f*
.933333 1 .8 rg
n 24 48 120 12 re f*
.933333 1 .8 rg
n 24 36 72 12 re f*
.933333 1 .8 rg
n 12 24 60 12 re f*
.933333 1 .8 rg
n 72 24 6 12 re f*
.933333 1 .8 rg
n 84 24 6 12 re f*
.933333 1 .8 rg
n 12 12 48 12 re f*
.933333 1 .8 rg
n 60 12 6 12 re f*
.933333 1 .8 rg
n 72 12 126 12 re f*
.933333 1 .8 rg
n 12 0 48 12 re f*
.933333 1 .8 rg
n 60 0 6 12 re f*
.933333 1 .8 rg
n 72 0 84 12 re f*
BT 1 0 0 1 0 290 Tm 12 TL /F6 10 Tf .501961 .501961 .501961 rg (# test            : Assembly test name) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# description     : Description of this test) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# gen_opts        : Instruction generator options) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# iterations      : Number of iterations of this test) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# no_iss          : Enable/disable ISS simulation \(Optional\)) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# gen_test        : Test name used by the instruction generator) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# rtl_test        : RTL simulation test name) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# cmp_opts        : Compile options passed to the instruction generator) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# sim_opts        : Simulation options passed to the instruction generator) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# no_post_compare : Enable/disable log comparison \(Optional\)) Tj /F4 10 Tf 0 0 0 rg  T* /F6 10 Tf .501961 .501961 .501961 rg (# compare_opts    : Options for the RTL ) Tj (&) Tj ( ISS trace comparison) Tj /F4 10 Tf 0 0 0 rg  T*  T* (-) Tj ( ) Tj /F7 10 Tf 0 .439216 0 rg (test) Tj /F4 10 Tf 0 0 0 rg (:) Tj ( ) Tj (riscv_arithmetic_basic_test) Tj  T* (  ) Tj /F7 10 Tf 0 .439216 0 rg (description) Tj /F4 10 Tf 0 0 0 rg (:) Tj ( ) Tj (>) Tj  T* (    ) Tj /F7 10 Tf 0 .188235 .376471 rg (Arithmetic instruction test, no load/store/branch instructions) Tj /F4 10 Tf 0 0 0 rg  T* (  ) Tj /F7 10 Tf 0 .439216 0 rg (gen_opts) Tj /F4 10 Tf 0 0 0 rg (:) Tj ( ) Tj (>) Tj  T* (    ) Tj /F7 10 Tf 0 .188235 .376471 rg (+instr_cnt=10000) Tj /F4 10 Tf 0 0 0 rg  T* (    ) Tj /F7 10 Tf 0 .188235 .376471 rg (+num_of_sub_program=0) Tj /F4 10 Tf 0 0 0 rg  T* (    ) Tj /F7 10 Tf 0 .188235 .376471 rg (+no_fence=1) Tj /F4 10 Tf 0 0 0 rg  T* (    ) Tj /F7 10 Tf 0 .188235 .376471 rg (+no_data_page=1'b1) Tj /F4 10 Tf 0 0 0 rg  T* (    ) Tj /F7 10 Tf 0 .188235 .376471 rg (+no_branch_jump=1'b1) Tj /F4 10 Tf 0 0 0 rg  T* (    ) Tj /F7 10 Tf 0 .188235 .376471 rg (+boot_mode=m) Tj /F4 10 Tf 0 0 0 rg  T* (  ) Tj /F7 10 Tf 0 .439216 0 rg (iterations) Tj /F4 10 Tf 0 0 0 rg (:) Tj ( ) Tj (2) Tj  T* (  ) Tj /F7 10 Tf 0 .439216 0 rg (gen_test) Tj /F4 10 Tf 0 0 0 rg (:) Tj ( ) Tj (riscv_instr_base_test) Tj  T* (  ) Tj /F7 10 Tf 0 .439216 0 rg (rtl_test) Tj /F4 10 Tf 0 0 0 rg (:) Tj ( ) Tj (core_base_test) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 131.8394 cm
Q
q
1 0 0 1 40.01575 63.03937 cm
.933333 .933333 .933333 rg
n 0 68.8 515.2441 -68.8 re f*
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 6 50.8 Tm  T* ET
q
1 0 0 1 8 44 cm
q
0 0 0 rg
BT 1 0 0 1 0 2.8 Tm /F3 14 Tf 16.8 TL (Note) Tj T* ET
Q
Q
q
1 0 0 1 8 8 cm
q
BT 1 0 0 1 0 14 Tm -0.128494 Tw 12 TL /F1 10 Tf 0 0 0 rg (To automatically generate CSR tests without having to explicitly run the script, include ) Tj /F5 10 Tf (riscv_csr_test) Tj /F1 10 Tf ( in the testlist) Tj T* 0 Tw (as shown in the example YAML file above.) Tj T* ET
Q
Q
q
1 J
1 j
.8 .8 .8 RG
.5 w
n 0 68.8 m 515.2441 68.8 l S
n 0 0 m 515.2441 0 l S
n 0 0 m 0 68.8 l S
n 515.2441 0 m 515.2441 68.8 l S
Q
Q
q
1 0 0 1 40.01575 57.03937 cm
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Configuration) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (5) Tj T* ET
Q
Q
 
endstream
endobj
134 0 obj
<<
/Length 14085
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 770.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Runtime options of the generator) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 758.2394 cm
Q
q
1 0 0 1 40.01575 310.2394 cm
1 1 1 rg
n 0 448 515.2441 -16 re f*
.878431 .878431 .878431 rg
n 0 432 515.2441 -18 re f*
1 1 1 rg
n 0 414 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 396 515.2441 -18 re f*
1 1 1 rg
n 0 378 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 360 515.2441 -18 re f*
1 1 1 rg
n 0 342 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 324 515.2441 -18 re f*
1 1 1 rg
n 0 306 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 288 515.2441 -18 re f*
1 1 1 rg
n 0 270 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 252 515.2441 -18 re f*
1 1 1 rg
n 0 234 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 216 515.2441 -18 re f*
1 1 1 rg
n 0 198 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 180 515.2441 -18 re f*
1 1 1 rg
n 0 162 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 144 515.2441 -18 re f*
1 1 1 rg
n 0 126 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 108 515.2441 -18 re f*
1 1 1 rg
n 0 90 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 72 515.2441 -18 re f*
1 1 1 rg
n 0 54 515.2441 -18 re f*
.878431 .878431 .878431 rg
n 0 36 515.2441 -18 re f*
1 1 1 rg
n 0 18 515.2441 -18 re f*
.960784 .960784 .862745 rg
n 0 448 515.2441 -16 re f*
.12549 .262745 .360784 rg
BT /F2 10 Tf 10 TL ET
q
1 0 0 1 6 435 cm
q
.960784 .960784 .862745 rg
n 0 0 155.8885 10 re f*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 0 Tm /F2 10 Tf 10 TL 61.83426 0 Td (Option) Tj T* -61.83426 0 Td ET
Q
Q
q
1 0 0 1 173.8885 435 cm
q
.960784 .960784 .862745 rg
n 0 0 283.2522 10 re f*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 0 Tm /F2 10 Tf 10 TL 114.1211 0 Td (Description) Tj T* -114.1211 0 Td ET
Q
Q
q
1 0 0 1 469.1408 435 cm
q
.960784 .960784 .862745 rg
n 0 0 40.10334 10 re f*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 0 Tm /F2 10 Tf 10 TL 3.106668 0 Td (Default) Tj T* -3.106668 0 Td ET
Q
Q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 417 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (num_of_tests) Tj T* ET
Q
Q
q
1 0 0 1 173.8885 417 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Number of assembly tests to be generated) Tj T* ET
Q
Q
q
1 0 0 1 469.1408 417 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (1) Tj T* ET
Q
Q
q
1 0 0 1 6 399 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (num_of_sub_program) Tj T* ET
Q
Q
q
1 0 0 1 173.8885 399 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Number of sub-program in one test) Tj T* ET
Q
Q
q
1 0 0 1 469.1408 399 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (5) Tj T* ET
Q
Q
q
1 0 0 1 6 381 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (instr_cnt) Tj T* ET
Q
Q
q
1 0 0 1 173.8885 381 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Instruction count per test) Tj T* ET
Q
Q
q
1 0 0 1 469.1408 381 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (200) Tj T* ET
Q
Q
q
1 0 0 1 6 363 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (enable_page_table_exception) Tj T* ET
Q
Q
q
1 0 0 1 173.8885 363 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Enable page table exception) Tj T* ET
Q
Q
q
1 0 0 1 469.1408 363 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 6 345 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (enable_unaligned_load_store) Tj T* ET
Q
Q
q
1 0 0 1 173.8885 345 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Enable unaligned memory operations) Tj T* ET
Q
Q
q
1 0 0 1 469.1408 345 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 6 327 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (no_ebreak) Tj T* ET
Q
Q
q
1 0 0 1 173.8885 327 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Disable ebreak instruction) Tj T* ET
Q
Q
q
1 0 0 1 469.1408 327 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (1) Tj T* ET
Q
Q
q
1 0 0 1 6 309 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (no_wfi) Tj T* ET
Q
Q
q
1 0 0 1 173.8885 309 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Disable WFI instruction) Tj T* ET
Q
Q
q
1 0 0 1 469.1408 309 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (1) Tj T* ET
Q
Q
q
1 0 0 1 6 291 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (no_dret) Tj T* ET
Q
Q
q
1 0 0 1 173.8885 291 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Disable dret instruction) Tj T* ET
Q
Q
q
1 0 0 1 469.1408 291 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (1) Tj T* ET
Q
Q
q
1 0 0 1 6 273 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (no_branch_jump) Tj T* ET
Q
Q
q
1 0 0 1 173.8885 273 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Disable branch/jump instruction) Tj T* ET
Q
Q
q
1 0 0 1 469.1408 273 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 6 255 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (no_load_store) Tj T* ET
Q
Q
q
1 0 0 1 173.8885 255 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Disable load/store instruction) Tj T* ET
Q
Q
q
1 0 0 1 469.1408 255 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 6 237 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (no_csr_instr) Tj T* ET
Q
Q
q
1 0 0 1 173.8885 237 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Disable CSR instruction) Tj T* ET
Q
Q
q
1 0 0 1 469.1408 237 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 6 219 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (no_fence) Tj T* ET
Q
Q
q
1 0 0 1 173.8885 219 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Disable fence instruction) Tj T* ET
Q
Q
q
1 0 0 1 469.1408 219 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 6 201 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (illegal_instr_ratio) Tj T* ET
Q
Q
q
1 0 0 1 173.8885 201 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Number of illegal instructions every 1000 instr) Tj T* ET
Q
Q
q
1 0 0 1 469.1408 201 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 6 183 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (hint_instr_ratio) Tj T* ET
Q
Q
q
1 0 0 1 173.8885 183 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Number of HINT instructions every 1000 instr) Tj T* ET
Q
Q
q
1 0 0 1 469.1408 183 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 6 165 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (boot_mode) Tj T* ET
Q
Q
q
1 0 0 1 173.8885 165 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (m:Machine mode, s:Supervisor mode, u:User mode) Tj T* ET
Q
Q
q
1 0 0 1 469.1408 165 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (m) Tj T* ET
Q
Q
q
1 0 0 1 6 147 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (no_directed_instr) Tj T* ET
Q
Q
q
1 0 0 1 173.8885 147 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Disable directed instruction stream) Tj T* ET
Q
Q
q
1 0 0 1 469.1408 147 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 6 129 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (require_signature_addr) Tj T* ET
Q
Q
q
1 0 0 1 173.8885 129 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Set to 1 if test needs to talk to testbench) Tj T* ET
Q
Q
q
1 0 0 1 469.1408 129 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 6 111 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (signature_addr) Tj T* ET
Q
Q
q
1 0 0 1 173.8885 111 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Write to this addr to send data to testbench) Tj T* ET
Q
Q
q
1 0 0 1 469.1408 111 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 6 93 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (enable_interrupt) Tj T* ET
Q
Q
q
1 0 0 1 173.8885 93 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Enable MStatus.MIE, used in interrupt test) Tj T* ET
Q
Q
q
1 0 0 1 469.1408 93 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 6 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (gen_debug_section) Tj T* ET
Q
Q
q
1 0 0 1 173.8885 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Disables randomized debug_rom section) Tj T* ET
Q
Q
q
1 0 0 1 469.1408 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 6 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (num_debug_sub_program) Tj T* ET
Q
Q
q
1 0 0 1 173.8885 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Number of debug sub-programs in test) Tj T* ET
Q
Q
q
1 0 0 1 469.1408 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 6 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (enable_ebreak_in_debug_rom) Tj T* ET
Q
Q
q
1 0 0 1 173.8885 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Generate ebreak instructions inside debug ROM) Tj T* ET
Q
Q
q
1 0 0 1 469.1408 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (set_dcsr_ebreak) Tj T* ET
Q
Q
q
1 0 0 1 173.8885 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Randomly enable dcsr.ebreak\(m/s/u\)) Tj T* ET
Q
Q
q
1 0 0 1 469.1408 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (randomize_csr) Tj T* ET
Q
Q
q
1 0 0 1 173.8885 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Fully randomize main CSRs \(xSTATUS, xIE\)) Tj T* ET
Q
Q
q
1 0 0 1 469.1408 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 432 m 515.2441 432 l S
n 0 414 m 515.2441 414 l S
n 0 396 m 515.2441 396 l S
n 0 378 m 515.2441 378 l S
n 0 360 m 515.2441 360 l S
n 0 342 m 515.2441 342 l S
n 0 324 m 515.2441 324 l S
n 0 306 m 515.2441 306 l S
n 0 288 m 515.2441 288 l S
n 0 270 m 515.2441 270 l S
n 0 252 m 515.2441 252 l S
n 0 234 m 515.2441 234 l S
n 0 216 m 515.2441 216 l S
n 0 198 m 515.2441 198 l S
n 0 180 m 515.2441 180 l S
n 0 162 m 515.2441 162 l S
n 0 144 m 515.2441 144 l S
n 0 126 m 515.2441 126 l S
n 0 108 m 515.2441 108 l S
n 0 90 m 515.2441 90 l S
n 0 72 m 515.2441 72 l S
n 0 54 m 515.2441 54 l S
n 0 36 m 515.2441 36 l S
n 0 18 m 515.2441 18 l S
n 167.8885 0 m 167.8885 448 l S
n 463.1408 0 m 463.1408 448 l S
n 0 448 m 515.2441 448 l S
n 0 0 m 515.2441 0 l S
n 0 0 m 0 448 l S
n 515.2441 0 m 515.2441 448 l S
Q
Q
q
1 0 0 1 40.01575 310.2394 cm
Q
q
1 0 0 1 40.01575 277.4394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Setup Privileged CSR description \(optional\)) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 247.4394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL -0.024567 Tw (This YAML description file of all CSRs is only required for the privileged CSR test. All other standard tests do not use) Tj T* 0 Tw (this description.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 229.4394 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (CSR descriptions in YAML format) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 66.63937 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 162 re B*
Q
q
.933333 1 .8 rg
n 0 144 6 12 re f*
.933333 1 .8 rg
n 12 144 18 12 re f*
.933333 1 .8 rg
n 30 144 6 12 re f*
.933333 1 .8 rg
n 42 144 48 12 re f*
.933333 1 .8 rg
n 12 132 66 12 re f*
.933333 1 .8 rg
n 78 132 6 12 re f*
.933333 1 .8 rg
n 90 132 6 12 re f*
.933333 1 .8 rg
n 24 120 102 12 re f*
.933333 1 .8 rg
n 12 108 42 12 re f*
.933333 1 .8 rg
n 54 108 6 12 re f*
.933333 1 .8 rg
n 66 108 30 12 re f*
.933333 1 .8 rg
n 12 96 84 12 re f*
.933333 1 .8 rg
n 96 96 6 12 re f*
.933333 1 .8 rg
n 108 96 96 12 re f*
.933333 1 .8 rg
n 12 84 24 12 re f*
.933333 1 .8 rg
n 36 84 6 12 re f*
.933333 1 .8 rg
n 24 72 6 12 re f*
.933333 1 .8 rg
n 36 72 84 12 re f*
.933333 1 .8 rg
n 120 72 6 12 re f*
.933333 1 .8 rg
n 36 60 6 12 re f*
.933333 1 .8 rg
n 48 60 66 12 re f*
.933333 1 .8 rg
n 114 60 6 12 re f*
.933333 1 .8 rg
n 126 60 6 12 re f*
.933333 1 .8 rg
n 60 48 102 12 re f*
.933333 1 .8 rg
n 36 36 6 12 re f*
.933333 1 .8 rg
n 48 36 24 12 re f*
.933333 1 .8 rg
n 72 36 6 12 re f*
.933333 1 .8 rg
n 84 36 138 12 re f*
.933333 1 .8 rg
n 36 24 6 12 re f*
.933333 1 .8 rg
n 48 24 54 12 re f*
.933333 1 .8 rg
n 102 24 6 12 re f*
.933333 1 .8 rg
n 114 24 54 12 re f*
.933333 1 .8 rg
n 36 12 6 12 re f*
.933333 1 .8 rg
n 48 12 18 12 re f*
.933333 1 .8 rg
n 66 12 6 12 re f*
.933333 1 .8 rg
n 78 12 42 12 re f*
.933333 1 .8 rg
n 36 0 6 12 re f*
.933333 1 .8 rg
n 48 0 18 12 re f*
.933333 1 .8 rg
n 66 0 6 12 re f*
.933333 1 .8 rg
n 78 0 42 12 re f*
BT 1 0 0 1 0 146 Tm 12 TL /F4 10 Tf 0 0 0 rg (-) Tj ( ) Tj /F7 10 Tf 0 .439216 0 rg (csr) Tj /F4 10 Tf 0 0 0 rg (:) Tj ( ) Tj (CSR_NAME) Tj  T* (  ) Tj /F7 10 Tf 0 .439216 0 rg (description) Tj /F4 10 Tf 0 0 0 rg (:) Tj ( ) Tj (>) Tj  T* (    ) Tj /F7 10 Tf 0 .188235 .376471 rg (BRIEF_DESCRIPTION) Tj /F4 10 Tf 0 0 0 rg  T* (  ) Tj /F7 10 Tf 0 .439216 0 rg (address) Tj /F4 10 Tf 0 0 0 rg (:) Tj ( ) Tj (0x###) Tj  T* (  ) Tj /F7 10 Tf 0 .439216 0 rg (privilege_mode) Tj /F4 10 Tf 0 0 0 rg (:) Tj ( ) Tj (MODE \(D/M/S/H/U\)) Tj  T* (  ) Tj /F7 10 Tf 0 .439216 0 rg (rv32) Tj /F4 10 Tf 0 0 0 rg (:) Tj  T* (    ) Tj (-) Tj ( ) Tj /F7 10 Tf 0 .439216 0 rg (MSB_FIELD_NAME) Tj /F4 10 Tf 0 0 0 rg (:) Tj  T* (      ) Tj (-) Tj ( ) Tj /F7 10 Tf 0 .439216 0 rg (description) Tj /F4 10 Tf 0 0 0 rg (:) Tj ( ) Tj (>) Tj  T* (          ) Tj /F7 10 Tf 0 .188235 .376471 rg (BRIEF_DESCRIPTION) Tj /F4 10 Tf 0 0 0 rg  T* (      ) Tj (-) Tj ( ) Tj /F7 10 Tf 0 .439216 0 rg (type) Tj /F4 10 Tf 0 0 0 rg (:) Tj ( ) Tj (TYPE \(WPRI/WLRL/WARL/R\)) Tj  T* (      ) Tj (-) Tj ( ) Tj /F7 10 Tf 0 .439216 0 rg (reset_val) Tj /F4 10 Tf 0 0 0 rg (:) Tj ( ) Tj (RESET_VAL) Tj  T* (      ) Tj (-) Tj ( ) Tj /F7 10 Tf 0 .439216 0 rg (msb) Tj /F4 10 Tf 0 0 0 rg (:) Tj ( ) Tj (MSB_POS) Tj  T* (      ) Tj (-) Tj ( ) Tj /F7 10 Tf 0 .439216 0 rg (lsb) Tj /F4 10 Tf 0 0 0 rg (:) Tj ( ) Tj (LSB_POS) Tj  T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Configuration) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (6) Tj T* ET
Q
Q
 
endstream
endobj
135 0 obj
<<
/Length 8355
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 540.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 246 re B*
Q
q
.933333 1 .8 rg
n 24 228 6 12 re f*
.933333 1 .8 rg
n 36 228 18 12 re f*
.933333 1 .8 rg
n 24 216 6 12 re f*
.933333 1 .8 rg
n 36 216 18 12 re f*
.933333 1 .8 rg
n 24 204 6 12 re f*
.933333 1 .8 rg
n 36 204 84 12 re f*
.933333 1 .8 rg
n 120 204 6 12 re f*
.933333 1 .8 rg
n 36 192 6 12 re f*
.933333 1 .8 rg
n 48 192 66 12 re f*
.933333 1 .8 rg
n 114 192 6 12 re f*
.933333 1 .8 rg
n 126 192 18 12 re f*
.933333 1 .8 rg
n 36 180 6 12 re f*
.933333 1 .8 rg
n 48 180 24 12 re f*
.933333 1 .8 rg
n 72 180 6 12 re f*
.933333 1 .8 rg
n 84 180 18 12 re f*
.933333 1 .8 rg
n 36 168 6 12 re f*
.933333 1 .8 rg
n 48 168 18 12 re f*
.933333 1 .8 rg
n 12 156 24 12 re f*
.933333 1 .8 rg
n 36 156 6 12 re f*
.933333 1 .8 rg
n 24 144 6 12 re f*
.933333 1 .8 rg
n 36 144 84 12 re f*
.933333 1 .8 rg
n 120 144 6 12 re f*
.933333 1 .8 rg
n 36 132 6 12 re f*
.933333 1 .8 rg
n 48 132 66 12 re f*
.933333 1 .8 rg
n 114 132 6 12 re f*
.933333 1 .8 rg
n 126 132 6 12 re f*
.933333 1 .8 rg
n 60 120 102 12 re f*
.933333 1 .8 rg
n 36 108 6 12 re f*
.933333 1 .8 rg
n 48 108 24 12 re f*
.933333 1 .8 rg
n 72 108 6 12 re f*
.933333 1 .8 rg
n 84 108 138 12 re f*
.933333 1 .8 rg
n 36 96 6 12 re f*
.933333 1 .8 rg
n 48 96 54 12 re f*
.933333 1 .8 rg
n 102 96 6 12 re f*
.933333 1 .8 rg
n 114 96 54 12 re f*
.933333 1 .8 rg
n 36 84 6 12 re f*
.933333 1 .8 rg
n 48 84 18 12 re f*
.933333 1 .8 rg
n 66 84 6 12 re f*
.933333 1 .8 rg
n 78 84 42 12 re f*
.933333 1 .8 rg
n 36 72 6 12 re f*
.933333 1 .8 rg
n 48 72 18 12 re f*
.933333 1 .8 rg
n 66 72 6 12 re f*
.933333 1 .8 rg
n 78 72 42 12 re f*
.933333 1 .8 rg
n 24 60 6 12 re f*
.933333 1 .8 rg
n 36 60 18 12 re f*
.933333 1 .8 rg
n 24 48 6 12 re f*
.933333 1 .8 rg
n 36 48 18 12 re f*
.933333 1 .8 rg
n 24 36 6 12 re f*
.933333 1 .8 rg
n 36 36 84 12 re f*
.933333 1 .8 rg
n 120 36 6 12 re f*
.933333 1 .8 rg
n 36 24 6 12 re f*
.933333 1 .8 rg
n 48 24 66 12 re f*
.933333 1 .8 rg
n 114 24 6 12 re f*
.933333 1 .8 rg
n 126 24 18 12 re f*
.933333 1 .8 rg
n 36 12 6 12 re f*
.933333 1 .8 rg
n 48 12 24 12 re f*
.933333 1 .8 rg
n 72 12 6 12 re f*
.933333 1 .8 rg
n 84 12 18 12 re f*
.933333 1 .8 rg
n 36 0 6 12 re f*
.933333 1 .8 rg
n 48 0 18 12 re f*
BT 1 0 0 1 0 230 Tm 12 TL /F4 10 Tf 0 0 0 rg (    ) Tj (-) Tj ( ) Tj (...) Tj  T* (    ) Tj (-) Tj ( ) Tj (...) Tj  T* (    ) Tj (-) Tj ( ) Tj /F7 10 Tf 0 .439216 0 rg (LSB_FIELD_NAME) Tj /F4 10 Tf 0 0 0 rg (:) Tj  T* (      ) Tj (-) Tj ( ) Tj /F7 10 Tf 0 .439216 0 rg (description) Tj /F4 10 Tf 0 0 0 rg (:) Tj ( ) Tj (...) Tj  T* (      ) Tj (-) Tj ( ) Tj /F7 10 Tf 0 .439216 0 rg (type) Tj /F4 10 Tf 0 0 0 rg (:) Tj ( ) Tj (...) Tj  T* (      ) Tj (-) Tj ( ) Tj (...) Tj  T* (  ) Tj /F7 10 Tf 0 .439216 0 rg (rv64) Tj /F4 10 Tf 0 0 0 rg (:) Tj  T* (    ) Tj (-) Tj ( ) Tj /F7 10 Tf 0 .439216 0 rg (MSB_FIELD_NAME) Tj /F4 10 Tf 0 0 0 rg (:) Tj  T* (      ) Tj (-) Tj ( ) Tj /F7 10 Tf 0 .439216 0 rg (description) Tj /F4 10 Tf 0 0 0 rg (:) Tj ( ) Tj (>) Tj  T* (          ) Tj /F7 10 Tf 0 .188235 .376471 rg (BRIEF_DESCRIPTION) Tj /F4 10 Tf 0 0 0 rg  T* (      ) Tj (-) Tj ( ) Tj /F7 10 Tf 0 .439216 0 rg (type) Tj /F4 10 Tf 0 0 0 rg (:) Tj ( ) Tj (TYPE \(WPRI/WLRL/WARL/R\)) Tj  T* (      ) Tj (-) Tj ( ) Tj /F7 10 Tf 0 .439216 0 rg (reset_val) Tj /F4 10 Tf 0 0 0 rg (:) Tj ( ) Tj (RESET_VAL) Tj  T* (      ) Tj (-) Tj ( ) Tj /F7 10 Tf 0 .439216 0 rg (msb) Tj /F4 10 Tf 0 0 0 rg (:) Tj ( ) Tj (MSB_POS) Tj  T* (      ) Tj (-) Tj ( ) Tj /F7 10 Tf 0 .439216 0 rg (lsb) Tj /F4 10 Tf 0 0 0 rg (:) Tj ( ) Tj (LSB_POS) Tj  T* (    ) Tj (-) Tj ( ) Tj (...) Tj  T* (    ) Tj (-) Tj ( ) Tj (...) Tj  T* (    ) Tj (-) Tj ( ) Tj /F7 10 Tf 0 .439216 0 rg (LSB_FIELD_NAME) Tj /F4 10 Tf 0 0 0 rg (:) Tj  T* (      ) Tj (-) Tj ( ) Tj /F7 10 Tf 0 .439216 0 rg (description) Tj /F4 10 Tf 0 0 0 rg (:) Tj ( ) Tj (...) Tj  T* (      ) Tj (-) Tj ( ) Tj /F7 10 Tf 0 .439216 0 rg (type) Tj /F4 10 Tf 0 0 0 rg (:) Tj ( ) Tj (...) Tj  T* (      ) Tj (-) Tj ( ) Tj (...) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 508.2394 cm
q
BT 1 0 0 1 0 14 Tm .185783 Tw 12 TL /F1 10 Tf 0 0 0 rg (To specify what ISA width should be generated in the test, simply include the matching rv32/rv64/rv128 entry and fill) Tj T* 0 Tw (in the appropriate CSR field entries.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 475.4394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Privileged CSR Test Generation \(optional\)) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 397.4394 cm
q
BT 1 0 0 1 0 62 Tm 1.114006 Tw 12 TL /F1 10 Tf 0 0 0 rg (The CSR generation script is located at ) Tj 0 0 .501961 rg (scripts/gen_csr_test.py) Tj 0 0 0 rg (. The CSR test code that this script generates will) Tj T* 0 Tw .852594 Tw (execute every CSR instruction on every processor implemented CSR, writing values to the CSR and then using a) Tj T* 0 Tw .278561 Tw (prediction function to calculate a reference value that will be written into another GPR. The reference value will then) Tj T* 0 Tw -0.055795 Tw (be compared to the value actually stored in the CSR to determine whether to jump to the failure condition or continue) Tj T* 0 Tw .167205 Tw (executing, allowing it to be completely self checking. This script has been integrated with run.py. If you want to run it) Tj T* 0 Tw (separately, you can get the command reference with \226help:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 378.6394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 18 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F4 10 Tf 12 TL (python3 scripts/gen_csr_test.py --help) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 348.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F3 12 Tf .12549 .262745 .360784 rg (Adding new instruction stream and test) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 318.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .037131 Tw (Please refer to src/src/riscv_load_store_instr_lib.sv for an example on how to add a new instruction stream. After the) Tj T* 0 Tw (new instruction stream is created, you can use a runtime option to mix it with random instructions:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 239.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 562 78 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 62 Tm /F4 10 Tf 12 TL (//+directed_instr_n=instr_sequence_name,frequency\(number of insertions per 1000 instructions\)) Tj T* (+directed_instr_5=riscv_multi_page_load_store_instr_stream,4) Tj T*  T* (// An alternative command line options for directed instruction stream) Tj T* (+stream_name_0=riscv_multi_page_load_store_instr_stream) Tj T* (+stream_freq_0=4) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 209.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F3 12 Tf .12549 .262745 .360784 rg (Integrate a new ISS) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 191.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (You can add a new entry in ) Tj 0 0 .501961 rg (iss.yaml) Tj 0 0 0 rg (:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 136.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 54 re B*
Q
q
BT 1 0 0 1 0 38 Tm 12 TL /F4 10 Tf 0 0 0 rg (- iss: new_iss_name) Tj T* (  path_var: ISS_PATH) Tj T* (  cmd: ) Tj (>) Tj  T* (    ) Tj (<) Tj (path_var) Tj (>) Tj (/iss_executable --isa=) Tj (<) Tj (variant) Tj (>) Tj ( -l ) Tj (<) Tj (elf) Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 116.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Simulate with the new ISS:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 97.43937 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 18 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F4 10 Tf 12 TL (run --test riscv_arithmetic_basic_test --iss new_iss_name) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 62.23937 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 25.2 re B*
Q
q
BT 1 0 0 1 0 3.2 Tm 19.2 TL /F2 16 Tf .12549 .262745 .360784 rg (End to End Simulation Flow) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (End to End Simulation Flow) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (7) Tj T* ET
Q
Q
 
endstream
endobj
136 0 obj
<<
/Length 9934
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 739.0394 cm
q
BT 1 0 0 1 0 38 Tm 1.903373 Tw 12 TL /F1 10 Tf 0 0 0 rg (We have collaborated with LowRISC to apply this flow for ) Tj 0 0 .501961 rg (IBEX RISC-V core verification) Tj 0 0 0 rg (. You can use it as a) Tj T* 0 Tw 4.11494 Tw (reference to setup end-to-end co-simulation flow. This repo is still under active development, this is the) Tj T* 0 Tw 2.8657 Tw (recommended approach to customize the instruction generator while keeping the effort of merging upstream) Tj T* 0 Tw (changes to a minimum.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 733.0394 cm
Q
q
1 0 0 1 40.01575 733.0394 cm
Q
q
1 0 0 1 40.01575 709.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (1.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL -0.08506 Tw (Do not modify the upstream classes directly. When possible, extend from the upstream classses and implement) Tj T* 0 Tw (your own functionalities.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 703.0394 cm
Q
q
1 0 0 1 40.01575 667.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (2.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 26 Tm .073675 Tw 12 TL /F1 10 Tf 0 0 0 rg (Add your extensions under user_extension directory, and add the files to user_extension/user_extension.svh. If) Tj T* 0 Tw .299006 Tw (you prefer to put your extensions in a different directory, you can use \223-ext <) Tj (user_extension_path) Tj (>) Tj (\224 to override) Tj T* 0 Tw (the user extension path.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 661.0394 cm
Q
q
1 0 0 1 40.01575 649.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (3.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Create a new target directory and customize the setting and testlist) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 643.0394 cm
Q
q
1 0 0 1 40.01575 631.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (4.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Run the generator with ) Tj /F4 10 Tf (--custom_target) Tj ( ) Tj (<) Tj (target_dir) Tj (>) Tj ( ) Tj (--isa) Tj ( ) Tj (<) Tj (isa) Tj (>) Tj ( ) Tj (--mabi) Tj ( ) Tj (<) Tj (mabi) Tj (>) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 625.0394 cm
Q
q
1 0 0 1 40.01575 601.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (5.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm 23.7549 Tw 12 TL /F1 10 Tf 0 0 0 rg (Use command line type override to use your extended classes.) Tj T* 0 Tw /F4 10 Tf (--sim_opts="+uvm_set_type_override=) Tj (<) Tj (upstream_class) Tj (>) Tj (,) Tj (<) Tj (extended_class) Tj (>) Tj (") Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 595.0394 cm
Q
q
1 0 0 1 40.01575 559.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (6.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 26 Tm 6.314918 Tw 12 TL /F1 10 Tf 0 0 0 rg (If extending ) Tj /F4 10 Tf (riscv_asm_program_gen) Tj /F1 10 Tf ( class is desired, must use this command line override:) Tj T* 0 Tw /F4 10 Tf (--sim_opts="+uvm_set_inst_override=riscv_asm_program_gen,) Tj (<) Tj (extended) Tj T* (class) Tj (>) Tj (,'uvm_test_top.asm_gen'") Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 559.0394 cm
Q
q
1 0 0 1 40.01575 541.0394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (You can refer to ) Tj 0 0 .501961 rg (riscv-dv extension for ibex) Tj 0 0 0 rg ( for a working example.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 523.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (We have plan to open-source the end-to-end environments of other advanced RISC-V processors. Stay tuned!) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 487.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 25.2 re B*
Q
q
BT 1 0 0 1 0 3.2 Tm 19.2 TL /F2 16 Tf .12549 .262745 .360784 rg (Generator Flow) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 452.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 25.2 re B*
Q
q
BT 1 0 0 1 0 3.2 Tm 19.2 TL /F2 16 Tf .12549 .262745 .360784 rg (Coverage Model) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 419.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F3 14 Tf .12549 .262745 .360784 rg (Functional coverage \(work in progress\)) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 353.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 50 Tm /F1 10 Tf 12 TL -0.034744 Tw (This flow extracts functional coverage information from the instruction trace generated by ISS. It\222s independent of the) Tj T* 0 Tw .000205 Tw (instruction generation flow and does not require a tracer implementation in the RTL. You can use this flow as long as) Tj T* 0 Tw .265433 Tw (your program can be run with an ISS supported in this flow. The flow parses the instruction trace log and converts it) Tj T* 0 Tw -0.075268 Tw (to a CSV trace format. After that, a SV test is run to process the CSV trace files and sample functional coverage from) Tj T* 0 Tw (there.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 335.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The functional covergroup is defined in ) Tj 0 0 .501961 rg (riscv_instr_cover_group.sv) Tj 0 0 0 rg (. It includes below major categories:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 329.8394 cm
Q
q
1 0 0 1 40.01575 329.8394 cm
Q
q
1 0 0 1 40.01575 317.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Cover all operands for each instruction) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 311.8394 cm
Q
q
1 0 0 1 40.01575 299.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Hazard conditions) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 293.8394 cm
Q
q
1 0 0 1 40.01575 281.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Corner cases like overflow, underflow, divide by zero) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 275.8394 cm
Q
q
1 0 0 1 40.01575 263.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Aligned/unaligned load/store) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 257.8394 cm
Q
q
1 0 0 1 40.01575 245.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Positive/negative immediate value) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 239.8394 cm
Q
q
1 0 0 1 40.01575 227.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Forward/backward branches, branch hit history) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 221.8394 cm
Q
q
1 0 0 1 40.01575 209.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Hint instruction) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 203.8394 cm
Q
q
1 0 0 1 40.01575 191.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Illegal instruction) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 185.8394 cm
Q
q
1 0 0 1 40.01575 173.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (All compressed and non-compressed opcode) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 167.8394 cm
Q
q
1 0 0 1 40.01575 155.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Access to all implemened privileged CSR) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 149.8394 cm
Q
q
1 0 0 1 40.01575 137.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Exception and interrupt) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 137.8394 cm
Q
q
1 0 0 1 40.01575 107.8394 cm
q
BT 1 0 0 1 0 14 Tm -0.061995 Tw 12 TL /F1 10 Tf 0 0 0 rg (The functional covergroup is still under active development. Please feel free to add anything you are interested or file) Tj T* 0 Tw (a bug for any feature request.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 77.83937 cm
q
BT 1 0 0 1 0 14 Tm 1.272435 Tw 12 TL /F1 10 Tf 0 0 0 rg (Before start, please check the you have modified ) Tj 0 0 .501961 rg (riscv_core_setting.sv) Tj 0 0 0 rg ( to reflect your processor capabilities. The) Tj T* 0 Tw .816123 Tw (covergroup is selectively instantiated based on this setting so that you don\222t need to deal with excluding unrelated) Tj T* 0 Tw ET
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Generator Flow) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (8) Tj T* ET
Q
Q
 
endstream
endobj
137 0 obj
<<
/Length 3447
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 763.0394 cm
q
BT 1 0 0 1 0 14 Tm .754358 Tw 12 TL /F1 10 Tf 0 0 0 rg (coverpoints later. You also need to get the Spike ISS or riscvOVPsim ISS \(riscv-ovpsim\) setup before running this) Tj T* 0 Tw (flow:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 660.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 102 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 86 Tm /F4 10 Tf 12 TL (# Process spike simulation log and collect functional coverage) Tj T* (cov --dir out/spike_sim) Tj T*  T* (# Get the command reference) Tj T* (cov --help) Tj T*  T* (# Run the coverage flow with predefined targets) Tj T* (cov --dir out/spike_sim --target rv32imc) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 628.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .723205 Tw (The coverage sampling from the CSV could be time consuming if you have a large number of log to process. You) Tj T* 0 Tw (can split them to small batches and run with LSF in parallel:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 597.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 30 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F4 10 Tf 12 TL (# Split the run to process 5 CSV at a time, and run with LSF) Tj T* (cov --dir out/spike_sim --lsf_cmd "bsub ....." -bz 5) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 562.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 25.2 re B*
Q
q
BT 1 0 0 1 0 3.2 Tm 19.2 TL /F2 16 Tf .12549 .262745 .360784 rg (Customize and Extend Generator) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 527.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 25.2 re B*
Q
q
BT 1 0 0 1 0 3.2 Tm 19.2 TL /F2 16 Tf .12549 .262745 .360784 rg (Class Reference) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 491.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 25.2 re B*
Q
q
BT 1 0 0 1 0 3.2 Tm 19.2 TL /F2 16 Tf .12549 .262745 .360784 rg (Command Line Reference) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 451.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 30 re B*
Q
q
BT 1 0 0 1 0 4 Tm 24 TL /F2 20 Tf .12549 .262745 .360784 rg (Indices and tables) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 439.8394 cm
Q
q
1 0 0 1 40.01575 439.8394 cm
Q
q
1 0 0 1 40.01575 427.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
.933333 1 .8 rg
n 0 0 48 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F7 10 Tf 0 0 0 rg (genindex) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 421.8394 cm
Q
q
1 0 0 1 40.01575 409.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
.933333 1 .8 rg
n 0 0 48 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F7 10 Tf 0 0 0 rg (modindex) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 403.8394 cm
Q
q
1 0 0 1 40.01575 391.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
.933333 1 .8 rg
n 0 0 36 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F7 10 Tf 0 0 0 rg (search) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 391.8394 cm
Q
q
1 0 0 1 40.01575 391.8394 cm
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Customize and Extend Generator) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (9) Tj T* ET
Q
Q
 
endstream
endobj
138 0 obj
<<
/Nums [ 0 139 0 R 1 140 0 R 2 141 0 R 3 142 0 R 4 143 0 R 
  5 144 0 R 6 145 0 R 7 146 0 R 8 147 0 R 9 148 0 R 
  10 149 0 R 11 150 0 R 12 151 0 R ]
>>
endobj
139 0 obj
<<
/S /D /St 1
>>
endobj
140 0 obj
<<
/S /D /St 2
>>
endobj
141 0 obj
<<
/S /r /St 1
>>
endobj
142 0 obj
<<
/S /r /St 2
>>
endobj
143 0 obj
<<
/S /D /St 1
>>
endobj
144 0 obj
<<
/S /D /St 2
>>
endobj
145 0 obj
<<
/S /D /St 3
>>
endobj
146 0 obj
<<
/S /D /St 4
>>
endobj
147 0 obj
<<
/S /D /St 5
>>
endobj
148 0 obj
<<
/S /D /St 6
>>
endobj
149 0 obj
<<
/S /D /St 7
>>
endobj
150 0 obj
<<
/S /D /St 8
>>
endobj
151 0 obj
<<
/S /D /St 9
>>
endobj
xref
0 152
0000000000 65535 f 
0000000073 00000 n 
0000000172 00000 n 
0000000279 00000 n 
0000000391 00000 n 
0000000598 00000 n 
0000000805 00000 n 
0000000973 00000 n 
0000001141 00000 n 
0000001309 00000 n 
0000001477 00000 n 
0000001646 00000 n 
0000001815 00000 n 
0000001984 00000 n 
0000002153 00000 n 
0000002322 00000 n 
0000002491 00000 n 
0000002660 00000 n 
0000002829 00000 n 
0000002998 00000 n 
0000003167 00000 n 
0000003336 00000 n 
0000003505 00000 n 
0000003674 00000 n 
0000003843 00000 n 
0000004012 00000 n 
0000004181 00000 n 
0000004350 00000 n 
0000004519 00000 n 
0000004688 00000 n 
0000004857 00000 n 
0000005026 00000 n 
0000005195 00000 n 
0000005364 00000 n 
0000005533 00000 n 
0000005702 00000 n 
0000005871 00000 n 
0000006040 00000 n 
0000006209 00000 n 
0000006378 00000 n 
0000006547 00000 n 
0000006716 00000 n 
0000006885 00000 n 
0000007054 00000 n 
0000007223 00000 n 
0000007392 00000 n 
0000007561 00000 n 
0000007730 00000 n 
0000007899 00000 n 
0000008068 00000 n 
0000008237 00000 n 
0000008406 00000 n 
0000008575 00000 n 
0000008744 00000 n 
0000008913 00000 n 
0000009082 00000 n 
0000009251 00000 n 
0000009420 00000 n 
0000009589 00000 n 
0000009758 00000 n 
0000009927 00000 n 
0000010536 00000 n 
0000010744 00000 n 
0000010864 00000 n 
0000011037 00000 n 
0000011143 00000 n 
0000011259 00000 n 
0000011486 00000 n 
0000011673 00000 n 
0000011865 00000 n 
0000012068 00000 n 
0000012258 00000 n 
0000012465 00000 n 
0000012660 00000 n 
0000012877 00000 n 
0000013146 00000 n 
0000013369 00000 n 
0000013596 00000 n 
0000013710 00000 n 
0000013821 00000 n 
0000014029 00000 n 
0000014258 00000 n 
0000014476 00000 n 
0000014710 00000 n 
0000014932 00000 n 
0000015159 00000 n 
0000015382 00000 n 
0000015595 00000 n 
0000015829 00000 n 
0000016046 00000 n 
0000016262 00000 n 
0000016492 00000 n 
0000016721 00000 n 
0000016969 00000 n 
0000017177 00000 n 
0000017285 00000 n 
0000017543 00000 n 
0000017619 00000 n 
0000017802 00000 n 
0000017912 00000 n 
0000018084 00000 n 
0000018201 00000 n 
0000018335 00000 n 
0000018487 00000 n 
0000018644 00000 n 
0000018783 00000 n 
0000018919 00000 n 
0000019050 00000 n 
0000019221 00000 n 
0000019382 00000 n 
0000019521 00000 n 
0000019666 00000 n 
0000019817 00000 n 
0000019981 00000 n 
0000020170 00000 n 
0000020313 00000 n 
0000020437 00000 n 
0000020581 00000 n 
0000020713 00000 n 
0000020886 00000 n 
0000021017 00000 n 
0000021165 00000 n 
0000021298 00000 n 
0000021424 00000 n 
0000021545 00000 n 
0000021693 00000 n 
0000022613 00000 n 
0000022739 00000 n 
0000029349 00000 n 
0000029475 00000 n 
0000038950 00000 n 
0000048856 00000 n 
0000053486 00000 n 
0000061451 00000 n 
0000070138 00000 n 
0000084277 00000 n 
0000092685 00000 n 
0000102672 00000 n 
0000106172 00000 n 
0000106344 00000 n 
0000106379 00000 n 
0000106414 00000 n 
0000106449 00000 n 
0000106484 00000 n 
0000106519 00000 n 
0000106554 00000 n 
0000106589 00000 n 
0000106624 00000 n 
0000106659 00000 n 
0000106694 00000 n 
0000106729 00000 n 
0000106764 00000 n 
trailer
<<
/ID 
[<a0777479048084b7163652b74d14a71c><a0777479048084b7163652b74d14a71c>]
% ReportLab generated PDF document -- digest (http://www.reportlab.com)

/Info 95 0 R
/Root 94 0 R
/Size 152
>>
startxref
106799
%%EOF
