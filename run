#!/bin/bash
# Copyright 2018 Google LLC
# Copyright 2019 Imperas Software Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# This is simple run script to run a dedicated test or a regression
#
# Usage:
# Run a single test with irun
# ./run -tool irun -test riscv_instr_base_test
#
# Run regression with vcs
# ./run -test all
#
# Change output directory
# ./run -o my_output_dir

DATE=`date +%Y-%m-%d`

# RTL simulator, support vcs, irun, and questa
SIMULATOR="vcs"
SIMULATOR="irun"
SIMULATOR="questa"

# random seed
SEED=`date +%s`

# Test name, "all" means run all tests in the testlist
TEST="riscv_instr_base_test"

# Number of assembly programs to be generated for this test
# This option only apply to single test mode. For the regression mode, the number is specified in
# the testlist
NUM_TESTS=1

# Simulation output directory
OUT="./out_${DATE}"

COMPILE=0
GENERATE=0

# Process command line options
while [[ $# -gt 0 ]]
do
key="$1"
case $key in
    -compile)
    COMPILE=1
    ;;
    -generate)
    GENERATE=1
    ;;
    -tool)
    SIMULATOR="$2"
    shift
    ;;
    -test)
    TEST="$2"
    shift
    ;;
    -n)
    NUM_TESTS="$2"
    shift
    ;;
    -seed)
    SEED="$2"
    shift
    ;;
    -o)
    OUT="$2"
    shift
    ;;
    -help)
    echo "usage:"
    echo "    -tool vcs | irun | questa"
    echo "    -test <name> | all"
    echo "    -n <num tests>"
    echo "    -seed <seed>"
    echo "    -o <output dir>"
    echo "    -generate"
    echo "    -compile"
    exit -1
    ;;
    *)
    echo "unknown option $1"
    exit -1
    ;;
esac
shift
done

# Generate compile and simulation commands
if [[ "$SIMULATOR" == "vcs" ]]; then

  COMPILE_CMD="vcs -file ./vcs.compile.option.f \
                   -f ./files.f -full64 \
                   -l $OUT/compile.log  \
                   -Mdir=$OUT/vcs_simv.csrc \
                   -o $OUT/vcs_simv"

  SIM_CMD="$OUT/vcs_simv +UVM_TESTNAME="

elif [[ "$SIMULATOR" == "irun" ]]; then

  COMPILE_CMD="irun -64bit \
                    -access +rwc \
                    -f ./files.f \
                    -q -sv -uvm  \
                    -vlog_ext +.vh -I. \
                    -uvmhome CDNS-1.2 \
                    -l ${OUT}/compile.log"

  SIM_CMD="irun -R +UVM_TESTNAME="

elif [[ "$SIMULATOR" == "questa" ]]; then
  # COMPILE_CMD="vlog -64 \
  COMPILE_CMD="vlog  -msglimit all -msglimitcount 2 \
                    -f ./files.f \
                    -sv -quiet -mfcu \
                    -L ${QUESTA_HOME}/uvm-1.2  \
                    -l ${OUT}/compile.log"

  echo ${COMPILE_CMD}
  SIM_CMD="vsim riscv_instr_gen_tb_top -msglimit all -msglimitcount 2 -c -quiet -do \"run\" -L ${QUESTA_HOME}/uvm-1.2 +UVM_TESTNAME="

else
  echo "unsupported simulator $SIMULATOR"
  exit -1
fi

if [[ ${COMPILE} == "1" ]]; then
  # Create the library.
  if [ -f work ]; then
      vdel -all
  fi 
  vlib work

  # Clean up previous runs
  rm -rf ${OUT}
  mkdir -p ${OUT}
  mkdir -p ${OUT}/asm_tests

  # Compilation
  ${COMPILE_CMD}
fi

if [[ ${GENERATE} == "1" ]]; then
  mkdir -p ${OUT}
  mkdir -p ${OUT}/asm_tests
  # Run sim
  if [[ ${TEST} == "all" ]]; then
    echo "Running regression with testlist:"
    cat testlist
    while read line; do
      if ! [[ $line =~ ^\/\/ ]]; then
        if [[ $line =~([a-z0-9_-]*)([[:space:]]*)\:([[:space:]]*)([0-9]*) ]]; then
          SEED=`date +%s`
          TEST=${BASH_REMATCH[1]}
          ITERATION=${BASH_REMATCH[4]}
          echo "Running ${TEST}, iteration count: ${ITERATION}"
          ${SIM_CMD}${TEST} +asm_file_name=${OUT}/asm_tests/${TEST} \
                            +ntb_random_seed=${SEED} \
                            -l ${OUT}/sim_${TEST}.log +num_of_tests=${ITERATION}
        fi
      fi
    done < testlist
  else
    echo "Running test ${TEST} with $SIMULATOR.."
    ${SIM_CMD}${TEST} +asm_file_name=${OUT}/asm_tests/${TEST} \
                      -sv_seed ${SEED} \
                      -l ${OUT}/sim_${TEST}.log \
                      +num_of_tests=${NUM_TESTS}
  fi
  #                    +ntb_random_seed=${SEED} \
fi

# List all generated assembly tests
echo "==========================================================="
echo "                Generated RISC-V assembly tests"
echo " ----------------------------------------------------------"
find $OUT/asm_tests -name "*.S" | sort -k11
